!function(e){var t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(a,r,function(t){return e[t]}.bind(null,r));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t,n){
/*! cornerstone-core - 2.2.6 - 2018-09-24 | (c) 2016 Chris Hafey | https://github.com/cornerstonejs/cornerstone */
!function(t,n){e.exports=n()}(window,function(){return function(e){var t=window.webpackHotUpdate;window.webpackHotUpdate=function(e,n){!function(e,t){if(!w[e]||!y[e])return;for(var n in y[e]=!1,t)Object.prototype.hasOwnProperty.call(t,n)&&(m[n]=t[n]);0==--g&&0===p&&T()}(e,n),t&&t(e,n)};var n,a=!0,r="a4d4ad6f905736a5574a",i=1e4,o={},l=[],s=[];function u(e){var t=O[e];if(!t)return S;var a=function(a){return t.hot.active?(O[a]?-1===O[a].parents.indexOf(e)&&O[a].parents.push(e):(l=[e],n=a),-1===t.children.indexOf(a)&&t.children.push(a)):(console.warn("[HMR] unexpected require("+a+") from disposed module "+e),l=[]),S(a)},r=function(e){return{configurable:!0,enumerable:!0,get:function(){return S[e]},set:function(t){S[e]=t}}};for(var i in S)Object.prototype.hasOwnProperty.call(S,i)&&"e"!==i&&"t"!==i&&Object.defineProperty(a,i,r(i));return a.e=function(e){return"ready"===c&&f("prepare"),p++,S.e(e).then(t,function(e){throw t(),e});function t(){p--,"prepare"===c&&(b[e]||x(e),0===p&&0===g&&T())}},a.t=function(e,t){return 1&t&&(e=a(e)),S.t(e,-2&t)},a}var d=[],c="idle";function f(e){c=e;for(var t=0;t<d.length;t++)d[t].call(null,e)}var h,m,v,g=0,p=0,b={},y={},w={};function _(e){return+e+""===e?+e:e}function E(e){if("idle"!==c)throw new Error("check() is only allowed in idle status");return a=e,f("check"),function(e){return e=e||1e4,new Promise(function(t,n){if("undefined"==typeof XMLHttpRequest)return n(new Error("No browser support"));try{var a=new XMLHttpRequest,i=S.p+""+r+".hot-update.json";a.open("GET",i,!0),a.timeout=e,a.send(null)}catch(e){return n(e)}a.onreadystatechange=function(){if(4===a.readyState)if(0===a.status)n(new Error("Manifest request to "+i+" timed out."));else if(404===a.status)t();else if(200!==a.status&&304!==a.status)n(new Error("Manifest request to "+i+" failed."));else{try{var e=JSON.parse(a.responseText)}catch(e){return void n(e)}t(e)}}})}(i).then(function(e){if(!e)return f("idle"),null;y={},b={},w=e.c,v=e.h,f("prepare");var t=new Promise(function(e,t){h={resolve:e,reject:t}});m={};return x("cornerstone"),"prepare"===c&&0===p&&0===g&&T(),t})}function x(e){w[e]?(y[e]=!0,g++,function(e){var t=document.getElementsByTagName("head")[0],n=document.createElement("script");n.charset="utf-8",n.src=S.p+""+e+"."+r+".hot-update.js",t.appendChild(n)}(e)):b[e]=!0}function T(){f("ready");var e=h;if(h=null,e)if(a)Promise.resolve().then(function(){return P(a)}).then(function(t){e.resolve(t)},function(t){e.reject(t)});else{var t=[];for(var n in m)Object.prototype.hasOwnProperty.call(m,n)&&t.push(_(n));e.resolve(t)}}function P(t){if("ready"!==c)throw new Error("apply() is only allowed in ready status");var n,a,i,s,u;function d(e){for(var t=[e],n={},a=t.slice().map(function(e){return{chain:[e],id:e}});a.length>0;){var r=a.pop(),i=r.id,o=r.chain;if((s=O[i])&&!s.hot._selfAccepted){if(s.hot._selfDeclined)return{type:"self-declined",chain:o,moduleId:i};if(s.hot._main)return{type:"unaccepted",chain:o,moduleId:i};for(var l=0;l<s.parents.length;l++){var u=s.parents[l],d=O[u];if(d){if(d.hot._declinedDependencies[i])return{type:"declined",chain:o.concat([u]),moduleId:i,parentId:u};-1===t.indexOf(u)&&(d.hot._acceptedDependencies[i]?(n[u]||(n[u]=[]),h(n[u],[i])):(delete n[u],t.push(u),a.push({chain:o.concat([u]),id:u})))}}}}return{type:"accepted",moduleId:e,outdatedModules:t,outdatedDependencies:n}}function h(e,t){for(var n=0;n<t.length;n++){var a=t[n];-1===e.indexOf(a)&&e.push(a)}}t=t||{};var g={},p=[],b={},y=function(){console.warn("[HMR] unexpected require("+x.moduleId+") to disposed module")};for(var E in m)if(Object.prototype.hasOwnProperty.call(m,E)){var x;u=_(E);var T=!1,P=!1,I=!1,M="";switch((x=m[E]?d(u):{type:"disposed",moduleId:E}).chain&&(M="\nUpdate propagation: "+x.chain.join(" -> ")),x.type){case"self-declined":t.onDeclined&&t.onDeclined(x),t.ignoreDeclined||(T=new Error("Aborted because of self decline: "+x.moduleId+M));break;case"declined":t.onDeclined&&t.onDeclined(x),t.ignoreDeclined||(T=new Error("Aborted because of declined dependency: "+x.moduleId+" in "+x.parentId+M));break;case"unaccepted":t.onUnaccepted&&t.onUnaccepted(x),t.ignoreUnaccepted||(T=new Error("Aborted because "+u+" is not accepted"+M));break;case"accepted":t.onAccepted&&t.onAccepted(x),P=!0;break;case"disposed":t.onDisposed&&t.onDisposed(x),I=!0;break;default:throw new Error("Unexception type "+x.type)}if(T)return f("abort"),Promise.reject(T);if(P)for(u in b[u]=m[u],h(p,x.outdatedModules),x.outdatedDependencies)Object.prototype.hasOwnProperty.call(x.outdatedDependencies,u)&&(g[u]||(g[u]=[]),h(g[u],x.outdatedDependencies[u]));I&&(h(p,[x.moduleId]),b[u]=y)}var C,L=[];for(a=0;a<p.length;a++)u=p[a],O[u]&&O[u].hot._selfAccepted&&L.push({module:u,errorHandler:O[u].hot._selfAccepted});f("dispose"),Object.keys(w).forEach(function(e){!1===w[e]&&function(e){delete installedChunks[e]}(e)});for(var D,A,j=p.slice();j.length>0;)if(u=j.pop(),s=O[u]){var k={},R=s.hot._disposeHandlers;for(i=0;i<R.length;i++)(n=R[i])(k);for(o[u]=k,s.hot.active=!1,delete O[u],delete g[u],i=0;i<s.children.length;i++){var U=O[s.children[i]];U&&((C=U.parents.indexOf(u))>=0&&U.parents.splice(C,1))}}for(u in g)if(Object.prototype.hasOwnProperty.call(g,u)&&(s=O[u]))for(A=g[u],i=0;i<A.length;i++)D=A[i],(C=s.children.indexOf(D))>=0&&s.children.splice(C,1);for(u in f("apply"),r=v,b)Object.prototype.hasOwnProperty.call(b,u)&&(e[u]=b[u]);var N=null;for(u in g)if(Object.prototype.hasOwnProperty.call(g,u)&&(s=O[u])){A=g[u];var B=[];for(a=0;a<A.length;a++)if(D=A[a],n=s.hot._acceptedDependencies[D]){if(-1!==B.indexOf(n))continue;B.push(n)}for(a=0;a<B.length;a++){n=B[a];try{n(A)}catch(e){t.onErrored&&t.onErrored({type:"accept-errored",moduleId:u,dependencyId:A[a],error:e}),t.ignoreErrored||N||(N=e)}}}for(a=0;a<L.length;a++){var H=L[a];u=H.module,l=[u];try{S(u)}catch(e){if("function"==typeof H.errorHandler)try{H.errorHandler(e)}catch(n){t.onErrored&&t.onErrored({type:"self-accept-error-handler-errored",moduleId:u,error:n,originalError:e}),t.ignoreErrored||N||(N=n),N||(N=e)}else t.onErrored&&t.onErrored({type:"self-accept-errored",moduleId:u,error:e}),t.ignoreErrored||N||(N=e)}}return N?(f("fail"),Promise.reject(N)):(f("idle"),new Promise(function(e){e(p)}))}var O={};function S(t){if(O[t])return O[t].exports;var a=O[t]={i:t,l:!1,exports:{},hot:function(e){var t={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_disposeHandlers:[],_main:n!==e,active:!0,accept:function(e,n){if(void 0===e)t._selfAccepted=!0;else if("function"==typeof e)t._selfAccepted=e;else if("object"==typeof e)for(var a=0;a<e.length;a++)t._acceptedDependencies[e[a]]=n||function(){};else t._acceptedDependencies[e]=n||function(){}},decline:function(e){if(void 0===e)t._selfDeclined=!0;else if("object"==typeof e)for(var n=0;n<e.length;n++)t._declinedDependencies[e[n]]=!0;else t._declinedDependencies[e]=!0},dispose:function(e){t._disposeHandlers.push(e)},addDisposeHandler:function(e){t._disposeHandlers.push(e)},removeDisposeHandler:function(e){var n=t._disposeHandlers.indexOf(e);n>=0&&t._disposeHandlers.splice(n,1)},check:E,apply:P,status:function(e){if(!e)return c;d.push(e)},addStatusHandler:function(e){d.push(e)},removeStatusHandler:function(e){var t=d.indexOf(e);t>=0&&d.splice(t,1)},data:o[e]};return n=void 0,t}(t),parents:(s=l,l=[],s),children:[]};return e[t].call(a.exports,a,a.exports,u(t)),a.l=!0,a.exports}return S.m=e,S.c=O,S.d=function(e,t,n){S.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},S.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},S.t=function(e,t){if(1&t&&(e=S(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(S.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)S.d(n,a,function(t){return e[t]}.bind(null,a));return n},S.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return S.d(t,"a",t),t},S.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},S.p="",S.h=function(){return r},u("./index.js")(S.s="./index.js")}({"./canvasToPixel.js":
/*!**************************!*\
  !*** ./canvasToPixel.js ***!
  \**************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./enabledElements.js */"./enabledElements.js"),r=n(/*! ./internal/getTransform.js */"./internal/getTransform.js");t.default=function(e,t){var n=Object(a.getEnabledElement)(e),i=Object(r.default)(n);return i.invert(),i.transformPoint(t.x,t.y)}},"./colors/colormap.js":
/*!****************************!*\
  !*** ./colors/colormap.js ***!
  \****************************/
/*! exports provided: getColormapsList, getColormap */function(e,t,n){"use strict";n.r(t),n.d(t,"getColormapsList",function(){return s}),n.d(t,"getColormap",function(){return u});var a=n(/*! ./lookupTable.js */"./colors/lookupTable.js"),r=[0,0,0,0],i={hotIron:{name:"Hot Iron",numOfColors:256,colors:[[0,0,0,255],[2,0,0,255],[4,0,0,255],[6,0,0,255],[8,0,0,255],[10,0,0,255],[12,0,0,255],[14,0,0,255],[16,0,0,255],[18,0,0,255],[20,0,0,255],[22,0,0,255],[24,0,0,255],[26,0,0,255],[28,0,0,255],[30,0,0,255],[32,0,0,255],[34,0,0,255],[36,0,0,255],[38,0,0,255],[40,0,0,255],[42,0,0,255],[44,0,0,255],[46,0,0,255],[48,0,0,255],[50,0,0,255],[52,0,0,255],[54,0,0,255],[56,0,0,255],[58,0,0,255],[60,0,0,255],[62,0,0,255],[64,0,0,255],[66,0,0,255],[68,0,0,255],[70,0,0,255],[72,0,0,255],[74,0,0,255],[76,0,0,255],[78,0,0,255],[80,0,0,255],[82,0,0,255],[84,0,0,255],[86,0,0,255],[88,0,0,255],[90,0,0,255],[92,0,0,255],[94,0,0,255],[96,0,0,255],[98,0,0,255],[100,0,0,255],[102,0,0,255],[104,0,0,255],[106,0,0,255],[108,0,0,255],[110,0,0,255],[112,0,0,255],[114,0,0,255],[116,0,0,255],[118,0,0,255],[120,0,0,255],[122,0,0,255],[124,0,0,255],[126,0,0,255],[128,0,0,255],[130,0,0,255],[132,0,0,255],[134,0,0,255],[136,0,0,255],[138,0,0,255],[140,0,0,255],[142,0,0,255],[144,0,0,255],[146,0,0,255],[148,0,0,255],[150,0,0,255],[152,0,0,255],[154,0,0,255],[156,0,0,255],[158,0,0,255],[160,0,0,255],[162,0,0,255],[164,0,0,255],[166,0,0,255],[168,0,0,255],[170,0,0,255],[172,0,0,255],[174,0,0,255],[176,0,0,255],[178,0,0,255],[180,0,0,255],[182,0,0,255],[184,0,0,255],[186,0,0,255],[188,0,0,255],[190,0,0,255],[192,0,0,255],[194,0,0,255],[196,0,0,255],[198,0,0,255],[200,0,0,255],[202,0,0,255],[204,0,0,255],[206,0,0,255],[208,0,0,255],[210,0,0,255],[212,0,0,255],[214,0,0,255],[216,0,0,255],[218,0,0,255],[220,0,0,255],[222,0,0,255],[224,0,0,255],[226,0,0,255],[228,0,0,255],[230,0,0,255],[232,0,0,255],[234,0,0,255],[236,0,0,255],[238,0,0,255],[240,0,0,255],[242,0,0,255],[244,0,0,255],[246,0,0,255],[248,0,0,255],[250,0,0,255],[252,0,0,255],[254,0,0,255],[255,0,0,255],[255,2,0,255],[255,4,0,255],[255,6,0,255],[255,8,0,255],[255,10,0,255],[255,12,0,255],[255,14,0,255],[255,16,0,255],[255,18,0,255],[255,20,0,255],[255,22,0,255],[255,24,0,255],[255,26,0,255],[255,28,0,255],[255,30,0,255],[255,32,0,255],[255,34,0,255],[255,36,0,255],[255,38,0,255],[255,40,0,255],[255,42,0,255],[255,44,0,255],[255,46,0,255],[255,48,0,255],[255,50,0,255],[255,52,0,255],[255,54,0,255],[255,56,0,255],[255,58,0,255],[255,60,0,255],[255,62,0,255],[255,64,0,255],[255,66,0,255],[255,68,0,255],[255,70,0,255],[255,72,0,255],[255,74,0,255],[255,76,0,255],[255,78,0,255],[255,80,0,255],[255,82,0,255],[255,84,0,255],[255,86,0,255],[255,88,0,255],[255,90,0,255],[255,92,0,255],[255,94,0,255],[255,96,0,255],[255,98,0,255],[255,100,0,255],[255,102,0,255],[255,104,0,255],[255,106,0,255],[255,108,0,255],[255,110,0,255],[255,112,0,255],[255,114,0,255],[255,116,0,255],[255,118,0,255],[255,120,0,255],[255,122,0,255],[255,124,0,255],[255,126,0,255],[255,128,4,255],[255,130,8,255],[255,132,12,255],[255,134,16,255],[255,136,20,255],[255,138,24,255],[255,140,28,255],[255,142,32,255],[255,144,36,255],[255,146,40,255],[255,148,44,255],[255,150,48,255],[255,152,52,255],[255,154,56,255],[255,156,60,255],[255,158,64,255],[255,160,68,255],[255,162,72,255],[255,164,76,255],[255,166,80,255],[255,168,84,255],[255,170,88,255],[255,172,92,255],[255,174,96,255],[255,176,100,255],[255,178,104,255],[255,180,108,255],[255,182,112,255],[255,184,116,255],[255,186,120,255],[255,188,124,255],[255,190,128,255],[255,192,132,255],[255,194,136,255],[255,196,140,255],[255,198,144,255],[255,200,148,255],[255,202,152,255],[255,204,156,255],[255,206,160,255],[255,208,164,255],[255,210,168,255],[255,212,172,255],[255,214,176,255],[255,216,180,255],[255,218,184,255],[255,220,188,255],[255,222,192,255],[255,224,196,255],[255,226,200,255],[255,228,204,255],[255,230,208,255],[255,232,212,255],[255,234,216,255],[255,236,220,255],[255,238,224,255],[255,240,228,255],[255,242,232,255],[255,244,236,255],[255,246,240,255],[255,248,244,255],[255,250,248,255],[255,252,252,255],[255,255,255,255]]},pet:{name:"PET",numColors:256,colors:[[0,0,0,255],[0,2,1,255],[0,4,3,255],[0,6,5,255],[0,8,7,255],[0,10,9,255],[0,12,11,255],[0,14,13,255],[0,16,15,255],[0,18,17,255],[0,20,19,255],[0,22,21,255],[0,24,23,255],[0,26,25,255],[0,28,27,255],[0,30,29,255],[0,32,31,255],[0,34,33,255],[0,36,35,255],[0,38,37,255],[0,40,39,255],[0,42,41,255],[0,44,43,255],[0,46,45,255],[0,48,47,255],[0,50,49,255],[0,52,51,255],[0,54,53,255],[0,56,55,255],[0,58,57,255],[0,60,59,255],[0,62,61,255],[0,65,63,255],[0,67,65,255],[0,69,67,255],[0,71,69,255],[0,73,71,255],[0,75,73,255],[0,77,75,255],[0,79,77,255],[0,81,79,255],[0,83,81,255],[0,85,83,255],[0,87,85,255],[0,89,87,255],[0,91,89,255],[0,93,91,255],[0,95,93,255],[0,97,95,255],[0,99,97,255],[0,101,99,255],[0,103,101,255],[0,105,103,255],[0,107,105,255],[0,109,107,255],[0,111,109,255],[0,113,111,255],[0,115,113,255],[0,117,115,255],[0,119,117,255],[0,121,119,255],[0,123,121,255],[0,125,123,255],[0,128,125,255],[1,126,127,255],[3,124,129,255],[5,122,131,255],[7,120,133,255],[9,118,135,255],[11,116,137,255],[13,114,139,255],[15,112,141,255],[17,110,143,255],[19,108,145,255],[21,106,147,255],[23,104,149,255],[25,102,151,255],[27,100,153,255],[29,98,155,255],[31,96,157,255],[33,94,159,255],[35,92,161,255],[37,90,163,255],[39,88,165,255],[41,86,167,255],[43,84,169,255],[45,82,171,255],[47,80,173,255],[49,78,175,255],[51,76,177,255],[53,74,179,255],[55,72,181,255],[57,70,183,255],[59,68,185,255],[61,66,187,255],[63,64,189,255],[65,63,191,255],[67,61,193,255],[69,59,195,255],[71,57,197,255],[73,55,199,255],[75,53,201,255],[77,51,203,255],[79,49,205,255],[81,47,207,255],[83,45,209,255],[85,43,211,255],[86,41,213,255],[88,39,215,255],[90,37,217,255],[92,35,219,255],[94,33,221,255],[96,31,223,255],[98,29,225,255],[100,27,227,255],[102,25,229,255],[104,23,231,255],[106,21,233,255],[108,19,235,255],[110,17,237,255],[112,15,239,255],[114,13,241,255],[116,11,243,255],[118,9,245,255],[120,7,247,255],[122,5,249,255],[124,3,251,255],[126,1,253,255],[128,0,255,255],[130,2,252,255],[132,4,248,255],[134,6,244,255],[136,8,240,255],[138,10,236,255],[140,12,232,255],[142,14,228,255],[144,16,224,255],[146,18,220,255],[148,20,216,255],[150,22,212,255],[152,24,208,255],[154,26,204,255],[156,28,200,255],[158,30,196,255],[160,32,192,255],[162,34,188,255],[164,36,184,255],[166,38,180,255],[168,40,176,255],[170,42,172,255],[171,44,168,255],[173,46,164,255],[175,48,160,255],[177,50,156,255],[179,52,152,255],[181,54,148,255],[183,56,144,255],[185,58,140,255],[187,60,136,255],[189,62,132,255],[191,64,128,255],[193,66,124,255],[195,68,120,255],[197,70,116,255],[199,72,112,255],[201,74,108,255],[203,76,104,255],[205,78,100,255],[207,80,96,255],[209,82,92,255],[211,84,88,255],[213,86,84,255],[215,88,80,255],[217,90,76,255],[219,92,72,255],[221,94,68,255],[223,96,64,255],[225,98,60,255],[227,100,56,255],[229,102,52,255],[231,104,48,255],[233,106,44,255],[235,108,40,255],[237,110,36,255],[239,112,32,255],[241,114,28,255],[243,116,24,255],[245,118,20,255],[247,120,16,255],[249,122,12,255],[251,124,8,255],[253,126,4,255],[255,128,0,255],[255,130,4,255],[255,132,8,255],[255,134,12,255],[255,136,16,255],[255,138,20,255],[255,140,24,255],[255,142,28,255],[255,144,32,255],[255,146,36,255],[255,148,40,255],[255,150,44,255],[255,152,48,255],[255,154,52,255],[255,156,56,255],[255,158,60,255],[255,160,64,255],[255,162,68,255],[255,164,72,255],[255,166,76,255],[255,168,80,255],[255,170,85,255],[255,172,89,255],[255,174,93,255],[255,176,97,255],[255,178,101,255],[255,180,105,255],[255,182,109,255],[255,184,113,255],[255,186,117,255],[255,188,121,255],[255,190,125,255],[255,192,129,255],[255,194,133,255],[255,196,137,255],[255,198,141,255],[255,200,145,255],[255,202,149,255],[255,204,153,255],[255,206,157,255],[255,208,161,255],[255,210,165,255],[255,212,170,255],[255,214,174,255],[255,216,178,255],[255,218,182,255],[255,220,186,255],[255,222,190,255],[255,224,194,255],[255,226,198,255],[255,228,202,255],[255,230,206,255],[255,232,210,255],[255,234,214,255],[255,236,218,255],[255,238,222,255],[255,240,226,255],[255,242,230,255],[255,244,234,255],[255,246,238,255],[255,248,242,255],[255,250,246,255],[255,252,250,255],[255,255,255,255]]},hotMetalBlue:{name:"Hot Metal Blue",numColors:256,colors:[[0,0,0,255],[0,0,2,255],[0,0,4,255],[0,0,6,255],[0,0,8,255],[0,0,10,255],[0,0,12,255],[0,0,14,255],[0,0,16,255],[0,0,17,255],[0,0,19,255],[0,0,21,255],[0,0,23,255],[0,0,25,255],[0,0,27,255],[0,0,29,255],[0,0,31,255],[0,0,33,255],[0,0,35,255],[0,0,37,255],[0,0,39,255],[0,0,41,255],[0,0,43,255],[0,0,45,255],[0,0,47,255],[0,0,49,255],[0,0,51,255],[0,0,53,255],[0,0,55,255],[0,0,57,255],[0,0,59,255],[0,0,61,255],[0,0,63,255],[0,0,65,255],[0,0,67,255],[0,0,69,255],[0,0,71,255],[0,0,73,255],[0,0,75,255],[0,0,77,255],[0,0,79,255],[0,0,81,255],[0,0,83,255],[0,0,84,255],[0,0,86,255],[0,0,88,255],[0,0,90,255],[0,0,92,255],[0,0,94,255],[0,0,96,255],[0,0,98,255],[0,0,100,255],[0,0,102,255],[0,0,104,255],[0,0,106,255],[0,0,108,255],[0,0,110,255],[0,0,112,255],[0,0,114,255],[0,0,116,255],[0,0,117,255],[0,0,119,255],[0,0,121,255],[0,0,123,255],[0,0,125,255],[0,0,127,255],[0,0,129,255],[0,0,131,255],[0,0,133,255],[0,0,135,255],[0,0,137,255],[0,0,139,255],[0,0,141,255],[0,0,143,255],[0,0,145,255],[0,0,147,255],[0,0,149,255],[0,0,151,255],[0,0,153,255],[0,0,155,255],[0,0,157,255],[0,0,159,255],[0,0,161,255],[0,0,163,255],[0,0,165,255],[0,0,167,255],[3,0,169,255],[6,0,171,255],[9,0,173,255],[12,0,175,255],[15,0,177,255],[18,0,179,255],[21,0,181,255],[24,0,183,255],[26,0,184,255],[29,0,186,255],[32,0,188,255],[35,0,190,255],[38,0,192,255],[41,0,194,255],[44,0,196,255],[47,0,198,255],[50,0,200,255],[52,0,197,255],[55,0,194,255],[57,0,191,255],[59,0,188,255],[62,0,185,255],[64,0,182,255],[66,0,179,255],[69,0,176,255],[71,0,174,255],[74,0,171,255],[76,0,168,255],[78,0,165,255],[81,0,162,255],[83,0,159,255],[85,0,156,255],[88,0,153,255],[90,0,150,255],[93,2,144,255],[96,4,138,255],[99,6,132,255],[102,8,126,255],[105,9,121,255],[108,11,115,255],[111,13,109,255],[114,15,103,255],[116,17,97,255],[119,19,91,255],[122,21,85,255],[125,23,79,255],[128,24,74,255],[131,26,68,255],[134,28,62,255],[137,30,56,255],[140,32,50,255],[143,34,47,255],[146,36,44,255],[149,38,41,255],[152,40,38,255],[155,41,35,255],[158,43,32,255],[161,45,29,255],[164,47,26,255],[166,49,24,255],[169,51,21,255],[172,53,18,255],[175,55,15,255],[178,56,12,255],[181,58,9,255],[184,60,6,255],[187,62,3,255],[190,64,0,255],[194,66,0,255],[198,68,0,255],[201,70,0,255],[205,72,0,255],[209,73,0,255],[213,75,0,255],[217,77,0,255],[221,79,0,255],[224,81,0,255],[228,83,0,255],[232,85,0,255],[236,87,0,255],[240,88,0,255],[244,90,0,255],[247,92,0,255],[251,94,0,255],[255,96,0,255],[255,98,3,255],[255,100,6,255],[255,102,9,255],[255,104,12,255],[255,105,15,255],[255,107,18,255],[255,109,21,255],[255,111,24,255],[255,113,26,255],[255,115,29,255],[255,117,32,255],[255,119,35,255],[255,120,38,255],[255,122,41,255],[255,124,44,255],[255,126,47,255],[255,128,50,255],[255,130,53,255],[255,132,56,255],[255,134,59,255],[255,136,62,255],[255,137,65,255],[255,139,68,255],[255,141,71,255],[255,143,74,255],[255,145,76,255],[255,147,79,255],[255,149,82,255],[255,151,85,255],[255,152,88,255],[255,154,91,255],[255,156,94,255],[255,158,97,255],[255,160,100,255],[255,162,103,255],[255,164,106,255],[255,166,109,255],[255,168,112,255],[255,169,115,255],[255,171,118,255],[255,173,121,255],[255,175,124,255],[255,177,126,255],[255,179,129,255],[255,181,132,255],[255,183,135,255],[255,184,138,255],[255,186,141,255],[255,188,144,255],[255,190,147,255],[255,192,150,255],[255,194,153,255],[255,196,156,255],[255,198,159,255],[255,200,162,255],[255,201,165,255],[255,203,168,255],[255,205,171,255],[255,207,174,255],[255,209,176,255],[255,211,179,255],[255,213,182,255],[255,215,185,255],[255,216,188,255],[255,218,191,255],[255,220,194,255],[255,222,197,255],[255,224,200,255],[255,226,203,255],[255,228,206,255],[255,229,210,255],[255,231,213,255],[255,233,216,255],[255,235,219,255],[255,237,223,255],[255,239,226,255],[255,240,229,255],[255,242,232,255],[255,244,236,255],[255,246,239,255],[255,248,242,255],[255,250,245,255],[255,251,249,255],[255,253,252,255],[255,255,255,255]]},pet20Step:{name:"PET 20 Step",numColors:256,colors:[[0,0,0,255],[0,0,0,255],[0,0,0,255],[0,0,0,255],[0,0,0,255],[0,0,0,255],[0,0,0,255],[0,0,0,255],[0,0,0,255],[0,0,0,255],[0,0,0,255],[0,0,0,255],[0,0,0,255],[96,0,80,255],[96,0,80,255],[96,0,80,255],[96,0,80,255],[96,0,80,255],[96,0,80,255],[96,0,80,255],[96,0,80,255],[96,0,80,255],[96,0,80,255],[96,0,80,255],[96,0,80,255],[96,0,80,255],[48,48,80,255],[48,48,80,255],[48,48,80,255],[48,48,80,255],[48,48,80,255],[48,48,80,255],[48,48,80,255],[48,48,80,255],[48,48,80,255],[48,48,80,255],[48,48,80,255],[48,48,80,255],[48,48,80,255],[48,48,112,255],[48,48,112,255],[48,48,112,255],[48,48,112,255],[48,48,112,255],[48,48,112,255],[48,48,112,255],[48,48,112,255],[48,48,112,255],[48,48,112,255],[48,48,112,255],[48,48,112,255],[80,80,128,255],[80,80,128,255],[80,80,128,255],[80,80,128,255],[80,80,128,255],[80,80,128,255],[80,80,128,255],[80,80,128,255],[80,80,128,255],[80,80,128,255],[80,80,128,255],[80,80,128,255],[80,80,128,255],[96,96,176,255],[96,96,176,255],[96,96,176,255],[96,96,176,255],[96,96,176,255],[96,96,176,255],[96,96,176,255],[96,96,176,255],[96,96,176,255],[96,96,176,255],[96,96,176,255],[96,96,176,255],[96,96,176,255],[112,112,192,255],[112,112,192,255],[112,112,192,255],[112,112,192,255],[112,112,192,255],[112,112,192,255],[112,112,192,255],[112,112,192,255],[112,112,192,255],[112,112,192,255],[112,112,192,255],[112,112,192,255],[112,112,192,255],[128,128,224,255],[128,128,224,255],[128,128,224,255],[128,128,224,255],[128,128,224,255],[128,128,224,255],[128,128,224,255],[128,128,224,255],[128,128,224,255],[128,128,224,255],[128,128,224,255],[128,128,224,255],[48,96,48,255],[48,96,48,255],[48,96,48,255],[48,96,48,255],[48,96,48,255],[48,96,48,255],[48,96,48,255],[48,96,48,255],[48,96,48,255],[48,96,48,255],[48,96,48,255],[48,96,48,255],[48,96,48,255],[48,144,48,255],[48,144,48,255],[48,144,48,255],[48,144,48,255],[48,144,48,255],[48,144,48,255],[48,144,48,255],[48,144,48,255],[48,144,48,255],[48,144,48,255],[48,144,48,255],[48,144,48,255],[48,144,48,255],[80,192,80,255],[80,192,80,255],[80,192,80,255],[80,192,80,255],[80,192,80,255],[80,192,80,255],[80,192,80,255],[80,192,80,255],[80,192,80,255],[80,192,80,255],[80,192,80,255],[80,192,80,255],[80,192,80,255],[64,224,64,255],[64,224,64,255],[64,224,64,255],[64,224,64,255],[64,224,64,255],[64,224,64,255],[64,224,64,255],[64,224,64,255],[64,224,64,255],[64,224,64,255],[64,224,64,255],[64,224,64,255],[224,224,80,255],[224,224,80,255],[224,224,80,255],[224,224,80,255],[224,224,80,255],[224,224,80,255],[224,224,80,255],[224,224,80,255],[224,224,80,255],[224,224,80,255],[224,224,80,255],[224,224,80,255],[224,224,80,255],[208,208,96,255],[208,208,96,255],[208,208,96,255],[208,208,96,255],[208,208,96,255],[208,208,96,255],[208,208,96,255],[208,208,96,255],[208,208,96,255],[208,208,96,255],[208,208,96,255],[208,208,96,255],[208,208,96,255],[208,176,64,255],[208,176,64,255],[208,176,64,255],[208,176,64,255],[208,176,64,255],[208,176,64,255],[208,176,64,255],[208,176,64,255],[208,176,64,255],[208,176,64,255],[208,176,64,255],[208,176,64,255],[208,176,64,255],[208,144,0,255],[208,144,0,255],[208,144,0,255],[208,144,0,255],[208,144,0,255],[208,144,0,255],[208,144,0,255],[208,144,0,255],[208,144,0,255],[208,144,0,255],[208,144,0,255],[208,144,0,255],[192,96,0,255],[192,96,0,255],[192,96,0,255],[192,96,0,255],[192,96,0,255],[192,96,0,255],[192,96,0,255],[192,96,0,255],[192,96,0,255],[192,96,0,255],[192,96,0,255],[192,96,0,255],[192,96,0,255],[176,48,0,255],[176,48,0,255],[176,48,0,255],[176,48,0,255],[176,48,0,255],[176,48,0,255],[176,48,0,255],[176,48,0,255],[176,48,0,255],[176,48,0,255],[176,48,0,255],[176,48,0,255],[176,48,0,255],[255,0,0,255],[255,0,0,255],[255,0,0,255],[255,0,0,255],[255,0,0,255],[255,0,0,255],[255,0,0,255],[255,0,0,255],[255,0,0,255],[255,0,0,255],[255,0,0,255],[255,0,0,255],[255,0,0,255],[255,255,255,255],[255,255,255,255],[255,255,255,255],[255,255,255,255],[255,255,255,255],[255,255,255,255],[255,255,255,255],[255,255,255,255],[255,255,255,255],[255,255,255,255],[255,255,255,255],[255,255,255,255],[255,255,255,255]]},gray:{name:"Gray",numColors:256,gamma:1,segmentedData:{red:[[0,0,0],[1,1,1]],green:[[0,0,0],[1,1,1]],blue:[[0,0,0],[1,1,1]]}},jet:{name:"Jet",numColors:256,gamma:1,segmentedData:{red:[[0,0,0],[.35,0,0],[.66,1,1],[.89,1,1],[1,.5,.5]],green:[[0,0,0],[.125,0,0],[.375,1,1],[.64,1,1],[.91,0,0],[1,0,0]],blue:[[0,.5,.5],[.11,1,1],[.34,1,1],[.65,0,0],[1,0,0]]}},hsv:{name:"HSV",numColors:256,gamma:1,segmentedData:{red:[[0,1,1],[.15873,1,1],[.174603,.96875,.96875],[.333333,.03125,.03125],[.349206,0,0],[.666667,0,0],[.68254,.03125,.03125],[.84127,.96875,.96875],[.857143,1,1],[1,1,1]],green:[[0,0,0],[.15873,.9375,.9375],[.174603,1,1],[.507937,1,1],[.666667,.0625,.0625],[.68254,0,0],[1,0,0]],blue:[[0,0,0],[.333333,0,0],[.349206,.0625,.0625],[.507937,1,1],[.84127,1,1],[.857143,.9375,.9375],[1,.09375,.09375]]}},hot:{name:"Hot",numColors:256,gamma:1,segmentedData:{red:[[0,.0416,.0416],[.365079,1,1],[1,1,1]],green:[[0,0,0],[.365079,0,0],[.746032,1,1],[1,1,1]],blue:[[0,0,0],[.746032,0,0],[1,1,1]]}},cool:{name:"Cool",numColors:256,gamma:1,segmentedData:{red:[[0,0,0],[1,1,1]],green:[[0,1,1],[1,0,0]],blue:[[0,1,1],[1,1,1]]}},spring:{name:"Spring",numColors:256,gamma:1,segmentedData:{red:[[0,1,1],[1,1,1]],green:[[0,0,0],[1,1,1]],blue:[[0,1,1],[1,0,0]]}},summer:{name:"Summer",numColors:256,gamma:1,segmentedData:{red:[[0,0,0],[1,1,1]],green:[[0,.5,.5],[1,1,1]],blue:[[0,.4,.4],[1,.4,.4]]}},autumn:{name:"Autumn",numColors:256,gamma:1,segmentedData:{red:[[0,1,1],[1,1,1]],green:[[0,0,0],[1,1,1]],blue:[[0,0,0],[1,0,0]]}},winter:{name:"Winter",numColors:256,gamma:1,segmentedData:{red:[[0,0,0],[1,0,0]],green:[[0,0,0],[1,1,1]],blue:[[0,1,1],[1,.5,.5]]}},bone:{name:"Bone",numColors:256,gamma:1,segmentedData:{red:[[0,0,0],[.746032,.652778,.652778],[1,1,1]],green:[[0,0,0],[.365079,.319444,.319444],[.746032,.777778,.777778],[1,1,1]],blue:[[0,0,0],[.365079,.444444,.444444],[1,1,1]]}},copper:{name:"Copper",numColors:256,gamma:1,segmentedData:{red:[[0,0,0],[.809524,1,1],[1,1,1]],green:[[0,0,0],[1,.7812,.7812]],blue:[[0,0,0],[1,.4975,.4975]]}},spectral:{name:"Spectral",numColors:256,gamma:1,segmentedData:{red:[[0,0,0],[.05,.4667,.4667],[.1,.5333,.5333],[.15,0,0],[.2,0,0],[.25,0,0],[.3,0,0],[.35,0,0],[.4,0,0],[.45,0,0],[.5,0,0],[.55,0,0],[.6,0,0],[.65,.7333,.7333],[.7,.9333,.9333],[.75,1,1],[.8,1,1],[.85,1,1],[.9,.8667,.8667],[.95,.8,.8],[1,.8,.8]],green:[[0,0,0],[.05,0,0],[.1,0,0],[.15,0,0],[.2,0,0],[.25,.4667,.4667],[.3,.6,.6],[.35,.6667,.6667],[.4,.6667,.6667],[.45,.6,.6],[.5,.7333,.7333],[.55,.8667,.8667],[.6,1,1],[.65,1,1],[.7,.9333,.9333],[.75,.8,.8],[.8,.6,.6],[.85,0,0],[.9,0,0],[.95,0,0],[1,.8,.8]],blue:[[0,0,0],[.05,.5333,.5333],[.1,.6,.6],[.15,.6667,.6667],[.2,.8667,.8667],[.25,.8667,.8667],[.3,.8667,.8667],[.35,.6667,.6667],[.4,.5333,.5333],[.45,0,0],[.5,0,0],[.55,0,0],[.6,0,0],[.65,0,0],[.7,0,0],[.75,0,0],[.8,0,0],[.85,0,0],[.9,0,0],[.95,0,0],[1,.8,.8]]}},coolwarm:{name:"CoolWarm",numColors:256,gamma:1,segmentedData:{red:[[0,.2298057,.2298057],[.03125,.26623388,.26623388],[.0625,.30386891,.30386891],[.09375,.342804478,.342804478],[.125,.38301334,.38301334],[.15625,.424369608,.424369608],[.1875,.46666708,.46666708],[.21875,.509635204,.509635204],[.25,.552953156,.552953156],[.28125,.596262162,.596262162],[.3125,.639176211,.639176211],[.34375,.681291281,.681291281],[.375,.722193294,.722193294],[.40625,.761464949,.761464949],[.4375,.798691636,.798691636],[.46875,.833466556,.833466556],[.5,.865395197,.865395197],[.53125,.897787179,.897787179],[.5625,.924127593,.924127593],[.59375,.944468518,.944468518],[.625,.958852946,.958852946],[.65625,.96732803,.96732803],[.6875,.969954137,.969954137],[.71875,.966811177,.966811177],[.75,.958003065,.958003065],[.78125,.943660866,.943660866],[.8125,.923944917,.923944917],[.84375,.89904617,.89904617],[.875,.869186849,.869186849],[.90625,.834620542,.834620542],[.9375,.795631745,.795631745],[.96875,.752534934,.752534934],[1,.705673158,.705673158]],green:[[0,.298717966,.298717966],[.03125,.353094838,.353094838],[.0625,.406535296,.406535296],[.09375,.458757618,.458757618],[.125,.50941904,.50941904],[.15625,.558148092,.558148092],[.1875,.604562568,.604562568],[.21875,.648280772,.648280772],[.25,.688929332,.688929332],[.28125,.726149107,.726149107],[.3125,.759599947,.759599947],[.34375,.788964712,.788964712],[.375,.813952739,.813952739],[.40625,.834302879,.834302879],[.4375,.849786142,.849786142],[.46875,.860207984,.860207984],[.5,.86541021,.86541021],[.53125,.848937047,.848937047],[.5625,.827384882,.827384882],[.59375,.800927443,.800927443],[.625,.769767752,.769767752],[.65625,.734132809,.734132809],[.6875,.694266682,.694266682],[.71875,.650421156,.650421156],[.75,.602842431,.602842431],[.78125,.551750968,.551750968],[.8125,.49730856,.49730856],[.84375,.439559467,.439559467],[.875,.378313092,.378313092],[.90625,.312874446,.312874446],[.9375,.24128379,.24128379],[.96875,.157246067,.157246067],[1,.01555616,.01555616]],blue:[[0,.753683153,.753683153],[.03125,.801466763,.801466763],[.0625,.84495867,.84495867],[.09375,.883725899,.883725899],[.125,.917387822,.917387822],[.15625,.945619588,.945619588],[.1875,.968154911,.968154911],[.21875,.98478814,.98478814],[.25,.995375608,.995375608],[.28125,.999836203,.999836203],[.3125,.998151185,.998151185],[.34375,.990363227,.990363227],[.375,.976574709,.976574709],[.40625,.956945269,.956945269],[.4375,.931688648,.931688648],[.46875,.901068838,.901068838],[.5,.865395561,.865395561],[.53125,.820880546,.820880546],[.5625,.774508472,.774508472],[.59375,.726736146,.726736146],[.625,.678007945,.678007945],[.65625,.628751763,.628751763],[.6875,.579375448,.579375448],[.71875,.530263762,.530263762],[.75,.481775914,.481775914],[.78125,.434243684,.434243684],[.8125,.387970225,.387970225],[.84375,.343229596,.343229596],[.875,.300267182,.300267182],[.90625,.259301199,.259301199],[.9375,.220525627,.220525627],[.96875,.184115123,.184115123],[1,.150232812,.150232812]]}},blues:{name:"Blues",numColors:256,gamma:1,segmentedData:{red:[[0,.9686274528503418,.9686274528503418],[.125,.8705882430076599,.8705882430076599],[.25,.7764706015586853,.7764706015586853],[.375,.6196078658103943,.6196078658103943],[.5,.41960784792900085,.41960784792900085],[.625,.25882354378700256,.25882354378700256],[.75,.12941177189350128,.12941177189350128],[.875,.0313725508749485,.0313725508749485],[1,.0313725508749485,.0313725508749485]],green:[[0,.9843137264251709,.9843137264251709],[.125,.9215686321258545,.9215686321258545],[.25,.8588235378265381,.8588235378265381],[.375,.7921568751335144,.7921568751335144],[.5,.6823529601097107,.6823529601097107],[.625,.572549045085907,.572549045085907],[.75,.4431372582912445,.4431372582912445],[.875,.3176470696926117,.3176470696926117],[1,.1882352977991104,.1882352977991104]],blue:[[0,1,1],[.125,.9686274528503418,.9686274528503418],[.25,.9372549057006836,.9372549057006836],[.375,.8823529481887817,.8823529481887817],[.5,.8392156958580017,.8392156958580017],[.625,.7764706015586853,.7764706015586853],[.75,.7098039388656616,.7098039388656616],[.875,.6117647290229797,.6117647290229797],[1,.41960784792900085,.41960784792900085]]}}};function o(e,t){for(var n=0,a=e.length-1;n<=a;){var r=n+Math.floor((a-n)/2),i=e[r];if(i===t)return r;t<i?a=r-1:n=r+1}return n}function l(e,t,n){var a,r=[],i=[],l=[],s=[];for(n=null===n?1:n,a=0;a<t.length;a++){var u=t[a];r.push((e-1)*u[0]),i.push(u[1]),l.push(u[1])}var d=function(e,t,n){for(var a=(t-e)/((n=null===n?100:n)-1),r=[];n-- >0;)r.push(e),e+=a;return r[r.length-1]=t,r}(0,1,e);for(a=0;a<e;a++)d[a]=(e-1)*Math.pow(d[a],n);var c=function(e,t){var n,a=[],r=t.length;for(e.sort(function(e,t){return e-t}),n=0;n<r;n++)a[n]=o(e,t[n]);return a}(r,d);for(a=1;a<e-1;a++){var f=c[a],h=(d[a]-r[f-1])/(r[f]-r[f-1]),m=i[f]-l[f-1];s[a]=h*m+l[f-1]}return s[0]=l[0],s[e-1]=i[t.length-1],s}function s(){var e=[];return Object.keys(i).forEach(function(t){if(i.hasOwnProperty(t)){var n=i[t];e.push({id:t,name:n.name})}}),e.sort(function(e,t){var n=e.name.toLowerCase(),a=t.name.toLowerCase();return n===a?0:n<a?-1:1}),e}function u(e,t){var n=i[e];return n||(n=i[e]=t||{name:"",colors:[]}),!n.colors&&n.segmentedData&&(n.colors=function(e,t,n){var a,r=[];t=null===t?256:t,n=null===n?1:n;var i=l(t,e.red,n),o=l(t,e.green,n),s=l(t,e.blue,n);for(a=0;a<t;a++){var u=[Math.round(255*i[a]),Math.round(255*o[a]),Math.round(255*s[a]),255];r.push(u)}return r}(n.segmentedData,n.numColors,n.gamma)),{getId:function(){return e},getColorSchemeName:function(){return n.name},setColorSchemeName:function(e){n.name=e},getNumberOfColors:function(){return n.colors.length},setNumberOfColors:function(e){for(;n.colors.length<e;)n.colors.push(r);n.colors.length=e},getColor:function(e){return this.isValidIndex(e)?n.colors[e]:r},getColorRepeating:function(e){var t=n.colors.length;return e=t?e%t:0,this.getColor(e)},setColor:function(e,t){this.isValidIndex(e)&&(n.colors[e]=t)},addColor:function(e){n.colors.push(e)},insertColor:function(e,t){this.isValidIndex(e)&&n.colors.splice(e,1,t)},removeColor:function(e){this.isValidIndex(e)&&n.colors.splice(e,1)},clearColors:function(){n.colors=[]},buildLookupTable:function(e){if(e){var t=n.colors.length;e.setNumberOfTableValues(t);for(var a=0;a<t;a++)e.setTableValue(a,n.colors[a])}},createLookupTable:function(){var e=new a.default;return this.buildLookupTable(e),e},isValidIndex:function(e){return e>=0&&e<n.colors.length}}}},"./colors/index.js":
/*!*************************!*\
  !*** ./colors/index.js ***!
  \*************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./colormap.js */"./colors/colormap.js"),r=n(/*! ./lookupTable.js */"./colors/lookupTable.js");t.default={getColormap:a.getColormap,getColormapsList:a.getColormapsList,LookupTable:r.default}},"./colors/lookupTable.js":
/*!*******************************!*\
  !*** ./colors/lookupTable.js ***!
  \*******************************/
/*! exports provided: default */function(e,t,n){"use strict";function a(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}n.r(t);var r=0,i=1;function o(e,t,n){if(e>1)throw new Error("HSVToRGB expects hue < 1");var a=[];if(0===t)return a[0]=n,a[1]=n,a[2]=n,a;var r=Math.floor(6*e),i=6*e-r,o=n*(1-t),l=n*(1-t*i),s=n*(1-t*(1-i));switch(r){case 0:case 6:a[0]=n,a[1]=s,a[2]=o;break;case 1:a[0]=l,a[1]=n,a[2]=o;break;case 2:a[0]=o,a[1]=n,a[2]=s;break;case 3:a[0]=o,a[1]=l,a[2]=n;break;case 4:a[0]=s,a[1]=o,a[2]=n;break;case 5:a[0]=n,a[1]=o,a[2]=l}return a}var l=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.NumberOfColors=256,this.Ramp="linear",this.TableRange=[0,255],this.HueRange=[0,.66667],this.SaturationRange=[1,1],this.ValueRange=[1,1],this.AlphaRange=[1,1],this.NaNColor=[128,0,0,255],this.BelowRangeColor=[0,0,0,255],this.UseBelowRangeColor=!0,this.AboveRangeColor=[255,255,255,255],this.UseAboveRangeColor=!0,this.InputRange=[0,255],this.Table=[]}return function(e,t,n){t&&a(e.prototype,t),n&&a(e,n)}(e,[{key:"setNumberOfTableValues",value:function(e){this.NumberOfColors=e}},{key:"setRamp",value:function(e){this.Ramp=e}},{key:"setTableRange",value:function(e,t){this.TableRange[0]=e,this.TableRange[1]=t}},{key:"setHueRange",value:function(e,t){this.HueRange[0]=e,this.HueRange[1]=t}},{key:"setSaturationRange",value:function(e,t){this.SaturationRange[0]=e,this.SaturationRange[1]=t}},{key:"setValueRange",value:function(e,t){this.ValueRange[0]=e,this.ValueRange[1]=t}},{key:"setRange",value:function(e,t){this.InputRange[0]=e,this.InputRange[1]=t}},{key:"setAlphaRange",value:function(e,t){this.AlphaRange[0]=e,this.AlphaRange[1]=t}},{key:"getColor",value:function(e){return this.mapValue(e)}},{key:"build",value:function(e){if(!(this.Table.length>1)||e){this.Table=[];var t,n,a,r,i=this.NumberOfColors-1;i?(t=(this.HueRange[1]-this.HueRange[0])/i,n=(this.SaturationRange[1]-this.SaturationRange[0])/i,a=(this.ValueRange[1]-this.ValueRange[0])/i,r=(this.AlphaRange[1]-this.AlphaRange[0])/i):t=n=a=r=0;for(var l=0;l<=i;l++){var s=this.HueRange[0]+l*t,u=this.SaturationRange[0]+l*n,d=this.ValueRange[0]+l*a,c=this.AlphaRange[0]+l*r,f=o(s,u,d),h=[];switch(this.Ramp){case"scurve":h[0]=Math.floor(127.5*(1+Math.cos((1-f[0])*Math.PI))),h[1]=Math.floor(127.5*(1+Math.cos((1-f[1])*Math.PI))),h[2]=Math.floor(127.5*(1+Math.cos((1-f[2])*Math.PI))),h[3]=Math.floor(255*c);break;case"linear":h[0]=Math.floor(255*f[0]+.5),h[1]=Math.floor(255*f[1]+.5),h[2]=Math.floor(255*f[2]+.5),h[3]=Math.floor(255*c+.5);break;case"sqrt":h[0]=Math.floor(255*Math.sqrt(f[0])+.5),h[1]=Math.floor(255*Math.sqrt(f[1])+.5),h[2]=Math.floor(255*Math.sqrt(f[2])+.5),h[3]=Math.floor(255*Math.sqrt(c)+.5);break;default:throw new Error("Invalid Ramp value (".concat(this.Ramp,")"))}this.Table.push(h)}this.buildSpecialColors()}}},{key:"buildSpecialColors",value:function(){var e=this.NumberOfColors,t=e+r,n=e+i,a=e+2;this.UseBelowRangeColor||0===e?this.Table[t]=this.BelowRangeColor:this.Table[t]=this.Table[0],this.UseAboveRangeColor||0===e?this.Table[n]=this.AboveRangeColor:this.Table[n]=this.Table[e-1],this.Table[a]=this.NaNColor}},{key:"mapValue",value:function(e){var t=this.getIndex(e);if(t<0)return this.NaNColor;if(0===t){if(this.UseBelowRangeColor&&e<this.TableRange[0])return this.BelowRangeColor}else if(t===this.NumberOfColors-1&&this.UseAboveRangeColor&&e>this.TableRange[1])return this.AboveRangeColor;return this.Table[t]}},{key:"getIndex",value:function(e){var t={Range:[]};if(t.MaxIndex=this.NumberOfColors-1,t.Shift=-this.TableRange[0],this.TableRange[1]<=this.TableRange[0]?t.Scale=Number.MAX_VALUE:t.Scale=t.MaxIndex/(this.TableRange[1]-this.TableRange[0]),t.Range[0]=this.TableRange[0],t.Range[1]=this.TableRange[1],isNaN(e))return-1;var n=function(e,t){var n;return n=e<t.Range[0]?t.MaxIndex+r+1.5:e>t.Range[1]?t.MaxIndex+i+1.5:(e+t.Shift)*t.Scale,Math.floor(n)}(e,t);return n===this.NumberOfColors+r?n=0:n===this.NumberOfColors+i&&(n=this.NumberOfColors-1),n}},{key:"setTableValue",value:function(e,t){if(5===arguments.length&&(t=Array.prototype.slice.call(arguments,1)),e<0)throw new Error("Can't set the table value for negative index (".concat(e,")"));e>=this.NumberOfColors&&new Error("Index ".concat(e," is greater than the number of colors ").concat(this.NumberOfColors)),this.Table[e]=t,0!==e&&e!==this.NumberOfColors-1||this.buildSpecialColors()}}]),e}();t.default=l},"./disable.js":
/*!********************!*\
  !*** ./disable.js ***!
  \********************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./enabledElements.js */"./enabledElements.js"),r=n(/*! ./triggerEvent.js */"./triggerEvent.js"),i=n(/*! ./events.js */"./events.js");t.default=function(e){if(void 0===e)throw new Error("disable: element must not be undefined");for(var t=Object(a.getEnabledElements)(),n=0;n<t.length;n++)if(t[n].element===e){var o={element:e};Object(r.default)(e,i.default.ELEMENT_DISABLED,o),Object(r.default)(i.events,i.default.ELEMENT_DISABLED,o),t[n].element.removeChild(t[n].canvas),t[n].canvas=void 0,t.splice(n,1);break}}},"./displayImage.js":
/*!*************************!*\
  !*** ./displayImage.js ***!
  \*************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./enabledElements.js */"./enabledElements.js"),r=n(/*! ./internal/getDefaultViewport.js */"./internal/getDefaultViewport.js"),i=n(/*! ./updateImage.js */"./updateImage.js"),o=n(/*! ./internal/now.js */"./internal/now.js"),l=n(/*! ./layers.js */"./layers.js"),s=n(/*! ./triggerEvent.js */"./triggerEvent.js"),u=n(/*! ./events.js */"./events.js");t.default=function(e,t,n){if(void 0===e)throw new Error("displayImage: parameter element must not be undefined");if(void 0===t)throw new Error("displayImage: parameter image must not be undefined");var d,c=Object(a.getEnabledElement)(e),f=c.image;if(c.image=t,c.layers&&c.layers.length&&Object(l.setLayerImage)(e,t),void 0===c.viewport&&(c.viewport=Object(r.default)(c.canvas,t)),n)for(var h in n)null!==n[h]&&(c.viewport[h]=n[h]);void 0!==c.lastImageTimeStamp&&(d=(1e3/(Object(o.default)()-c.lastImageTimeStamp)).toFixed());c.lastImageTimeStamp=Object(o.default)();var m={viewport:c.viewport,element:c.element,image:c.image,oldImage:f,enabledElement:c,frameRate:d};Object(s.default)(c.element,u.default.NEW_IMAGE,m),Object(i.default)(e)}},"./draw.js":
/*!*****************!*\
  !*** ./draw.js ***!
  \*****************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./enabledElements.js */"./enabledElements.js"),r=n(/*! ./internal/drawImage.js */"./internal/drawImage.js");t.default=function(e){var t=Object(a.getEnabledElement)(e);if(void 0===t.image)throw new Error("draw: image has not been loaded yet");Object(r.default)(t)}},"./drawInvalidated.js":
/*!****************************!*\
  !*** ./drawInvalidated.js ***!
  \****************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./enabledElements.js */"./enabledElements.js"),r=n(/*! ./internal/drawImage.js */"./internal/drawImage.js");t.default=function(){for(var e=Object(a.getEnabledElements)(),t=0;t<e.length;t++){var n=e[t];!0===n.invalid&&Object(r.default)(n,!0)}}},"./enable.js":
/*!*******************!*\
  !*** ./enable.js ***!
  \*******************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./enabledElements.js */"./enabledElements.js"),r=n(/*! ./resize.js */"./resize.js"),i=n(/*! ./internal/drawImageSync.js */"./internal/drawImageSync.js"),o=n(/*! ./internal/requestAnimationFrame.js */"./internal/requestAnimationFrame.js"),l=n(/*! ./internal/tryEnableWebgl.js */"./internal/tryEnableWebgl.js"),s=n(/*! ./triggerEvent.js */"./triggerEvent.js"),u=n(/*! ./generateUUID.js */"./generateUUID.js"),d=n(/*! ./events.js */"./events.js"),c=n(/*! ./internal/getCanvas.js */"./internal/getCanvas.js");t.default=function(e,t){if(void 0===e)throw new Error("enable: parameter element cannot be undefined");t&&t.renderer&&"webgl"===t.renderer.toLowerCase()&&Object(l.default)(t);var n={element:e,canvas:Object(c.default)(e),image:void 0,invalid:!1,needsRedraw:!0,options:t,layers:[],data:{},renderingTools:{},uuid:Object(u.default)()};Object(a.addEnabledElement)(n),Object(s.default)(d.events,d.default.ELEMENT_ENABLED,n),Object(r.default)(e,!0),function e(t){if(void 0!==n.canvas){var a={enabledElement:n,timestamp:t};Object(s.default)(n.element,d.default.PRE_RENDER,a),n.needsRedraw&&function(e){return void 0!==e.image||e.layers.length>0}(n)&&Object(i.default)(n,n.invalid),Object(o.default)(e)}}()}},"./enabledElementData.js":
/*!*******************************!*\
  !*** ./enabledElementData.js ***!
  \*******************************/
/*! exports provided: getElementData, removeElementData */function(e,t,n){"use strict";n.r(t),n.d(t,"getElementData",function(){return r}),n.d(t,"removeElementData",function(){return i});var a=n(/*! ./enabledElements.js */"./enabledElements.js");function r(e,t){var n=Object(a.getEnabledElement)(e);return!1===n.data.hasOwnProperty(t)&&(n.data[t]={}),n.data[t]}function i(e,t){delete Object(a.getEnabledElement)(e).data[t]}},"./enabledElements.js":
/*!****************************!*\
  !*** ./enabledElements.js ***!
  \****************************/
/*! exports provided: getEnabledElement, addEnabledElement, getEnabledElementsByImageId, getEnabledElements */function(e,t,n){"use strict";n.r(t),n.d(t,"getEnabledElement",function(){return r}),n.d(t,"addEnabledElement",function(){return i}),n.d(t,"getEnabledElementsByImageId",function(){return o}),n.d(t,"getEnabledElements",function(){return l});var a=[];function r(e){if(void 0===e)throw new Error("getEnabledElement: parameter element must not be undefined");for(var t=0;t<a.length;t++)if(a[t].element===e)return a[t];throw new Error("element not enabled")}function i(e){if(void 0===e)throw new Error("getEnabledElement: enabledElement element must not be undefined");a.push(e)}function o(e){var t=[];return a.forEach(function(n){n.image&&n.image.imageId===e&&t.push(n)}),t}function l(){return a}},"./events.js":
/*!*******************!*\
  !*** ./events.js ***!
  \*******************/
/*! exports provided: default, events */function(e,t,n){"use strict";function a(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}n.r(t),n.d(t,"events",function(){return r});t.default={NEW_IMAGE:"cornerstonenewimage",INVALIDATED:"cornerstoneinvalidated",PRE_RENDER:"cornerstoneprerender",IMAGE_CACHE_MAXIMUM_SIZE_CHANGED:"cornerstoneimagecachemaximumsizechanged",IMAGE_CACHE_PROMISE_REMOVED:"cornerstoneimagecachepromiseremoved",IMAGE_CACHE_FULL:"cornerstoneimagecachefull",IMAGE_CACHE_CHANGED:"cornerstoneimagecachechanged",WEBGL_TEXTURE_REMOVED:"cornerstonewebgltextureremoved",WEBGL_TEXTURE_CACHE_FULL:"cornerstonewebgltexturecachefull",IMAGE_LOADED:"cornerstoneimageloaded",IMAGE_LOAD_FAILED:"cornerstoneimageloadfailed",ELEMENT_RESIZED:"cornerstoneelementresized",IMAGE_RENDERED:"cornerstoneimagerendered",LAYER_ADDED:"cornerstonelayeradded",LAYER_REMOVED:"cornerstonelayerremoved",ACTIVE_LAYER_CHANGED:"cornerstoneactivelayerchanged",ELEMENT_DISABLED:"cornerstoneelementdisabled",ELEMENT_ENABLED:"cornerstoneelementenabled"};var r=new(function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.listeners={},this.namespaces={}}return function(e,t,n){t&&a(e.prototype,t),n&&a(e,n)}(e,[{key:"addEventNamespaceListener",value:function(e,t){e.indexOf(".")<=0||(this.namespaces[e]=t,this.addEventListener(e.split(".")[0],t))}},{key:"removeEventNamespaceListener",value:function(e){e.indexOf(".")<=0||!this.namespaces[e]||(this.removeEventListener(e.split(".")[0],this.namespaces[e]),delete this.namespaces[e])}},{key:"addEventListener",value:function(e,t){e.indexOf(".")>0?this.addEventNamespaceListener(e,t):(e in this.listeners||(this.listeners[e]=[]),this.listeners[e].push(t))}},{key:"removeEventListener",value:function(e,t){if(e.indexOf(".")>0)this.removeEventNamespaceListener(e);else if(e in this.listeners)for(var n=this.listeners[e],a=0,r=n.length;a<r;a++)if(n[a]===t)return void n.splice(a,1)}},{key:"dispatchEvent",value:function(e){if(!(e.type in this.listeners))return!0;for(var t=this.listeners[e.type],n=0,a=t.length;n<a;n++)t[n].call(this,e);return!e.defaultPrevented}}]),e}())},"./falseColorMapping.js":
/*!******************************!*\
  !*** ./falseColorMapping.js ***!
  \******************************/
/*! exports provided: convertImageToFalseColorImage, convertToFalseColorImage, restoreImage */function(e,t,n){"use strict";n.r(t),n.d(t,"convertImageToFalseColorImage",function(){return l}),n.d(t,"convertToFalseColorImage",function(){return s}),n.d(t,"restoreImage",function(){return o});var a=n(/*! ./enabledElements.js */"./enabledElements.js"),r=n(/*! ./pixelDataToFalseColorData.js */"./pixelDataToFalseColorData.js"),i=n(/*! ./colors/colormap.js */"./colors/colormap.js");function o(e){return!(!e.restore||"function"!=typeof e.restore)&&(e.restore(),!0)}function l(e,t){if(e.color&&!e.falseColor)throw new Error("Color transforms are not implemented yet");var n=(t=function(e){return e&&"string"==typeof e&&(e=Object(i.getColormap)(e)),e}(t)).getId();if(e.colormapId===n)return!1;if(o(e),n){var a=e.minPixelValue||0,l=e.maxPixelValue||255;e.restore=function(e){if(e.restore)return e.restore;var t=e.color,n=e.rgba,a=e.cachedLut,r=e.slope,i=e.windowWidth,o=e.windowCenter,l=e.minPixelValue,s=e.maxPixelValue;return function(){if(e.color=t,e.rgba=n,e.cachedLut=a,e.slope=r,e.windowWidth=i,e.windowCenter=o,e.minPixelValue=l,e.maxPixelValue=s,e.origPixelData){var u=e.origPixelData;e.getPixelData=function(){return u}}e.origPixelData=void 0,e.colormapId=void 0,e.falseColor=void 0}}(e);var s=t.createLookupTable();s.setTableRange(a,l),Object(r.default)(e,s);var u=function(e){for(var t,n=Number.MAX_VALUE,a=Number.MIN_VALUE,r=e.length,i=0;i<r;i++)n=n<(t=e[i])?n:t,a=a>t?a:t;return{minPixelValue:n,maxPixelValue:a}}(e.getPixelData());e.minPixelValue=u.minPixelValue,e.maxPixelValue=u.maxPixelValue,e.windowWidth=255,e.windowCenter=128,e.colormapId=n}return!0}function s(e,t){return l(Object(a.getEnabledElement)(e).image,t)}},"./fitToWindow.js":
/*!************************!*\
  !*** ./fitToWindow.js ***!
  \************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./enabledElements.js */"./enabledElements.js"),r=n(/*! ./updateImage.js */"./updateImage.js"),i=n(/*! ./internal/getImageFitScale.js */"./internal/getImageFitScale.js");t.default=function(e){var t=Object(a.getEnabledElement)(e),n=t.image;t.viewport.scale=Object(i.default)(t.canvas,n,t.viewport.rotation).scaleFactor,t.viewport.translation.x=0,t.viewport.translation.y=0,Object(r.default)(e)}},"./generateUUID.js":
/*!*************************!*\
  !*** ./generateUUID.js ***!
  \*************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t),t.default=function(){var e=(new Date).getTime();return"undefined"!=typeof performance&&"function"==typeof performance.now&&(e+=performance.now()),"x.x.x.x.x.x.xxxx.xxx.x.x.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx".replace(/[xy]/g,function(t){var n=(e+16*Math.random())%16|0;return e=Math.floor(e/16),("x"===t?n:3&n|8).toString(16)})}},"./getDefaultViewportForImage.js":
/*!***************************************!*\
  !*** ./getDefaultViewportForImage.js ***!
  \***************************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./enabledElements.js */"./enabledElements.js"),r=n(/*! ./internal/getDefaultViewport.js */"./internal/getDefaultViewport.js");t.default=function(e,t){var n=Object(a.getEnabledElement)(e);return Object(r.default)(n.canvas,t)}},"./getImage.js":
/*!*********************!*\
  !*** ./getImage.js ***!
  \*********************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./enabledElements.js */"./enabledElements.js");t.default=function(e){return Object(a.getEnabledElement)(e).image}},"./getPixels.js":
/*!**********************!*\
  !*** ./getPixels.js ***!
  \**********************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./enabledElements.js */"./enabledElements.js"),r=n(/*! ./getStoredPixels.js */"./getStoredPixels.js"),i=n(/*! ./internal/getModalityLUT.js */"./internal/getModalityLUT.js");t.default=function(e,t,n,o,l){var s=Object(r.default)(e,t,n,o,l),u=Object(a.getEnabledElement)(e),d=Object(i.default)(u.image.slope,u.image.intercept,u.viewport.modalityLUT);return s.map(d)}},"./getStoredPixels.js":
/*!****************************!*\
  !*** ./getStoredPixels.js ***!
  \****************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./enabledElements.js */"./enabledElements.js");t.default=function(e,t,n,r,i){if(void 0===e)throw new Error("getStoredPixels: parameter element must not be undefined");t=Math.round(t),n=Math.round(n);for(var o=Object(a.getEnabledElement)(e),l=[],s=0,u=o.image.getPixelData(),d=0;d<i;d++)for(var c=0;c<r;c++){var f=(d+n)*o.image.columns+(c+t);l[s++]=u[f]}return l}},"./getViewport.js":
/*!************************!*\
  !*** ./getViewport.js ***!
  \************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./enabledElements.js */"./enabledElements.js");t.default=function(e){var t=Object(a.getEnabledElement)(e).viewport;if(void 0!==t)return Object.assign({},t)}},"./imageCache.js":
/*!***********************!*\
  !*** ./imageCache.js ***!
  \***********************/
/*! exports provided: cachedImages, setMaximumSizeBytes, putImageLoadObject, getImageLoadObject, removeImageLoadObject, getCacheInfo, purgeCache, changeImageIdCacheSize, default */function(e,t,n){"use strict";n.r(t),n.d(t,"cachedImages",function(){return s}),n.d(t,"setMaximumSizeBytes",function(){return u}),n.d(t,"putImageLoadObject",function(){return c}),n.d(t,"getImageLoadObject",function(){return f}),n.d(t,"removeImageLoadObject",function(){return h}),n.d(t,"getCacheInfo",function(){return m}),n.d(t,"purgeCache",function(){return v}),n.d(t,"changeImageIdCacheSize",function(){return g});var a=n(/*! ./events.js */"./events.js"),r=n(/*! ./triggerEvent.js */"./triggerEvent.js"),i=1073741824,o=0,l={},s=[];function u(e){if(void 0===e)throw new Error("setMaximumSizeBytes: parameter numBytes must not be undefined");if(void 0===e.toFixed)throw new Error("setMaximumSizeBytes: parameter numBytes must be a number");i=e,Object(r.default)(a.events,a.default.IMAGE_CACHE_MAXIMUM_SIZE_CHANGED),d()}function d(){if(!(o<=i)){for(s.sort(function(e,t){return e.timeStamp>t.timeStamp?-1:e.timeStamp<t.timeStamp?1:0});o>i;){var e=s[s.length-1].imageId;h(e),Object(r.default)(a.events,a.default.IMAGE_CACHE_PROMISE_REMOVED,{imageId:e})}var t=m();Object(r.default)(a.events,a.default.IMAGE_CACHE_FULL,t)}}function c(e,t){if(void 0===e)throw new Error("putImageLoadObject: imageId must not be undefined");if(void 0===t.promise)throw new Error("putImageLoadObject: imageLoadObject.promise must not be undefined");if(!0===l.hasOwnProperty(e))throw new Error("putImageLoadObject: imageId already in cache");if(t.cancelFn&&"function"!=typeof t.cancelFn)throw new Error("putImageLoadObject: imageLoadObject.cancelFn must be a function");var n={loaded:!1,imageId:e,sharedCacheKey:void 0,imageLoadObject:t,timeStamp:Date.now(),sizeInBytes:0};l[e]=n,s.push(n),t.promise.then(function(e){if(-1!==s.indexOf(n)){if(n.loaded=!0,n.image=e,void 0===e.sizeInBytes)throw new Error("putImageLoadObject: image.sizeInBytes must not be undefined");if(void 0===e.sizeInBytes.toFixed)throw new Error("putImageLoadObject: image.sizeInBytes is not a number");n.sizeInBytes=e.sizeInBytes,o+=n.sizeInBytes;var t={action:"addImage",image:n};Object(r.default)(a.events,a.default.IMAGE_CACHE_CHANGED,t),n.sharedCacheKey=e.sharedCacheKey,d()}},function(){var t=l[e];s.splice(s.indexOf(t),1),delete l[e]})}function f(e){if(void 0===e)throw new Error("getImageLoadObject: imageId must not be undefined");var t=l[e];if(void 0!==t)return t.timeStamp=Date.now(),t.imageLoadObject}function h(e){if(void 0===e)throw new Error("removeImageLoadObject: imageId must not be undefined");var t=l[e];if(void 0===t)throw new Error("removeImageLoadObject: imageId was not present in imageCache");s.splice(s.indexOf(t),1),o-=t.sizeInBytes;var n={action:"deleteImage",image:t};Object(r.default)(a.events,a.default.IMAGE_CACHE_CHANGED,n),function(e){e.promise.then(function(){e.decache&&e.decache()},function(){e.decache&&e.decache()})}(t.imageLoadObject),delete l[e]}function m(){return{maximumSizeInBytes:i,cacheSizeInBytes:o,numberOfImagesCached:s.length}}function v(){for(;s.length>0;){h(s[0].imageId)}}function g(e,t){var n=l[e];n&&n.imageLoadObject.promise.then(function(e){var i=t-e.sizeInBytes;e.sizeInBytes=t,n.sizeInBytes=t,o+=i;var l={action:"changeImageSize",image:e};Object(r.default)(a.events,a.default.IMAGE_CACHE_CHANGED,l)})}t.default={imageCache:l,cachedImages:s,setMaximumSizeBytes:u,putImageLoadObject:c,getImageLoadObject:f,removeImageLoadObject:h,getCacheInfo:m,purgeCache:v,changeImageIdCacheSize:g}},"./imageLoader.js":
/*!************************!*\
  !*** ./imageLoader.js ***!
  \************************/
/*! exports provided: loadImage, loadAndCacheImage, registerImageLoader, registerUnknownImageLoader */function(e,t,n){"use strict";n.r(t),n.d(t,"loadImage",function(){return u}),n.d(t,"loadAndCacheImage",function(){return d}),n.d(t,"registerImageLoader",function(){return c}),n.d(t,"registerUnknownImageLoader",function(){return f});var a,r=n(/*! ./imageCache.js */"./imageCache.js"),i=n(/*! ./events.js */"./events.js"),o=n(/*! ./triggerEvent.js */"./triggerEvent.js"),l={};function s(e,t){var n=e.indexOf(":"),r=e.substring(0,n),s=l[r];if(void 0===s||null===s){if(void 0!==a)return a(e);throw new Error("loadImageFromImageLoader: no image loader for imageId")}var u=s(e,t);return u.promise.then(function(e){Object(o.default)(i.events,i.default.IMAGE_LOADED,{image:e})},function(t){var n={imageId:e,error:t};Object(o.default)(i.events,i.default.IMAGE_LOAD_FAILED,n)}),u}function u(e,t){if(void 0===e)throw new Error("loadImage: parameter imageId must not be undefined");var n=Object(r.getImageLoadObject)(e);return void 0!==n?n.promise:s(e,t).promise}function d(e,t){if(void 0===e)throw new Error("loadAndCacheImage: parameter imageId must not be undefined");var n=Object(r.getImageLoadObject)(e);return void 0!==n?n.promise:(n=s(e,t),Object(r.putImageLoadObject)(e,n),n.promise)}function c(e,t){l[e]=t}function f(e){var t=a;return a=e,t}},"./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! exports provided: drawImage, generateLut, getDefaultViewport, requestAnimationFrame, storedPixelDataToCanvasImageData, storedColorPixelDataToCanvasImageData, storedPixelDataToCanvasImageDataColorLUT, storedPixelDataToCanvasImageDataPseudocolorLUT, internal, renderLabelMapImage, renderPseudoColorImage, renderColorImage, renderGrayscaleImage, renderWebImage, renderToCanvas, canvasToPixel, disable, displayImage, draw, drawInvalidated, enable, getElementData, removeElementData, getEnabledElement, addEnabledElement, getEnabledElementsByImageId, getEnabledElements, addLayer, removeLayer, getLayer, getLayers, getVisibleLayers, setActiveLayer, getActiveLayer, purgeLayers, setLayerImage, fitToWindow, getDefaultViewportForImage, getImage, getPixels, getStoredPixels, getViewport, loadImage, loadAndCacheImage, registerImageLoader, registerUnknownImageLoader, invalidate, invalidateImageId, pageToPixel, pixelToCanvas, reset, resize, setToPixelCoordinateSystem, setViewport, updateImage, pixelDataToFalseColorData, rendering, imageCache, metaData, webGL, colors, convertImageToFalseColorImage, convertToFalseColorImage, restoreImage, EVENTS, events, triggerEvent */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./internal/drawImage.js */"./internal/drawImage.js");n.d(t,"drawImage",function(){return a.default});var r=n(/*! ./internal/generateLut.js */"./internal/generateLut.js");n.d(t,"generateLut",function(){return r.default});var i=n(/*! ./internal/getDefaultViewport.js */"./internal/getDefaultViewport.js");n.d(t,"getDefaultViewport",function(){return i.default});var o=n(/*! ./internal/requestAnimationFrame.js */"./internal/requestAnimationFrame.js");n.d(t,"requestAnimationFrame",function(){return o.default});var l=n(/*! ./internal/storedPixelDataToCanvasImageData.js */"./internal/storedPixelDataToCanvasImageData.js");n.d(t,"storedPixelDataToCanvasImageData",function(){return l.default});var s=n(/*! ./internal/storedColorPixelDataToCanvasImageData.js */"./internal/storedColorPixelDataToCanvasImageData.js");n.d(t,"storedColorPixelDataToCanvasImageData",function(){return s.default});var u=n(/*! ./internal/storedPixelDataToCanvasImageDataColorLUT.js */"./internal/storedPixelDataToCanvasImageDataColorLUT.js");n.d(t,"storedPixelDataToCanvasImageDataColorLUT",function(){return u.default});var d=n(/*! ./internal/storedPixelDataToCanvasImageDataPseudocolorLUT.js */"./internal/storedPixelDataToCanvasImageDataPseudocolorLUT.js");n.d(t,"storedPixelDataToCanvasImageDataPseudocolorLUT",function(){return d.default});var c=n(/*! ./internal/index.js */"./internal/index.js");n.d(t,"internal",function(){return c.default});var f=n(/*! ./rendering/renderLabelMapImage.js */"./rendering/renderLabelMapImage.js");n.d(t,"renderLabelMapImage",function(){return f.renderLabelMapImage});var h=n(/*! ./rendering/renderPseudoColorImage.js */"./rendering/renderPseudoColorImage.js");n.d(t,"renderPseudoColorImage",function(){return h.renderPseudoColorImage});var m=n(/*! ./rendering/renderColorImage.js */"./rendering/renderColorImage.js");n.d(t,"renderColorImage",function(){return m.renderColorImage});var v=n(/*! ./rendering/renderGrayscaleImage.js */"./rendering/renderGrayscaleImage.js");n.d(t,"renderGrayscaleImage",function(){return v.renderGrayscaleImage});var g=n(/*! ./rendering/renderWebImage.js */"./rendering/renderWebImage.js");n.d(t,"renderWebImage",function(){return g.renderWebImage});var p=n(/*! ./rendering/renderToCanvas.js */"./rendering/renderToCanvas.js");n.d(t,"renderToCanvas",function(){return p.default});var b=n(/*! ./canvasToPixel.js */"./canvasToPixel.js");n.d(t,"canvasToPixel",function(){return b.default});var y=n(/*! ./disable.js */"./disable.js");n.d(t,"disable",function(){return y.default});var w=n(/*! ./displayImage.js */"./displayImage.js");n.d(t,"displayImage",function(){return w.default});var _=n(/*! ./draw.js */"./draw.js");n.d(t,"draw",function(){return _.default});var E=n(/*! ./drawInvalidated.js */"./drawInvalidated.js");n.d(t,"drawInvalidated",function(){return E.default});var x=n(/*! ./enable.js */"./enable.js");n.d(t,"enable",function(){return x.default});var T=n(/*! ./enabledElementData.js */"./enabledElementData.js");n.d(t,"getElementData",function(){return T.getElementData}),n.d(t,"removeElementData",function(){return T.removeElementData});var P=n(/*! ./enabledElements.js */"./enabledElements.js");n.d(t,"getEnabledElement",function(){return P.getEnabledElement}),n.d(t,"addEnabledElement",function(){return P.addEnabledElement}),n.d(t,"getEnabledElementsByImageId",function(){return P.getEnabledElementsByImageId}),n.d(t,"getEnabledElements",function(){return P.getEnabledElements});var O=n(/*! ./layers.js */"./layers.js");n.d(t,"addLayer",function(){return O.addLayer}),n.d(t,"removeLayer",function(){return O.removeLayer}),n.d(t,"getLayer",function(){return O.getLayer}),n.d(t,"getLayers",function(){return O.getLayers}),n.d(t,"getVisibleLayers",function(){return O.getVisibleLayers}),n.d(t,"setActiveLayer",function(){return O.setActiveLayer}),n.d(t,"getActiveLayer",function(){return O.getActiveLayer}),n.d(t,"purgeLayers",function(){return O.purgeLayers}),n.d(t,"setLayerImage",function(){return O.setLayerImage});var S=n(/*! ./fitToWindow.js */"./fitToWindow.js");n.d(t,"fitToWindow",function(){return S.default});var I=n(/*! ./getDefaultViewportForImage.js */"./getDefaultViewportForImage.js");n.d(t,"getDefaultViewportForImage",function(){return I.default});var M=n(/*! ./getImage.js */"./getImage.js");n.d(t,"getImage",function(){return M.default});var C=n(/*! ./getPixels.js */"./getPixels.js");n.d(t,"getPixels",function(){return C.default});var L=n(/*! ./getStoredPixels.js */"./getStoredPixels.js");n.d(t,"getStoredPixels",function(){return L.default});var D=n(/*! ./getViewport.js */"./getViewport.js");n.d(t,"getViewport",function(){return D.default});var A=n(/*! ./imageLoader.js */"./imageLoader.js");n.d(t,"loadImage",function(){return A.loadImage}),n.d(t,"loadAndCacheImage",function(){return A.loadAndCacheImage}),n.d(t,"registerImageLoader",function(){return A.registerImageLoader}),n.d(t,"registerUnknownImageLoader",function(){return A.registerUnknownImageLoader});var j=n(/*! ./invalidate.js */"./invalidate.js");n.d(t,"invalidate",function(){return j.default});var k=n(/*! ./invalidateImageId.js */"./invalidateImageId.js");n.d(t,"invalidateImageId",function(){return k.default});var R=n(/*! ./pageToPixel.js */"./pageToPixel.js");n.d(t,"pageToPixel",function(){return R.default});var U=n(/*! ./pixelToCanvas.js */"./pixelToCanvas.js");n.d(t,"pixelToCanvas",function(){return U.default});var N=n(/*! ./reset.js */"./reset.js");n.d(t,"reset",function(){return N.default});var B=n(/*! ./resize.js */"./resize.js");n.d(t,"resize",function(){return B.default});var H=n(/*! ./setToPixelCoordinateSystem.js */"./setToPixelCoordinateSystem.js");n.d(t,"setToPixelCoordinateSystem",function(){return H.default});var F=n(/*! ./setViewport.js */"./setViewport.js");n.d(t,"setViewport",function(){return F.default});var V=n(/*! ./updateImage.js */"./updateImage.js");n.d(t,"updateImage",function(){return V.default});var z=n(/*! ./pixelDataToFalseColorData.js */"./pixelDataToFalseColorData.js");n.d(t,"pixelDataToFalseColorData",function(){return z.default});var W=n(/*! ./rendering/index.js */"./rendering/index.js");n.d(t,"rendering",function(){return W.default});var G=n(/*! ./imageCache.js */"./imageCache.js");n.d(t,"imageCache",function(){return G.default});var q=n(/*! ./metaData.js */"./metaData.js");n.d(t,"metaData",function(){return q.default});var Y=n(/*! ./webgl/index.js */"./webgl/index.js");n.d(t,"webGL",function(){return Y.default});var Z=n(/*! ./colors/index.js */"./colors/index.js");n.d(t,"colors",function(){return Z.default});var K=n(/*! ./falseColorMapping.js */"./falseColorMapping.js");n.d(t,"convertImageToFalseColorImage",function(){return K.convertImageToFalseColorImage}),n.d(t,"convertToFalseColorImage",function(){return K.convertToFalseColorImage}),n.d(t,"restoreImage",function(){return K.restoreImage});var X=n(/*! ./events.js */"./events.js");n.d(t,"EVENTS",function(){return X.default}),n.d(t,"events",function(){return X.events});var J=n(/*! ./triggerEvent.js */"./triggerEvent.js");n.d(t,"triggerEvent",function(){return J.default})},"./internal/calculateTransform.js":
/*!****************************************!*\
  !*** ./internal/calculateTransform.js ***!
  \****************************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./transform.js */"./internal/transform.js");t.default=function(e,t){var n=new a.Transform;n.translate(e.canvas.width/2,e.canvas.height/2);var r=e.viewport.rotation;0!==r&&n.rotate(r*Math.PI/180);var i=e.viewport.scale,o=e.viewport.scale,l=e.viewport.displayedArea.brhc.x-(e.viewport.displayedArea.tlhc.x-1),s=e.viewport.displayedArea.brhc.y-(e.viewport.displayedArea.tlhc.y-1);if("NONE"===e.viewport.displayedArea.presentationSizeMode)e.image.rowPixelSpacing<e.image.columnPixelSpacing?i*=e.image.columnPixelSpacing/e.image.rowPixelSpacing:e.image.columnPixelSpacing<e.image.rowPixelSpacing&&(o*=e.image.rowPixelSpacing/e.image.columnPixelSpacing);else if(i=e.viewport.displayedArea.columnPixelSpacing,o=e.viewport.displayedArea.rowPixelSpacing,"SCALE TO FIT"===e.viewport.displayedArea.presentationSizeMode){var u=e.canvas.height/(s*o),d=e.canvas.width/(l*i);i=o=Math.min(d,u),e.viewport.displayedArea.rowPixelSpacing<e.viewport.displayedArea.columnPixelSpacing?i*=e.viewport.displayedArea.columnPixelSpacing/e.viewport.displayedArea.rowPixelSpacing:e.viewport.displayedArea.columnPixelSpacing<e.viewport.displayedArea.rowPixelSpacing&&(o*=e.viewport.displayedArea.rowPixelSpacing/e.viewport.displayedArea.columnPixelSpacing)}return n.scale(i,o),0!==r&&n.rotate(-r*Math.PI/180),n.translate(e.viewport.translation.x,e.viewport.translation.y),0!==r&&n.rotate(r*Math.PI/180),void 0!==t&&n.scale(t,t),e.viewport.hflip&&n.scale(-1,1),e.viewport.vflip&&n.scale(1,-1),n.translate(-l/2,-s/2),n}},"./internal/computeAutoVoi.js":
/*!************************************!*\
  !*** ./internal/computeAutoVoi.js ***!
  \************************************/
/*! exports provided: default */function(e,t,n){"use strict";function a(e,t){if(!function(e){return e.voiLUT&&e.voiLUT.lut&&e.voiLUT.lut.length>0||void 0!==e.voi.windowWidth&&void 0!==e.voi.windowCenter}(e)){var n=t.maxPixelValue*t.slope+t.intercept,a=t.minPixelValue*t.slope+t.intercept,r=n-a,i=(n+a)/2;void 0===e.voi?e.voi={windowWidth:r,windowCenter:i}:(e.voi.windowWidth=r,e.voi.windowCenter=i)}}n.r(t),n.d(t,"default",function(){return a})},"./internal/drawCompositeImage.js":
/*!****************************************!*\
  !*** ./internal/drawCompositeImage.js ***!
  \****************************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ../layers.js */"./layers.js"),r=n(/*! ../rendering/renderGrayscaleImage.js */"./rendering/renderGrayscaleImage.js"),i=n(/*! ../rendering/renderColorImage.js */"./rendering/renderColorImage.js"),o=n(/*! ../rendering/renderPseudoColorImage.js */"./rendering/renderPseudoColorImage.js"),l=n(/*! ../rendering/renderLabelMapImage.js */"./rendering/renderLabelMapImage.js"),s=n(/*! ../setToPixelCoordinateSystem.js */"./setToPixelCoordinateSystem.js");function u(e){var t=e.syncProps||{};t.originalScale=e.viewport.scale,e.syncProps=t}function d(e,t){e.forEach(function(e){if(e!==t&&e.viewport&&t.viewport){e.syncProps||u(e);var n=function(e,t){return e.syncProps||u(e),t.syncProps||u(t),t.syncProps.originalScale/e.syncProps.originalScale}(t,e);e.viewport.scale=t.viewport.scale*n,e.viewport.rotation=t.viewport.rotation,e.viewport.translation={x:t.viewport.translation.x/n,y:t.viewport.translation.y/n},e.viewport.hflip=t.viewport.hflip,e.viewport.vflip=t.viewport.vflip}})}t.default=function(e,t){var n=e.element,c=Object(a.getLayers)(n),f=Object(a.getActiveLayer)(n),h=Object(a.getVisibleLayers)(n),m=!e.lastSyncViewportsState&&e.syncViewports;e.lastSyncViewportsState=e.syncViewports,m&&c.forEach(function(e){e.viewport&&u(e)}),!0===e.syncViewports&&d(h,f);var v=e.canvas.getContext("2d");v.setTransform(1,0,0,1,0,0),v.fillStyle="black",v.fillRect(0,0,e.canvas.width,e.canvas.height),function(e,t,n){t.forEach(function(t,a){if(t.image){e.save(),t.canvas=e.canvas,Object(s.default)(t,e);var u=t.viewport.colormap||t.options.colormap,d=t.viewport.labelmap,c=t.invalid||n;if(u&&""!==u&&!0===d)Object(l.addLabelMapLayer)(t,c);else if(u&&""!==u)Object(o.addPseudoColorLayer)(t,c);else if(!0===t.image.color)Object(i.addColorLayer)(t,c);else{var f=0===a;Object(r.addGrayscaleLayer)(t,c,f)}t.options&&t.options.opacity?e.globalAlpha=t.options.opacity:e.globalAlpha=1,t.options&&t.options.fillStyle&&(e.fillStyle=t.options.fillStyle),e.imageSmoothingEnabled=!t.viewport.pixelReplication,e.mozImageSmoothingEnabled=e.imageSmoothingEnabled;var h=t.viewport.displayedArea.tlhc.x-1,m=t.viewport.displayedArea.tlhc.y-1,v=t.viewport.displayedArea.brhc.x-h,g=t.viewport.displayedArea.brhc.y-m;e.drawImage(t.canvas,h,m,v,g,0,0,v,g),e.restore(),t.invalid=!1}})}(v,h,t)}},"./internal/drawImage.js":
/*!*******************************!*\
  !*** ./internal/drawImage.js ***!
  \*******************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t),t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];e.needsRedraw=!0,t&&(e.invalid=!0)}},"./internal/drawImageSync.js":
/*!***********************************!*\
  !*** ./internal/drawImageSync.js ***!
  \***********************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./now.js */"./internal/now.js"),r=n(/*! ./drawCompositeImage.js */"./internal/drawCompositeImage.js"),i=n(/*! ../rendering/renderColorImage.js */"./rendering/renderColorImage.js"),o=n(/*! ../rendering/renderGrayscaleImage.js */"./rendering/renderGrayscaleImage.js"),l=n(/*! ../rendering/renderPseudoColorImage.js */"./rendering/renderPseudoColorImage.js"),s=n(/*! ../rendering/renderLabelMapImage.js */"./rendering/renderLabelMapImage.js"),u=n(/*! ../triggerEvent.js */"./triggerEvent.js"),d=n(/*! ../events.js */"./events.js");t.default=function(e,t){var n=e.image,c=e.element,f=e.layers||[];if(e.canvas&&(e.image||f.length)){var h=Object(a.default)();if(n.stats={lastGetPixelDataTime:-1,lastStoredPixelDataToCanvasImageDataTime:-1,lastPutImageDataTime:-1,lastRenderTime:-1,lastLutGenerateTime:-1},f&&f.length)Object(r.default)(e,t);else if(n){var m=n.render;m||(m=e.viewport.colormap&&""!==e.viewport.colormap&&!0===e.image.labelmap?s.renderLabelMapImage:e.viewport.colormap&&""!==e.viewport.colormap?l.renderPseudoColorImage:n.color?i.renderColorImage:o.renderGrayscaleImage),m(e,t)}var v=Object(a.default)()-h,g={viewport:e.viewport,element:c,image:n,enabledElement:e,canvasContext:e.canvas.getContext("2d"),renderTimeInMs:v};n.stats.lastRenderTime=v,e.invalid=!1,e.needsRedraw=!1,Object(u.default)(c,d.default.IMAGE_RENDERED,g)}}},"./internal/generateColorLut.js":
/*!**************************************!*\
  !*** ./internal/generateColorLut.js ***!
  \**************************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./getVOILut.js */"./internal/getVOILut.js");t.default=function(e,t,n,r,i){var o=e.maxPixelValue,l=e.minPixelValue,s=Math.min(l,0);if(void 0===e.cachedLut){var u=o-s+1;e.cachedLut={},e.cachedLut.lutArray=new Uint8ClampedArray(u)}var d=e.cachedLut.lutArray,c=Object(a.default)(t,n,i);if(!0===r)for(var f=l;f<=o;f++)d[f+-s]=255-c(f);else for(var h=l;h<=o;h++)d[h+-s]=c(h);return d}},"./internal/generateLut.js":
/*!*********************************!*\
  !*** ./internal/generateLut.js ***!
  \*********************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./getModalityLUT.js */"./internal/getModalityLUT.js"),r=n(/*! ./getVOILut.js */"./internal/getVOILut.js");t.default=function(e,t,n,i,o,l){var s=e.maxPixelValue,u=e.minPixelValue,d=Math.min(u,0);if(void 0===e.cachedLut){var c=s-d+1;e.cachedLut={},e.cachedLut.lutArray=new Uint8ClampedArray(c)}var f=e.cachedLut.lutArray,h=Object(a.default)(e.slope,e.intercept,o),m=Object(r.default)(t,n,l);if(!0===i)for(var v=u;v<=s;v++)f[v+-d]=255-m(h(v));else for(var g=u;g<=s;g++)f[g+-d]=m(h(g));return f}},"./internal/getCanvas.js":
/*!*******************************!*\
  !*** ./internal/getCanvas.js ***!
  \*******************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return r});var a="cornerstone-canvas";function r(e){var t="canvas.".concat(a);return e.querySelector(t)||function(e){var t=document.createElement("canvas");return t.style.display="block",t.classList.add(a),e.appendChild(t),t}(e)}},"./internal/getDefaultViewport.js":
/*!****************************************!*\
  !*** ./internal/getDefaultViewport.js ***!
  \****************************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./getImageFitScale.js */"./internal/getImageFitScale.js");t.default=function(e,t){if(void 0===e)throw new Error("getDefaultViewport: parameter canvas must not be undefined");return void 0===t?{scale:1,translation:{x:0,y:0},voi:{windowWidth:void 0,windowCenter:void 0},invert:!1,pixelReplication:!1,rotation:0,hflip:!1,vflip:!1,modalityLUT:void 0,voiLUT:void 0,colormap:void 0,labelmap:!1,displayedArea:{tlhc:{x:1,y:1},brhc:{x:1,y:1},rowPixelSpacing:1,columnPixelSpacing:1,presentationSizeMode:"NONE"}}:{scale:Object(a.default)(e,t,0).scaleFactor,translation:{x:0,y:0},voi:{windowWidth:t.windowWidth,windowCenter:t.windowCenter},invert:t.invert,pixelReplication:!1,rotation:0,hflip:!1,vflip:!1,modalityLUT:t.modalityLUT,voiLUT:t.voiLUT,colormap:t.colormap,labelmap:Boolean(t.labelmap),displayedArea:{tlhc:{x:1,y:1},brhc:{x:t.columns,y:t.rows},rowPixelSpacing:void 0===t.rowPixelSpacing?1:t.rowPixelSpacing,columnPixelSpacing:void 0===t.columnPixelSpacing?1:t.columnPixelSpacing,presentationSizeMode:"NONE"}}}},"./internal/getImageFitScale.js":
/*!**************************************!*\
  !*** ./internal/getImageFitScale.js ***!
  \**************************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./validator.js */"./internal/validator.js"),r=n(/*! ./getImageSize.js */"./internal/getImageSize.js");t.default=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;Object(a.validateParameterUndefinedOrNull)(e,"getImageScale: parameter windowSize must not be undefined"),Object(a.validateParameterUndefinedOrNull)(t,"getImageScale: parameter image must not be undefined");var i=Object(r.default)(t,n),o=void 0===t.rowPixelSpacing?1:t.rowPixelSpacing,l=void 0===t.columnPixelSpacing?1:t.columnPixelSpacing,s=1,u=1;o<l?u=l/o:s=o/l;var d=e.height/i.height/s,c=e.width/i.width/u;return{verticalScale:d,horizontalScale:c,scaleFactor:Math.min(c,d)}}},"./internal/getImageSize.js":
/*!**********************************!*\
  !*** ./internal/getImageSize.js ***!
  \**********************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./validator.js */"./internal/validator.js");t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return Object(a.validateParameterUndefinedOrNull)(e,"getImageSize: parameter image must not be undefined"),Object(a.validateParameterUndefinedOrNull)(e.width,"getImageSize: parameter image must have width"),Object(a.validateParameterUndefinedOrNull)(e.height,"getImageSize: parameter image must have height"),function(e){return!(null===e||void 0===e||0===e||180===e)}(t)?{height:e.width,width:e.height}:{width:e.width,height:e.height}}},"./internal/getModalityLUT.js":
/*!************************************!*\
  !*** ./internal/getModalityLUT.js ***!
  \************************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t),t.default=function(e,t,n){return n?function(e){var t=e.lut[0],n=e.lut[e.lut.length-1],a=e.firstValueMapped+e.lut.length;return function(r){return r<e.firstValueMapped?t:r>=a?n:e.lut[r]}}(n):function(e,t){return function(n){return n*e+t}}(e,t)}},"./internal/getTransform.js":
/*!**********************************!*\
  !*** ./internal/getTransform.js ***!
  \**********************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./calculateTransform.js */"./internal/calculateTransform.js");t.default=function(e){return Object(a.default)(e)}},"./internal/getVOILut.js":
/*!*******************************!*\
  !*** ./internal/getVOILut.js ***!
  \*******************************/
/*! exports provided: default */function(e,t,n){"use strict";function a(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}n.r(t),t.default=function(e,t,n){return n?function(e){var t=Math.max.apply(Math,a(e.lut)).toString(2).length-8,n=e.lut[0]>>t,r=e.lut[e.lut.length-1]>>t,i=e.firstValueMapped+e.lut.length-1;return function(a){return a<e.firstValueMapped?n:a>=i?r:e.lut[a-e.firstValueMapped]>>t}}(n):function(e,t){return function(n){return 255*((n-t)/e+.5)}}(e,t)}},"./internal/guid.js":
/*!**************************!*\
  !*** ./internal/guid.js ***!
  \**************************/
/*! exports provided: default */function(e,t,n){"use strict";function a(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}n.r(t),t.default=function(){return"".concat(a()+a(),"-").concat(a(),"-").concat(a(),"-").concat(a(),"-").concat(a()).concat(a()).concat(a())}},"./internal/index.js":
/*!***************************!*\
  !*** ./internal/index.js ***!
  \***************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./drawImage.js */"./internal/drawImage.js"),r=n(/*! ./generateLut.js */"./internal/generateLut.js"),i=n(/*! ./getDefaultViewport.js */"./internal/getDefaultViewport.js"),o=n(/*! ./requestAnimationFrame.js */"./internal/requestAnimationFrame.js"),l=n(/*! ./storedPixelDataToCanvasImageData.js */"./internal/storedPixelDataToCanvasImageData.js"),s=n(/*! ./storedPixelDataToCanvasImageDataRGBA.js */"./internal/storedPixelDataToCanvasImageDataRGBA.js"),u=n(/*! ./storedColorPixelDataToCanvasImageData.js */"./internal/storedColorPixelDataToCanvasImageData.js"),d=n(/*! ./storedPixelDataToCanvasImageDataColorLUT.js */"./internal/storedPixelDataToCanvasImageDataColorLUT.js"),c=n(/*! ./storedPixelDataToCanvasImageDataPseudocolorLUT.js */"./internal/storedPixelDataToCanvasImageDataPseudocolorLUT.js"),f=n(/*! ./getTransform.js */"./internal/getTransform.js"),h=n(/*! ./calculateTransform.js */"./internal/calculateTransform.js"),m=n(/*! ./transform.js */"./internal/transform.js");t.default={drawImage:a.default,generateLut:r.default,getDefaultViewport:i.default,requestAnimationFrame:o.default,storedPixelDataToCanvasImageData:l.default,storedPixelDataToCanvasImageDataRGBA:s.default,storedPixelDataToCanvasImageDataColorLUT:d.default,storedPixelDataToCanvasImageDataPseudocolorLUT:c.default,storedColorPixelDataToCanvasImageData:u.default,getTransform:f.default,calculateTransform:h.default,Transform:m.Transform}},"./internal/now.js":
/*!*************************!*\
  !*** ./internal/now.js ***!
  \*************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t),t.default=function(){return window.performance?performance.now():Date.now()}},"./internal/requestAnimationFrame.js":
/*!*******************************************!*\
  !*** ./internal/requestAnimationFrame.js ***!
  \*******************************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t),t.default=function(e){return window.requestAnimationFrame(e)||window.webkitRequestAnimationFrame(e)||window.mozRequestAnimationFrame(e)||window.oRequestAnimationFrame(e)||window.msRequestAnimationFrame(e)||function(e){window.setTimeout(e,1e3/60)}(e)}},"./internal/storedColorPixelDataToCanvasImageData.js":
/*!***********************************************************!*\
  !*** ./internal/storedColorPixelDataToCanvasImageData.js ***!
  \***********************************************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./now.js */"./internal/now.js");t.default=function(e,t,n){var r=Object(a.default)(),i=e.getPixelData();e.stats.lastGetPixelDataTime=Object(a.default)()-r;var o=e.minPixelValue,l=0,s=0,u=i.length;if(r=Object(a.default)(),o<0)for(;s<u;)n[l++]=t[i[s++]+-o],n[l++]=t[i[s++]+-o],n[l]=t[i[s]+-o],s+=2,l+=2;else for(;s<u;)n[l++]=t[i[s++]],n[l++]=t[i[s++]],n[l]=t[i[s]],s+=2,l+=2;e.stats.lastStoredPixelDataToCanvasImageDataTime=Object(a.default)()-r}},"./internal/storedPixelDataToCanvasImageData.js":
/*!******************************************************!*\
  !*** ./internal/storedPixelDataToCanvasImageData.js ***!
  \******************************************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./now.js */"./internal/now.js");t.default=function(e,t,n){var r=Object(a.default)(),i=e.getPixelData();e.stats.lastGetPixelDataTime=Object(a.default)()-r;var o=i.length,l=e.minPixelValue,s=3,u=0;if(r=Object(a.default)(),i instanceof Int16Array)if(l<0)for(;u<o;)n[s]=t[i[u++]+-l],s+=4;else for(;u<o;)n[s]=t[i[u++]],s+=4;else if(i instanceof Uint16Array)for(;u<o;)n[s]=t[i[u++]],s+=4;else if(l<0)for(;u<o;)n[s]=t[i[u++]+-l],s+=4;else for(;u<o;)n[s]=t[i[u++]],s+=4;e.stats.lastStoredPixelDataToCanvasImageDataTime=Object(a.default)()-r}},"./internal/storedPixelDataToCanvasImageDataColorLUT.js":
/*!**************************************************************!*\
  !*** ./internal/storedPixelDataToCanvasImageDataColorLUT.js ***!
  \**************************************************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ../colors/index.js */"./colors/index.js"),r=n(/*! ./now.js */"./internal/now.js");t.default=function(e,t,n){var i=Object(r.default)(),o=e.getPixelData();e.stats.lastGetPixelDataTime=Object(r.default)()-i;var l,s,u=o.length,d=e.minPixelValue,c=0,f=0;if(i=Object(r.default)(),s=t instanceof a.default.LookupTable?t.Table:t,d<0)for(;f<u;)l=s[o[f++]+-d],n[c++]=l[0],n[c++]=l[1],n[c++]=l[2],n[c++]=l[3];else for(;f<u;)l=s[o[f++]],n[c++]=l[0],n[c++]=l[1],n[c++]=l[2],n[c++]=l[3];e.stats.lastStoredPixelDataToCanvasImageDataTime=Object(r.default)()-i}},"./internal/storedPixelDataToCanvasImageDataPseudocolorLUT.js":
/*!********************************************************************!*\
  !*** ./internal/storedPixelDataToCanvasImageDataPseudocolorLUT.js ***!
  \********************************************************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ../colors/index.js */"./colors/index.js"),r=n(/*! ./now.js */"./internal/now.js");t.default=function(e,t,n,i){var o=Object(r.default)(),l=e.getPixelData();e.stats.lastGetPixelDataTime=Object(r.default)()-o;var s,u,d=l.length,c=e.minPixelValue,f=0,h=0;if(o=Object(r.default)(),u=n instanceof a.default.LookupTable?n.Table:n,c<0)for(;h<d;)s=u[t[l[h++]+-c]],i[f++]=s[0],i[f++]=s[1],i[f++]=s[2],i[f++]=s[3];else for(;h<d;)s=u[t[l[h++]]],i[f++]=s[0],i[f++]=s[1],i[f++]=s[2],i[f++]=s[3];e.stats.lastStoredPixelDataToCanvasImageDataTime=Object(r.default)()-o}},"./internal/storedPixelDataToCanvasImageDataRGBA.js":
/*!**********************************************************!*\
  !*** ./internal/storedPixelDataToCanvasImageDataRGBA.js ***!
  \**********************************************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./now.js */"./internal/now.js");t.default=function(e,t,n){var r=Object(a.default)(),i=e.getPixelData();e.stats.lastGetPixelDataTime=Object(a.default)()-r;var o,l=i.length,s=e.minPixelValue,u=0,d=0;if(r=Object(a.default)(),i instanceof Int16Array)if(s<0)for(;d<l;)o=t[i[d++]+-s],n[u++]=o,n[u++]=o,n[u++]=o,n[u++]=255;else for(;d<l;)o=t[i[d++]],n[u++]=o,n[u++]=o,n[u++]=o,n[u++]=255;else if(i instanceof Uint16Array)for(;d<l;)o=t[i[d++]],n[u++]=o,n[u++]=o,n[u++]=o,n[u++]=255;else if(s<0)for(;d<l;)o=t[i[d++]+-s],n[u++]=o,n[u++]=o,n[u++]=o,n[u++]=255;else for(;d<l;)o=t[i[d++]],n[u++]=o,n[u++]=o,n[u++]=o,n[u++]=255;e.stats.lastStoredPixelDataToCanvasImageDataTime=Object(a.default)()-r}},"./internal/storedRGBAPixelDataToCanvasImageData.js":
/*!**********************************************************!*\
  !*** ./internal/storedRGBAPixelDataToCanvasImageData.js ***!
  \**********************************************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./now.js */"./internal/now.js");t.default=function(e,t,n){var r=Object(a.default)(),i=e.getPixelData();e.stats.lastGetPixelDataTime=Object(a.default)()-r;var o=e.minPixelValue,l=0,s=0,u=i.length;if(r=Object(a.default)(),o<0)for(;s<u;)n[l++]=t[i[s++]+-o],n[l++]=t[i[s++]+-o],n[l++]=t[i[s++]+-o],n[l++]=i[s++];else for(;s<u;)n[l++]=t[i[s++]],n[l++]=t[i[s++]],n[l++]=t[i[s++]],n[l++]=i[s++];e.stats.lastStoredPixelDataToCanvasImageDataTime=Object(a.default)()-r}},"./internal/transform.js":
/*!*******************************!*\
  !*** ./internal/transform.js ***!
  \*******************************/
/*! exports provided: Transform */function(e,t,n){"use strict";function a(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}n.r(t),n.d(t,"Transform",function(){return r});var r=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.reset()}return function(e,t,n){t&&a(e.prototype,t),n&&a(e,n)}(e,[{key:"reset",value:function(){this.m=[1,0,0,1,0,0]}},{key:"clone",value:function(){var t=new e;return t.m[0]=this.m[0],t.m[1]=this.m[1],t.m[2]=this.m[2],t.m[3]=this.m[3],t.m[4]=this.m[4],t.m[5]=this.m[5],t}},{key:"multiply",value:function(e){var t=this.m[0]*e.m[0]+this.m[2]*e.m[1],n=this.m[1]*e.m[0]+this.m[3]*e.m[1],a=this.m[0]*e.m[2]+this.m[2]*e.m[3],r=this.m[1]*e.m[2]+this.m[3]*e.m[3],i=this.m[0]*e.m[4]+this.m[2]*e.m[5]+this.m[4],o=this.m[1]*e.m[4]+this.m[3]*e.m[5]+this.m[5];this.m[0]=t,this.m[1]=n,this.m[2]=a,this.m[3]=r,this.m[4]=i,this.m[5]=o}},{key:"invert",value:function(){var e=1/(this.m[0]*this.m[3]-this.m[1]*this.m[2]),t=this.m[3]*e,n=-this.m[1]*e,a=-this.m[2]*e,r=this.m[0]*e,i=e*(this.m[2]*this.m[5]-this.m[3]*this.m[4]),o=e*(this.m[1]*this.m[4]-this.m[0]*this.m[5]);this.m[0]=t,this.m[1]=n,this.m[2]=a,this.m[3]=r,this.m[4]=i,this.m[5]=o}},{key:"rotate",value:function(e){var t=Math.cos(e),n=Math.sin(e),a=this.m[0]*t+this.m[2]*n,r=this.m[1]*t+this.m[3]*n,i=this.m[0]*-n+this.m[2]*t,o=this.m[1]*-n+this.m[3]*t;this.m[0]=a,this.m[1]=r,this.m[2]=i,this.m[3]=o}},{key:"translate",value:function(e,t){this.m[4]+=this.m[0]*e+this.m[2]*t,this.m[5]+=this.m[1]*e+this.m[3]*t}},{key:"scale",value:function(e,t){this.m[0]*=e,this.m[1]*=e,this.m[2]*=t,this.m[3]*=t}},{key:"transformPoint",value:function(e,t){var n=e,a=t;return{x:e=n*this.m[0]+a*this.m[2]+this.m[4],y:t=n*this.m[1]+a*this.m[3]+this.m[5]}}}]),e}()},"./internal/tryEnableWebgl.js":
/*!************************************!*\
  !*** ./internal/tryEnableWebgl.js ***!
  \************************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ../webgl/index.js */"./webgl/index.js");t.default=function(e){return a.default.renderer.isWebGLAvailable()?(a.default.renderer.initRenderer(),e.renderer="webgl",!0):(console.error("WebGL not available, falling back to Canvas renderer"),delete e.renderer,!1)}},"./internal/validator.js":
/*!*******************************!*\
  !*** ./internal/validator.js ***!
  \*******************************/
/*! exports provided: validateParameterUndefined, validateParameterUndefinedOrNull */function(e,t,n){"use strict";function a(e,t){if(void 0===e)throw new Error(t)}function r(e,t){if(void 0===e||null===e)throw new Error(t)}n.r(t),n.d(t,"validateParameterUndefined",function(){return a}),n.d(t,"validateParameterUndefinedOrNull",function(){return r})},"./invalidate.js":
/*!***********************!*\
  !*** ./invalidate.js ***!
  \***********************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./enabledElements.js */"./enabledElements.js"),r=n(/*! ./triggerEvent.js */"./triggerEvent.js"),i=n(/*! ./events.js */"./events.js");t.default=function(e){var t=Object(a.getEnabledElement)(e);t.invalid=!0,t.needsRedraw=!0;var n={element:e};Object(r.default)(e,i.default.INVALIDATED,n)}},"./invalidateImageId.js":
/*!******************************!*\
  !*** ./invalidateImageId.js ***!
  \******************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./enabledElements.js */"./enabledElements.js"),r=n(/*! ./internal/drawImage.js */"./internal/drawImage.js");t.default=function(e){Object(a.getEnabledElementsByImageId)(e).forEach(function(e){Object(r.default)(e,!0)})}},"./layers.js":
/*!*******************!*\
  !*** ./layers.js ***!
  \*******************/
/*! exports provided: rescaleImage, addLayer, removeLayer, getLayer, getLayers, getVisibleLayers, setActiveLayer, setLayerImage, getActiveLayer, purgeLayers */function(e,t,n){"use strict";n.r(t),n.d(t,"rescaleImage",function(){return d}),n.d(t,"addLayer",function(){return c}),n.d(t,"removeLayer",function(){return f}),n.d(t,"getLayer",function(){return h}),n.d(t,"getLayers",function(){return m}),n.d(t,"getVisibleLayers",function(){return v}),n.d(t,"setActiveLayer",function(){return g}),n.d(t,"setLayerImage",function(){return p}),n.d(t,"getActiveLayer",function(){return b}),n.d(t,"purgeLayers",function(){return y});var a=n(/*! ./internal/guid.js */"./internal/guid.js"),r=n(/*! ./enabledElements.js */"./enabledElements.js"),i=n(/*! ./internal/getDefaultViewport.js */"./internal/getDefaultViewport.js"),o=n(/*! ./updateImage.js */"./updateImage.js"),l=n(/*! ./triggerEvent.js */"./triggerEvent.js"),s=n(/*! ./events.js */"./events.js");function u(e,t,n){var a=t.element,r={viewport:t.viewport,element:t.element,image:t.image,enabledElement:t,layerId:n};Object(l.default)(a,e,r)}function d(e,t){if(e.layerId===t.layerId)throw new Error("rescaleImage: both arguments represent the same layer");var n=e.image,a=t.image;if(n.imageId&&a.imageId){var r=t.viewport.displayedArea.columnPixelSpacing*a.width/(e.viewport.displayedArea.columnPixelSpacing*n.width),i=t.viewport.scale/e.viewport.scale*r;t.viewport.scale=e.viewport.scale*i}}function c(e,t,n){var o,l=Object(a.default)(),c=Object(r.getEnabledElement)(e),f=c.layers;t&&(o=Object(i.default)(c.canvas,t),n&&n.viewport&&(o=Object.assign(o,n.viewport))),!1!==c.syncViewports&&(c.syncViewports=!0);var h={image:t,layerId:l,viewport:o,options:n||{},renderingTools:{}};return f.length&&t&&d(f[0],h),f.push(h),u(s.default.LAYER_ADDED,c,l),1===f.length&&t&&g(e,l),l}function f(e,t){var n=Object(r.getEnabledElement)(e),a=n.layers,i=n.layers.findIndex(function(e){return e.layerId===t});-1!==i&&(a.splice(i,1),t===n.activeLayerId&&a.length&&g(e,a[0].layerId),u(s.default.LAYER_REMOVED,n,t))}function h(e,t){return Object(r.getEnabledElement)(e).layers.find(function(e){return e.layerId===t})}function m(e){return Object(r.getEnabledElement)(e).layers}function v(e){return Object(r.getEnabledElement)(e).layers.filter(function(e){return e.options&&!1!==e.options.visible&&0!==e.options.opacity})}function g(e,t){var n=Object(r.getEnabledElement)(e);if(n.activeLayerId!==t){var a=n.layers.findIndex(function(e){return e.layerId===t});if(-1===a)throw new Error("setActiveLayer: layer not found in layers array");var i=n.layers[a];if(!i.image)throw new Error("setActiveLayer: layer with undefined image cannot be set as active.");n.activeLayerId=t,n.image=i.image,n.viewport=i.viewport,Object(o.default)(e),u(s.default.ACTIVE_LAYER_CHANGED,n,t)}}function p(e,t,n){var a,o=Object(r.getEnabledElement)(e),l=o.layers[0];if(!(a=n?h(e,n):b(e)))throw new Error("setLayerImage: Layer not found");if(a.image=t,t){if(!a.viewport){var s=Object(i.default)(o.canvas,t);a.options&&a.options.viewport&&(a.viewport=Object.assign(s,a.options.viewport)),l.layerId!==n&&d(l,a)}}else a.viewport=void 0}function b(e){var t=Object(r.getEnabledElement)(e);return t.layers.find(function(e){return e.layerId===t.activeLayerId})}function y(e){var t=Object(r.getEnabledElement)(e);t.layers=[],delete t.activeLayerId,delete t.lastSyncViewportsState}},"./metaData.js":
/*!*********************!*\
  !*** ./metaData.js ***!
  \*********************/
/*! exports provided: addProvider, removeProvider, default */function(e,t,n){"use strict";n.r(t),n.d(t,"addProvider",function(){return r}),n.d(t,"removeProvider",function(){return i});var a=[];function r(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;for(t=0;t<a.length&&!(a[t].priority<=n);t++);a.splice(t,0,{priority:n,provider:e})}function i(e){for(var t=0;t<a.length;t++)if(a[t].provider===e){a.splice(t,1);break}}t.default={addProvider:r,removeProvider:i,get:function(e,t){for(var n=0;n<a.length;n++){var r=a[n].provider(e,t);if(void 0!==r)return r}}}},"./pageToPixel.js":
/*!************************!*\
  !*** ./pageToPixel.js ***!
  \************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./enabledElements.js */"./enabledElements.js"),r=n(/*! ./internal/getTransform.js */"./internal/getTransform.js");t.default=function(e,t,n){var i=Object(a.getEnabledElement)(e);if(void 0===i.image)throw new Error("image has not been loaded yet");var o=e.getBoundingClientRect(),l={x:t-o.left-window.pageXOffset,y:n-o.top-window.pageYOffset},s=Object(r.default)(i);return s.invert(),s.transformPoint(l.x,l.y)}},"./pixelDataToFalseColorData.js":
/*!**************************************!*\
  !*** ./pixelDataToFalseColorData.js ***!
  \**************************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return r});var a=n(/*! ./colors/index.js */"./colors/index.js");function r(e,t){if(e.color&&!e.falseColor)throw new Error("Color transforms are not implemented yet");var n,r,i=e.minPixelValue,o=0,l=0,s=e.width*e.height,u=e.origPixelData||e.getPixelData(),d=new Uint8Array(4*s);if(e.color=!0,e.falseColor=!0,e.origPixelData=u,t instanceof a.default.LookupTable)for(t.build();l<s;)n=u[l++],r=t.mapValue(n),d[o++]=r[0],d[o++]=r[1],d[o++]=r[2],d[o++]=r[3];else if(i<0)for(;l<s;)n=u[l++],d[o++]=t[n+-i][0],d[o++]=t[n+-i][1],d[o++]=t[n+-i][2],d[o++]=t[n+-i][3];else for(;l<s;)n=u[l++],d[o++]=t[n][0],d[o++]=t[n][1],d[o++]=t[n][2],d[o++]=t[n][3];e.rgba=!0,e.cachedLut=void 0,e.render=void 0,e.slope=1,e.intercept=0,e.minPixelValue=0,e.maxPixelValue=255,e.windowWidth=255,e.windowCenter=128,e.getPixelData=function(){return d}}},"./pixelToCanvas.js":
/*!**************************!*\
  !*** ./pixelToCanvas.js ***!
  \**************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./enabledElements.js */"./enabledElements.js"),r=n(/*! ./internal/getTransform.js */"./internal/getTransform.js");t.default=function(e,t){var n=Object(a.getEnabledElement)(e);return Object(r.default)(n).transformPoint(t.x,t.y)}},"./rendering/doesImageNeedToBeRendered.js":
/*!************************************************!*\
  !*** ./rendering/doesImageNeedToBeRendered.js ***!
  \************************************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t),t.default=function(e,t){var n=e.renderingTools.lastRenderedImageId,a=e.renderingTools.lastRenderedViewport;return t.imageId!==n||!a||a.windowCenter!==e.viewport.voi.windowCenter||a.windowWidth!==e.viewport.voi.windowWidth||a.invert!==e.viewport.invert||a.rotation!==e.viewport.rotation||a.hflip!==e.viewport.hflip||a.vflip!==e.viewport.vflip||a.modalityLUT!==e.viewport.modalityLUT||a.voiLUT!==e.viewport.voiLUT||a.colormap!==e.viewport.colormap}},"./rendering/getLut.js":
/*!*****************************!*\
  !*** ./rendering/getLut.js ***!
  \*****************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ../internal/computeAutoVoi.js */"./internal/computeAutoVoi.js"),r=n(/*! ./lutMatches.js */"./rendering/lutMatches.js"),i=n(/*! ../internal/generateLut.js */"./internal/generateLut.js");t.default=function(e,t,n){return void 0!==e.cachedLut&&e.cachedLut.windowCenter===t.voi.windowCenter&&e.cachedLut.windowWidth===t.voi.windowWidth&&Object(r.default)(e.cachedLut.modalityLUT,t.modalityLUT)&&Object(r.default)(e.cachedLut.voiLUT,t.voiLUT)&&e.cachedLut.invert===t.invert&&!0!==n?e.cachedLut.lutArray:(Object(a.default)(t,e),Object(i.default)(e,t.voi.windowWidth,t.voi.windowCenter,t.invert,t.modalityLUT,t.voiLUT),e.cachedLut.windowWidth=t.voi.windowWidth,e.cachedLut.windowCenter=t.voi.windowCenter,e.cachedLut.invert=t.invert,e.cachedLut.voiLUT=t.voiLUT,e.cachedLut.modalityLUT=t.modalityLUT,e.cachedLut.lutArray)}},"./rendering/index.js":
/*!****************************!*\
  !*** ./rendering/index.js ***!
  \****************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./renderColorImage.js */"./rendering/renderColorImage.js"),r=n(/*! ./renderGrayscaleImage.js */"./rendering/renderGrayscaleImage.js"),i=n(/*! ./renderWebImage.js */"./rendering/renderWebImage.js"),o=n(/*! ./renderPseudoColorImage.js */"./rendering/renderPseudoColorImage.js"),l=n(/*! ./renderLabelMapImage.js */"./rendering/renderLabelMapImage.js"),s=n(/*! ./renderToCanvas.js */"./rendering/renderToCanvas.js");t.default={colorImage:a.renderColorImage,grayscaleImage:r.renderGrayscaleImage,webImage:i.renderWebImage,pseudoColorImage:o.renderPseudoColorImage,labelMapImage:l.renderLabelMapImage,toCanvas:s.default}},"./rendering/initializeRenderCanvas.js":
/*!*********************************************!*\
  !*** ./rendering/initializeRenderCanvas.js ***!
  \*********************************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t),t.default=function(e,t){var n=e.renderingTools.renderCanvas;n.width=t.width,n.height=t.height;var a=n.getContext("2d");a.fillStyle="white",a.fillRect(0,0,n.width,n.height);var r=a.getImageData(0,0,t.width,t.height);e.renderingTools.renderCanvasContext=a,e.renderingTools.renderCanvasData=r}},"./rendering/lutMatches.js":
/*!*********************************!*\
  !*** ./rendering/lutMatches.js ***!
  \*********************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t),t.default=function(e,t){return!e&&!t||!(!e||!t)&&e.id===t.id}},"./rendering/renderColorImage.js":
/*!***************************************!*\
  !*** ./rendering/renderColorImage.js ***!
  \***************************************/
/*! exports provided: renderColorImage, addColorLayer */function(e,t,n){"use strict";n.r(t),n.d(t,"renderColorImage",function(){return h}),n.d(t,"addColorLayer",function(){return m});var a=n(/*! ../internal/now.js */"./internal/now.js"),r=n(/*! ../internal/generateColorLut.js */"./internal/generateColorLut.js"),i=n(/*! ../internal/storedColorPixelDataToCanvasImageData.js */"./internal/storedColorPixelDataToCanvasImageData.js"),o=n(/*! ../internal/storedRGBAPixelDataToCanvasImageData.js */"./internal/storedRGBAPixelDataToCanvasImageData.js"),l=n(/*! ../setToPixelCoordinateSystem.js */"./setToPixelCoordinateSystem.js"),s=n(/*! ../webgl/index.js */"./webgl/index.js"),u=n(/*! ./doesImageNeedToBeRendered.js */"./rendering/doesImageNeedToBeRendered.js"),d=n(/*! ./initializeRenderCanvas.js */"./rendering/initializeRenderCanvas.js"),c=n(/*! ./saveLastRendered.js */"./rendering/saveLastRendered.js");function f(e,t,n){var l=!0===e.renderingTools.lastRenderedIsColor;e.renderingTools.renderCanvas&&l||(e.renderingTools.renderCanvas=document.createElement("canvas"));var s=e.renderingTools.renderCanvas;if(255===e.viewport.voi.windowWidth&&128===e.viewport.voi.windowCenter&&!1===e.viewport.invert&&t.getCanvas&&t.getCanvas())return t.getCanvas();if(!1===Object(u.default)(e,t)&&!0!==n)return s;s.width===t.width&&s.height===t.height||Object(d.default)(e,t);var c=Object(a.default)(),f=function(e,t){return void 0!==e.cachedLut&&e.cachedLut.windowCenter===t.voi.windowCenter&&e.cachedLut.windowWidth===t.voi.windowWidth&&e.cachedLut.invert===t.invert?e.cachedLut.lutArray:(Object(r.default)(e,t.voi.windowWidth,t.voi.windowCenter,t.invert),e.cachedLut.windowWidth=t.voi.windowWidth,e.cachedLut.windowCenter=t.voi.windowCenter,e.cachedLut.invert=t.invert,e.cachedLut.lutArray)}(t,e.viewport);t.stats=t.stats||{},t.stats.lastLutGenerateTime=Object(a.default)()-c;var h=e.renderingTools.renderCanvasData,m=e.renderingTools.renderCanvasContext;return t.rgba?Object(o.default)(t,f,h.data):Object(i.default)(t,f,h.data),c=Object(a.default)(),m.putImageData(h,0,0),t.stats.lastPutImageDataTime=Object(a.default)()-c,s}function h(e,t){if(void 0===e)throw new Error("renderColorImage: enabledElement parameter must not be undefined");var n=e.image;if(void 0===n)throw new Error("renderColorImage: image must be loaded before it can be drawn");var a,r=e.canvas.getContext("2d");r.setTransform(1,0,0,1,0,0),r.fillStyle="black",r.fillRect(0,0,e.canvas.width,e.canvas.height),r.imageSmoothingEnabled=!e.viewport.pixelReplication,r.mozImageSmoothingEnabled=r.imageSmoothingEnabled,Object(l.default)(e,r),a=e.options&&e.options.renderer&&"webgl"===e.options.renderer.toLowerCase()?s.default.renderer.render(e):f(e,n,t);var i=e.viewport.displayedArea.tlhc.x-1,o=e.viewport.displayedArea.tlhc.y-1,u=e.viewport.displayedArea.brhc.x-i,d=e.viewport.displayedArea.brhc.y-o;r.drawImage(a,i,o,u,d,0,0,u,d),e.renderingTools=Object(c.default)(e)}function m(e,t){if(void 0===e)throw new Error("addColorLayer: layer parameter must not be undefined");var n=e.image;if(void 0===n)throw new Error("addColorLayer: image must be loaded before it can be drawn");n.rgba=!0,e.canvas=f(e,n,t);var a=e.canvas.getContext("2d");a.imageSmoothingEnabled=!e.viewport.pixelReplication,a.mozImageSmoothingEnabled=a.imageSmoothingEnabled,e.renderingTools=Object(c.default)(e)}},"./rendering/renderGrayscaleImage.js":
/*!*******************************************!*\
  !*** ./rendering/renderGrayscaleImage.js ***!
  \*******************************************/
/*! exports provided: renderGrayscaleImage, addGrayscaleLayer */function(e,t,n){"use strict";n.r(t),n.d(t,"renderGrayscaleImage",function(){return h}),n.d(t,"addGrayscaleLayer",function(){return m});var a=n(/*! ../internal/storedPixelDataToCanvasImageData.js */"./internal/storedPixelDataToCanvasImageData.js"),r=n(/*! ../internal/storedPixelDataToCanvasImageDataRGBA.js */"./internal/storedPixelDataToCanvasImageDataRGBA.js"),i=n(/*! ../setToPixelCoordinateSystem.js */"./setToPixelCoordinateSystem.js"),o=n(/*! ../internal/now.js */"./internal/now.js"),l=n(/*! ../webgl/index.js */"./webgl/index.js"),s=n(/*! ./getLut.js */"./rendering/getLut.js"),u=n(/*! ./doesImageNeedToBeRendered.js */"./rendering/doesImageNeedToBeRendered.js"),d=n(/*! ./initializeRenderCanvas.js */"./rendering/initializeRenderCanvas.js"),c=n(/*! ./saveLastRendered.js */"./rendering/saveLastRendered.js");function f(e,t,n){var i=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],l=!0===e.renderingTools.lastRenderedIsColor;e.renderingTools.renderCanvas&&!l||(e.renderingTools.renderCanvas=document.createElement("canvas"),Object(d.default)(e,t));var c=e.renderingTools.renderCanvas;if(!1===Object(u.default)(e,t)&&!0!==n)return c;c.width===t.width&&c.height===t.height||Object(d.default)(e,t);var f=Object(o.default)(),h=Object(s.default)(t,e.viewport,n);t.stats=t.stats||{},t.stats.lastLutGenerateTime=Object(o.default)()-f;var m=e.renderingTools.renderCanvasData,v=e.renderingTools.renderCanvasContext;return i?Object(a.default)(t,h,m.data):Object(r.default)(t,h,m.data),f=Object(o.default)(),v.putImageData(m,0,0),t.stats.lastPutImageDataTime=Object(o.default)()-f,c}function h(e,t){if(void 0===e)throw new Error("drawImage: enabledElement parameter must not be undefined");var n=e.image;if(void 0===n)throw new Error("drawImage: image must be loaded before it can be drawn");var a,r=e.canvas.getContext("2d");r.setTransform(1,0,0,1,0,0),r.fillStyle="black",r.fillRect(0,0,e.canvas.width,e.canvas.height),r.imageSmoothingEnabled=!e.viewport.pixelReplication,r.mozImageSmoothingEnabled=r.imageSmoothingEnabled,Object(i.default)(e,r),a=e.options&&e.options.renderer&&"webgl"===e.options.renderer.toLowerCase()?l.default.renderer.render(e):f(e,n,t);var o=e.viewport.displayedArea.tlhc.x-1,s=e.viewport.displayedArea.tlhc.y-1,u=e.viewport.displayedArea.brhc.x-o,d=e.viewport.displayedArea.brhc.y-s;r.drawImage(a,o,s,u,d,0,0,u,d),e.renderingTools=Object(c.default)(e)}function m(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(void 0===e)throw new Error("addGrayscaleLayer: layer parameter must not be undefined");var a=e.image;if(void 0===a)throw new Error("addGrayscaleLayer: image must be loaded before it can be drawn");e.canvas=f(e,a,t,n);var r=e.canvas.getContext("2d");r.imageSmoothingEnabled=!e.viewport.pixelReplication,r.mozImageSmoothingEnabled=r.imageSmoothingEnabled,e.renderingTools=Object(c.default)(e)}},"./rendering/renderLabelMapImage.js":
/*!******************************************!*\
  !*** ./rendering/renderLabelMapImage.js ***!
  \******************************************/
/*! exports provided: renderLabelMapImage, addLabelMapLayer */function(e,t,n){"use strict";n.r(t),n.d(t,"renderLabelMapImage",function(){return c}),n.d(t,"addLabelMapLayer",function(){return f});var a=n(/*! ../setToPixelCoordinateSystem.js */"./setToPixelCoordinateSystem.js"),r=n(/*! ../internal/now.js */"./internal/now.js"),i=n(/*! ./initializeRenderCanvas.js */"./rendering/initializeRenderCanvas.js"),o=n(/*! ./saveLastRendered.js */"./rendering/saveLastRendered.js"),l=n(/*! ./doesImageNeedToBeRendered.js */"./rendering/doesImageNeedToBeRendered.js"),s=n(/*! ../internal/storedPixelDataToCanvasImageDataColorLUT.js */"./internal/storedPixelDataToCanvasImageDataColorLUT.js"),u=n(/*! ../colors/index.js */"./colors/index.js");function d(e,t,n){e.renderingTools.renderCanvas||(e.renderingTools.renderCanvas=document.createElement("canvas"));var a=e.renderingTools.renderCanvas,o=e.viewport.colormap||e.options.colormap;if(o&&"string"==typeof o&&(o=u.default.getColormap(o)),!o)throw new Error("renderLabelMapImage: colormap not found.");var d=o.getId();if(!1===Object(l.default)(e,t)&&!0!==n&&e.renderingTools.colormapId===d)return a;a.width===t.width&&a.height===t.height||Object(i.default)(e,t);var c=Object(r.default)();e.renderingTools.colorLut&&!n&&e.renderingTools.colormapId===d||(e.renderingTools.colorLut=o.createLookupTable(),e.renderingTools.colormapId=d),t.stats=t.stats||{},t.stats.lastLutGenerateTime=Object(r.default)()-c;var f=e.renderingTools.colorLut,h=e.renderingTools.renderCanvasData,m=e.renderingTools.renderCanvasContext;return Object(s.default)(t,f,h.data),c=Object(r.default)(),m.putImageData(h,0,0),t.stats.lastPutImageDataTime=Object(r.default)()-c,a}function c(e,t){if(void 0===e)throw new Error("renderLabelMapImage: enabledElement parameter must not be undefined");var n=e.image;if(void 0===n)throw new Error("renderLabelMapImage: image must be loaded before it can be drawn");var r=e.canvas.getContext("2d");r.setTransform(1,0,0,1,0,0),r.fillStyle="black",r.fillRect(0,0,e.canvas.width,e.canvas.height),r.imageSmoothingEnabled=!e.viewport.pixelReplication,r.mozImageSmoothingEnabled=r.imageSmoothingEnabled,Object(a.default)(e,r);var i=d(e,n,t),l=e.viewport.displayedArea.tlhc.x-1,s=e.viewport.displayedArea.tlhc.y-1,u=e.viewport.displayedArea.brhc.x-l,c=e.viewport.displayedArea.brhc.y-s;r.drawImage(i,l,s,u,c,0,0,u,c),e.renderingTools=Object(o.default)(e)}function f(e,t){if(void 0===e)throw new Error("addLabelMapLayer: layer parameter must not be undefined");var n=e.image;if(void 0===n)throw new Error("addLabelMapLayer: image must be loaded before it can be drawn");e.canvas=d(e,n,t);var a=e.canvas.getContext("2d");a.imageSmoothingEnabled=!e.viewport.pixelReplication,a.mozImageSmoothingEnabled=a.imageSmoothingEnabled,e.renderingTools=Object(o.default)(e)}},"./rendering/renderPseudoColorImage.js":
/*!*********************************************!*\
  !*** ./rendering/renderPseudoColorImage.js ***!
  \*********************************************/
/*! exports provided: renderPseudoColorImage, addPseudoColorLayer */function(e,t,n){"use strict";n.r(t),n.d(t,"renderPseudoColorImage",function(){return f}),n.d(t,"addPseudoColorLayer",function(){return h});var a=n(/*! ../setToPixelCoordinateSystem.js */"./setToPixelCoordinateSystem.js"),r=n(/*! ../internal/now.js */"./internal/now.js"),i=n(/*! ./initializeRenderCanvas.js */"./rendering/initializeRenderCanvas.js"),o=n(/*! ./getLut.js */"./rendering/getLut.js"),l=n(/*! ./saveLastRendered.js */"./rendering/saveLastRendered.js"),s=n(/*! ./doesImageNeedToBeRendered.js */"./rendering/doesImageNeedToBeRendered.js"),u=n(/*! ../internal/storedPixelDataToCanvasImageDataPseudocolorLUT.js */"./internal/storedPixelDataToCanvasImageDataPseudocolorLUT.js"),d=n(/*! ../colors/index.js */"./colors/index.js");function c(e,t,n){e.renderingTools.renderCanvas||(e.renderingTools.renderCanvas=document.createElement("canvas"));var a=e.renderingTools.renderCanvas,l=e.viewport.colormap||e.options.colormap;if(l&&"string"==typeof l&&(l=d.default.getColormap(l)),!l)throw new Error("renderPseudoColorImage: colormap not found.");var c=l.getId();if(!1===Object(s.default)(e,t)&&!0!==n&&e.renderingTools.colormapId===c)return a;a.width===t.width&&a.height===t.height||Object(i.default)(e,t);var f=Object(r.default)();e.renderingTools.colorLut&&!n&&e.renderingTools.colormapId===c||(l.setNumberOfColors(256),e.renderingTools.colorLut=l.createLookupTable(),e.renderingTools.colormapId=c);var h=Object(o.default)(t,e.viewport,n);t.stats=t.stats||{},t.stats.lastLutGenerateTime=Object(r.default)()-f;var m=e.renderingTools.colorLut,v=e.renderingTools.renderCanvasData,g=e.renderingTools.renderCanvasContext;return Object(u.default)(t,h,m,v.data),f=Object(r.default)(),g.putImageData(v,0,0),t.stats.lastPutImageDataTime=Object(r.default)()-f,a}function f(e,t){if(void 0===e)throw new Error("drawImage: enabledElement parameter must not be undefined");var n=e.image;if(void 0===n)throw new Error("drawImage: image must be loaded before it can be drawn");var r=e.canvas.getContext("2d");r.setTransform(1,0,0,1,0,0),r.fillStyle="black",r.fillRect(0,0,e.canvas.width,e.canvas.height),r.imageSmoothingEnabled=!e.viewport.pixelReplication,r.mozImageSmoothingEnabled=r.imageSmoothingEnabled,Object(a.default)(e,r);var i=c(e,n,t),o=e.viewport.displayedArea.tlhc.x-1,s=e.viewport.displayedArea.tlhc.y-1,u=e.viewport.displayedArea.brhc.x-o,d=e.viewport.displayedArea.brhc.y-s;r.drawImage(i,o,s,u,d,0,0,u,d),e.renderingTools=Object(l.default)(e)}function h(e,t){if(void 0===e)throw new Error("addPseudoColorLayer: layer parameter must not be undefined");var n=e.image;if(void 0===n)throw new Error("addPseudoColorLayer: image must be loaded before it can be drawn");e.canvas=c(e,n,t);var a=e.canvas.getContext("2d");a.imageSmoothingEnabled=!e.viewport.pixelReplication,a.mozImageSmoothingEnabled=a.imageSmoothingEnabled,e.renderingTools=Object(l.default)(e)}},"./rendering/renderToCanvas.js":
/*!*************************************!*\
  !*** ./rendering/renderToCanvas.js ***!
  \*************************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ../triggerEvent.js */"./triggerEvent.js"),r=n(/*! ../events.js */"./events.js"),i=n(/*! ../internal/drawImageSync.js */"./internal/drawImageSync.js"),o=n(/*! ../internal/getDefaultViewport.js */"./internal/getDefaultViewport.js"),l=n(/*! ../internal/tryEnableWebgl.js */"./internal/tryEnableWebgl.js");t.default=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;if(void 0===e)throw new Error("renderToCanvas: parameter canvas cannot be undefined");s&&s.renderer&&"webgl"===s.renderer.toLowerCase()&&Object(l.default)(s);var u=Object(o.default)(e,t);n&&Object.assign(u,n);var d=function(e,t,n,a){return{element:e,canvas:e,image:t,invalid:!0,needsRedraw:!0,options:n,layers:[],data:{},renderingTools:{},viewport:a}}(e,t,s,u),c={enabledElement:d,timestamp:Date.now()};Object(a.default)(d.element,r.default.PRE_RENDER,c),Object(i.default)(d,d.invalid)}},"./rendering/renderWebImage.js":
/*!*************************************!*\
  !*** ./rendering/renderWebImage.js ***!
  \*************************************/
/*! exports provided: renderWebImage */function(e,t,n){"use strict";n.r(t),n.d(t,"renderWebImage",function(){return i});var a=n(/*! ../setToPixelCoordinateSystem.js */"./setToPixelCoordinateSystem.js"),r=n(/*! ./renderColorImage.js */"./rendering/renderColorImage.js");function i(e,t){if(void 0===e)throw new Error("renderWebImage: enabledElement parameter must not be undefined");var n=e.image;if(void 0===n)throw new Error("renderWebImage: image must be loaded before it can be drawn");if(e.viewport.voi.windowWidth===e.image.windowWidth&&e.viewport.voi.windowCenter===e.image.windowCenter&&!1===e.viewport.invert){var i=e.canvas.getContext("2d");i.setTransform(1,0,0,1,0,0),i.fillStyle="black",i.fillRect(0,0,e.canvas.width,e.canvas.height),i.imageSmoothingEnabled=!e.viewport.pixelReplication,i.mozImageSmoothingEnabled=i.imageSmoothingEnabled,Object(a.default)(e,i);var o=e.viewport.displayedArea.tlhc.x-1,l=e.viewport.displayedArea.tlhc.y-1,s=e.viewport.displayedArea.brhc.x-o,u=e.viewport.displayedArea.brhc.y-l;i.drawImage(n.getImage(),o,l,s,u,0,0,s,u)}else Object(r.renderColorImage)(e,t)}},"./rendering/saveLastRendered.js":
/*!***************************************!*\
  !*** ./rendering/saveLastRendered.js ***!
  \***************************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t),t.default=function(e){var t=e.image.imageId,n=e.viewport,a=e.image.color;return e.renderingTools.lastRenderedImageId=t,e.renderingTools.lastRenderedIsColor=a,e.renderingTools.lastRenderedViewport={windowCenter:n.voi.windowCenter,windowWidth:n.voi.windowWidth,invert:n.invert,rotation:n.rotation,hflip:n.hflip,vflip:n.vflip,modalityLUT:n.modalityLUT,voiLUT:n.voiLUT,colormap:n.colormap},e.renderingTools}},"./reset.js":
/*!******************!*\
  !*** ./reset.js ***!
  \******************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./enabledElements.js */"./enabledElements.js"),r=n(/*! ./internal/getDefaultViewport.js */"./internal/getDefaultViewport.js"),i=n(/*! ./updateImage.js */"./updateImage.js");t.default=function(e){var t=Object(a.getEnabledElement)(e);t.viewport=Object(r.default)(t.canvas,t.image),Object(i.default)(e)}},"./resize.js":
/*!*******************!*\
  !*** ./resize.js ***!
  \*******************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./enabledElements.js */"./enabledElements.js"),r=n(/*! ./fitToWindow.js */"./fitToWindow.js"),i=n(/*! ./updateImage.js */"./updateImage.js"),o=n(/*! ./triggerEvent.js */"./triggerEvent.js"),l=n(/*! ./internal/getImageSize.js */"./internal/getImageSize.js"),s=n(/*! ./events.js */"./events.js");t.default=function(e,t){var n=Object(a.getEnabledElement)(e),u=n.canvas.width,d=n.canvas.height;!function(e,t){t.width!==e.clientWidth&&(t.width=e.clientWidth,t.style.width="".concat(e.clientWidth,"px")),t.height!==e.clientHeight&&(t.height=e.clientHeight,t.style.height="".concat(e.clientHeight,"px"))}(e,n.canvas);var c={element:e};Object(o.default)(e,s.default.ELEMENT_RESIZED,c),void 0!==n.image&&(t||function(e,t,n){var a=e.viewport.scale,r=Object(l.default)(e.image,e.viewport.rotation),i=Math.round(r.width*a),o=Math.round(r.height*a),s=e.viewport.translation.x,u=e.viewport.translation.y;return i===t&&o<=n||i<=t&&o===n&&0===s&&0===u}(n,u,d)?Object(r.default)(e):(!function(e,t,n){var a=e.viewport.scale,r=e.canvas.width/t,i=e.canvas.height/n,o=Math.sqrt(r*i);e.viewport.scale=o*a}(n,u,d),Object(i.default)(e)))}},"./setToPixelCoordinateSystem.js":
/*!***************************************!*\
  !*** ./setToPixelCoordinateSystem.js ***!
  \***************************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./internal/calculateTransform.js */"./internal/calculateTransform.js");t.default=function(e,t,n){if(void 0===e)throw new Error("setToPixelCoordinateSystem: parameter enabledElement must not be undefined");if(void 0===t)throw new Error("setToPixelCoordinateSystem: parameter context must not be undefined");var r=Object(a.default)(e,n);t.setTransform(r.m[0],r.m[1],r.m[2],r.m[3],r.m[4],r.m[5])}},"./setViewport.js":
/*!************************!*\
  !*** ./setViewport.js ***!
  \************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./internal/getDefaultViewport.js */"./internal/getDefaultViewport.js"),r=n(/*! ./enabledElements.js */"./enabledElements.js"),i=n(/*! ./updateImage.js */"./updateImage.js");t.default=function(e,t){var n=Object(r.getEnabledElement)(e);if(void 0===n.viewport&&(n.viewport=Object(a.default)(n.canvas)),t)for(var o in t)null!==t[o]&&(n.viewport[o]=t[o]);n.viewport.voi.windowWidth&&(n.viewport.voi.windowWidth=Math.max(t.voi.windowWidth,1e-6)),n.viewport.scale&&(n.viewport.scale=Math.max(t.scale,1e-4)),n.viewport.rotation%=360,n.viewport.rotation<0&&(n.viewport.rotation+=360),n.image&&Object(i.default)(e)}},"./triggerEvent.js":
/*!*************************!*\
  !*** ./triggerEvent.js ***!
  \*************************/
/*! exports provided: default */function(e,t,n){"use strict";function a(e,t){var n,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return"function"==typeof window.CustomEvent?n=new CustomEvent(t,{detail:a,cancelable:!0}):(n=document.createEvent("CustomEvent")).initCustomEvent(t,!0,!0,a),e.dispatchEvent(n)}n.r(t),n.d(t,"default",function(){return a})},"./updateImage.js":
/*!************************!*\
  !*** ./updateImage.js ***!
  \************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./enabledElements.js */"./enabledElements.js"),r=n(/*! ./internal/drawImage.js */"./internal/drawImage.js");t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=Object(a.getEnabledElement)(e);if(void 0===n.image&&!n.layers.length)throw new Error("updateImage: image has not been loaded yet");Object(r.default)(n,t)}},"./webgl/createProgramFromString.js":
/*!******************************************!*\
  !*** ./webgl/createProgramFromString.js ***!
  \******************************************/
/*! exports provided: default */function(e,t,n){"use strict";function a(e,t,n){var a=e.createShader(n);if(e.shaderSource(a,t),e.compileShader(a),!e.getShaderParameter(a,e.COMPILE_STATUS)&&!e.isContextLost()){var r=e.getShaderInfoLog(a);console.error("Could not compile shader:\n".concat(r))}return a}n.r(t),t.default=function(e,t,n){return function(e,t,n){var a=e.createProgram();if(e.attachShader(a,t),e.attachShader(a,n),e.linkProgram(a),!e.getProgramParameter(a,e.LINK_STATUS)&&!e.isContextLost()){var r=e.getProgramInfoLog(a);console.error("WebGL program filed to link:\n".concat(r))}return a}(e,a(e,t,e.VERTEX_SHADER),a(e,n,e.FRAGMENT_SHADER))}},"./webgl/index.js":
/*!************************!*\
  !*** ./webgl/index.js ***!
  \************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ./renderer.js */"./webgl/renderer.js"),r=n(/*! ./createProgramFromString.js */"./webgl/createProgramFromString.js"),i=n(/*! ./textureCache.js */"./webgl/textureCache.js"),o={createProgramFromString:r.default,renderer:{render:a.render,initRenderer:a.initRenderer,getRenderCanvas:a.getRenderCanvas,isWebGLAvailable:a.isWebGLAvailable},textureCache:i.default};Object.defineProperty(o,"isWebGLInitialized",{enumerable:!0,configurable:!1,get:function(){return a.isWebGLInitialized}}),t.default=o},"./webgl/renderer.js":
/*!***************************!*\
  !*** ./webgl/renderer.js ***!
  \***************************/
/*! exports provided: isWebGLInitialized, getRenderCanvas, initRenderer, render, isWebGLAvailable */function(e,t,n){"use strict";n.r(t),n.d(t,"isWebGLInitialized",function(){return c}),n.d(t,"getRenderCanvas",function(){return f}),n.d(t,"initRenderer",function(){return h}),n.d(t,"render",function(){return y}),n.d(t,"isWebGLAvailable",function(){return w});var a,r,i,o=n(/*! ./shaders/index.js */"./webgl/shaders/index.js"),l=n(/*! ./vertexShader.js */"./webgl/vertexShader.js"),s=n(/*! ./textureCache.js */"./webgl/textureCache.js"),u=n(/*! ./createProgramFromString.js */"./webgl/createProgramFromString.js"),d=document.createElement("canvas"),c=!1;function f(){return d}function h(){!0!==c&&function(e){a=null;try{var t={preserveDrawingBuffer:!0};a=e.getContext("webgl",t)||e.getContext("experimental-webgl",t),e.removeEventListener("webglcontextlost",m,!1),e.addEventListener("webglcontextlost",m,!1),e.removeEventListener("webglcontextrestored",v,!1),e.addEventListener("webglcontextrestored",v,!1)}catch(e){throw new Error("Error creating WebGL context")}a||(console.error("Unable to initialize WebGL. Your browser may not support it."),a=null);return a}(d)&&(i=a.createBuffer(),a.bindBuffer(a.ARRAY_BUFFER,i),a.bufferData(a.ARRAY_BUFFER,new Float32Array([1,1,0,1,1,0,0,0]),a.STATIC_DRAW),r=a.createBuffer(),a.bindBuffer(a.ARRAY_BUFFER,r),a.bufferData(a.ARRAY_BUFFER,new Float32Array([1,1,0,1,1,0,0,0]),a.STATIC_DRAW),function(){for(var e in o.shaders){var t=o.shaders[e];t.attributes={},t.uniforms={},t.vert=l.vertexShader,t.program=Object(u.default)(a,t.vert,t.frag),t.attributes.texCoordLocation=a.getAttribLocation(t.program,"a_texCoord"),a.enableVertexAttribArray(t.attributes.texCoordLocation),t.attributes.positionLocation=a.getAttribLocation(t.program,"a_position"),a.enableVertexAttribArray(t.attributes.positionLocation),t.uniforms.resolutionLocation=a.getUniformLocation(t.program,"u_resolution")}}(),c=!0)}function m(e){e.preventDefault(),console.warn("WebGL Context Lost!")}function v(e){e.preventDefault(),c=!1,s.default.purgeCache(),h()}function g(e){if(e.color)return"rgb";var t=e.getPixelData();return t instanceof Int16Array?"int16":t instanceof Uint16Array?"uint16":t instanceof Int8Array?"int8":"uint8"}function p(e){var t=s.default.getImageTexture(e.imageId);return t||(t=function(e){var t={uint8:a.LUMINANCE,int8:a.LUMINANCE_ALPHA,uint16:a.LUMINANCE_ALPHA,int16:a.RGB,rgb:a.RGB},n=g(e),r=t[n],i=a.createTexture();a.bindTexture(a.TEXTURE_2D,i),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.NEAREST),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.NEAREST),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE),a.pixelStorei(a.UNPACK_ALIGNMENT,1);var l=o.dataUtilities[n].storedPixelDataToImageData(e,e.width,e.height);return a.texImage2D(a.TEXTURE_2D,0,r,e.width,e.height,0,r,a.UNSIGNED_BYTE,l),{texture:i,sizeInBytes:e.width*e.height*{int8:1,uint16:2,int16:3,rgb:3}[n]}}(e),s.default.putImageTexture(e,t)),t.texture}function b(e,t,n,o,l){for(var s in a.clearColor(1,0,0,1),a.viewport(0,0,o,l),a.clear(a.COLOR_BUFFER_BIT|a.DEPTH_BUFFER_BIT),a.useProgram(e.program),a.bindBuffer(a.ARRAY_BUFFER,r),a.vertexAttribPointer(e.attributes.texCoordLocation,2,a.FLOAT,!1,0,0),a.bindBuffer(a.ARRAY_BUFFER,i),a.vertexAttribPointer(e.attributes.positionLocation,2,a.FLOAT,!1,0,0),t){var u=a.getUniformLocation(e.program,s);if(u){var d=t[s],c=d.type,f=d.value;"i"===c?a.uniform1i(u,f):"f"===c?a.uniform1f(u,f):"2f"===c&&a.uniform2f(u,f[0],f[1])}}!function(e,t,n){e.bufferData(e.ARRAY_BUFFER,new Float32Array([t,n,0,n,t,0,0,0]),e.STATIC_DRAW)}(a,o,l),a.activeTexture(a.TEXTURE0),a.bindTexture(a.TEXTURE_2D,n),a.drawArrays(a.TRIANGLE_STRIP,0,4)}function y(e){var t=e.image;d.width=t.width,d.height=t.height;var n=e.viewport,a=function(e){var t=g(e);return o.shaders.hasOwnProperty(t)?o.shaders[t]:o.shaders.rgb}(t),r=p(t);return b(a,{u_resolution:{type:"2f",value:[t.width,t.height]},wc:{type:"f",value:n.voi.windowCenter},ww:{type:"f",value:n.voi.windowWidth},slope:{type:"f",value:t.slope},intercept:{type:"f",value:t.intercept},minPixelValue:{type:"f",value:t.minPixelValue},invert:{type:"i",value:n.invert?1:0}},r,t.width,t.height),d}function w(){var e={failIfMajorPerformanceCaveat:!0};try{var t=document.createElement("canvas");return Boolean(window.WebGLRenderingContext)&&(t.getContext("webgl",e)||t.getContext("experimental-webgl",e))}catch(e){return!1}}},"./webgl/shaders/index.js":
/*!********************************!*\
  !*** ./webgl/shaders/index.js ***!
  \********************************/
/*! exports provided: shaders, dataUtilities */function(e,t,n){"use strict";n.r(t),n.d(t,"shaders",function(){return s}),n.d(t,"dataUtilities",function(){return u});var a=n(/*! ./int16.js */"./webgl/shaders/int16.js"),r=n(/*! ./int8.js */"./webgl/shaders/int8.js"),i=n(/*! ./rgb.js */"./webgl/shaders/rgb.js"),o=n(/*! ./uint16.js */"./webgl/shaders/uint16.js"),l=n(/*! ./uint8.js */"./webgl/shaders/uint8.js"),s={int16:a.int16Shader,int8:r.int8Shader,rgb:i.rgbShader,uint16:o.uint16Shader,uint8:l.uint8Shader},u={int16:a.int16DataUtilities,int8:r.int8DataUtilities,rgb:i.rgbDataUtilities,uint16:o.uint16DataUtilities,uint8:l.uint8DataUtilities}},"./webgl/shaders/int16.js":
/*!********************************!*\
  !*** ./webgl/shaders/int16.js ***!
  \********************************/
/*! exports provided: int16DataUtilities, int16Shader */function(e,t,n){"use strict";n.r(t),n.d(t,"int16DataUtilities",function(){return r}),n.d(t,"int16Shader",function(){return a});var a={};var r={storedPixelDataToImageData:function(e){for(var t=e.getPixelData(),n=new Uint8Array(e.width*e.height*3),a=0,r=0;r<t.length;r++){var i=Math.abs(t[r]);n[a++]=255&i,n[a++]=i>>8,n[a++]=t[r]<0?0:1}return n}};a.frag="precision mediump float;uniform sampler2D u_image;uniform float ww;uniform float wc;uniform float slope;uniform float intercept;uniform int invert;varying vec2 v_texCoord;void main() {vec4 color = texture2D(u_image, v_texCoord);float intensity = color.r*256.0 + color.g*65536.0;if (color.b == 0.0)intensity = -intensity;intensity = intensity * slope + intercept;float center0 = wc - 0.5;float width0 = max(ww, 1.0);intensity = (intensity - center0) / width0 + 0.5;intensity = clamp(intensity, 0.0, 1.0);gl_FragColor = vec4(intensity, intensity, intensity, 1.0);if (invert == 1)gl_FragColor.rgb = 1.0 - gl_FragColor.rgb;}"},"./webgl/shaders/int8.js":
/*!*******************************!*\
  !*** ./webgl/shaders/int8.js ***!
  \*******************************/
/*! exports provided: int8DataUtilities, int8Shader */function(e,t,n){"use strict";n.r(t),n.d(t,"int8DataUtilities",function(){return r}),n.d(t,"int8Shader",function(){return a});var a={};var r={storedPixelDataToImageData:function(e){for(var t=e.getPixelData(),n=new Uint8Array(e.width*e.height*2),a=0,r=0;r<t.length;r++)n[a++]=t[r],n[a++]=t[r]<0?0:1;return n}};a.frag="precision mediump float;uniform sampler2D u_image;uniform float ww;uniform float wc;uniform float slope;uniform float intercept;uniform int invert;varying vec2 v_texCoord;void main() {vec4 color = texture2D(u_image, v_texCoord);float intensity = color.r*256.;if (color.a == 0.0)intensity = -intensity;intensity = intensity * slope + intercept;float center0 = wc - 0.5;float width0 = max(ww, 1.0);intensity = (intensity - center0) / width0 + 0.5;intensity = clamp(intensity, 0.0, 1.0);gl_FragColor = vec4(intensity, intensity, intensity, 1.0);if (invert == 1)gl_FragColor.rgb = 1.0 - gl_FragColor.rgb;}"},"./webgl/shaders/rgb.js":
/*!******************************!*\
  !*** ./webgl/shaders/rgb.js ***!
  \******************************/
/*! exports provided: rgbDataUtilities, rgbShader */function(e,t,n){"use strict";n.r(t),n.d(t,"rgbDataUtilities",function(){return r}),n.d(t,"rgbShader",function(){return a});var a={};var r={storedPixelDataToImageData:function(e){var t=e.minPixelValue,n=0,a=0,r=e.width*e.height*4,i=e.width*e.height*3,o=e.getPixelData(),l=new Uint8Array(i);if(t<0)for(;a<r;)l[n++]=o[a++]+-t,l[n++]=o[a++]+-t,l[n++]=o[a++]+-t,a+=1;else for(;a<r;)l[n++]=o[a++],l[n++]=o[a++],l[n++]=o[a++],a+=1;return l}};a.frag="precision mediump float;uniform sampler2D u_image;uniform float ww;uniform float wc;uniform float slope;uniform float intercept;uniform float minPixelValue;uniform int invert;varying vec2 v_texCoord;void main() {vec3 color = texture2D(u_image, v_texCoord).xyz;color = color * 256.0 * slope + intercept;float center0 = wc - 0.5 - minPixelValue;float width0 = max(ww, 1.0);color = (color - center0) / width0 + 0.5;gl_FragColor = vec4(color, 1);if (invert == 1)gl_FragColor.rgb = 1. - gl_FragColor.rgb;}"},"./webgl/shaders/uint16.js":
/*!*********************************!*\
  !*** ./webgl/shaders/uint16.js ***!
  \*********************************/
/*! exports provided: uint16DataUtilities, uint16Shader */function(e,t,n){"use strict";n.r(t),n.d(t,"uint16DataUtilities",function(){return r}),n.d(t,"uint16Shader",function(){return a});var a={};var r={storedPixelDataToImageData:function(e){for(var t=e.getPixelData(),n=new Uint8Array(e.width*e.height*2),a=0,r=0;r<t.length;r++){var i=t[r];n[a++]=255&i,n[a++]=i>>8}return n}};a.frag="precision mediump float;uniform sampler2D u_image;uniform float ww;uniform float wc;uniform float slope;uniform float intercept;uniform int invert;varying vec2 v_texCoord;void main() {vec4 color = texture2D(u_image, v_texCoord);float intensity = color.r*256.0 + color.a*65536.0;intensity = intensity * slope + intercept;float center0 = wc - 0.5;float width0 = max(ww, 1.0);intensity = (intensity - center0) / width0 + 0.5;intensity = clamp(intensity, 0.0, 1.0);gl_FragColor = vec4(intensity, intensity, intensity, 1.0);if (invert == 1)gl_FragColor.rgb = 1.0 - gl_FragColor.rgb;}"},"./webgl/shaders/uint8.js":
/*!********************************!*\
  !*** ./webgl/shaders/uint8.js ***!
  \********************************/
/*! exports provided: uint8DataUtilities, uint8Shader */function(e,t,n){"use strict";n.r(t),n.d(t,"uint8DataUtilities",function(){return r}),n.d(t,"uint8Shader",function(){return a});var a={};var r={storedPixelDataToImageData:function(e){return e.getPixelData()}};a.frag="precision mediump float;uniform sampler2D u_image;uniform float ww;uniform float wc;uniform float slope;uniform float intercept;uniform int invert;varying vec2 v_texCoord;void main() {vec4 color = texture2D(u_image, v_texCoord);float intensity = color.r*256.0;intensity = intensity * slope + intercept;float center0 = wc - 0.5;float width0 = max(ww, 1.0);intensity = (intensity - center0) / width0 + 0.5;intensity = clamp(intensity, 0.0, 1.0);gl_FragColor = vec4(intensity, intensity, intensity, 1.0);if (invert == 1)gl_FragColor.rgb = 1.0 - gl_FragColor.rgb;}"},"./webgl/textureCache.js":
/*!*******************************!*\
  !*** ./webgl/textureCache.js ***!
  \*******************************/
/*! exports provided: default */function(e,t,n){"use strict";n.r(t);var a=n(/*! ../events.js */"./events.js"),r=n(/*! ../triggerEvent.js */"./triggerEvent.js"),i={},o=[],l=268435456,s=0;function u(){if(!(s<=l)){for(o.sort(function(e,t){return e.timeStamp>t.timeStamp?-1:e.timeStamp<t.timeStamp?1:0});s>l;){var e=o[o.length-1];s-=e.sizeInBytes,delete i[e.imageId],o.pop(),Object(r.default)(a.events,a.default.WEBGL_TEXTURE_REMOVED,{imageId:e.imageId})}var t={maximumSizeInBytes:l,cacheSizeInBytes:s,numberOfImagesCached:o.length};Object(r.default)(a.events,a.default.WEBGL_TEXTURE_CACHE_FULL,t)}}t.default={purgeCache:function(){for(;o.length>0;){var e=o.pop();delete i[e.imageId]}s=0},getImageTexture:function(e){if(void 0===e)throw new Error("getImageTexture: imageId must not be undefined");var t=i[e];if(void 0!==t)return t.timeStamp=new Date,t.imageTexture},putImageTexture:function(e,t){var n=e.imageId;if(void 0===e)throw new Error("putImageTexture: image must not be undefined");if(void 0===n)throw new Error("putImageTexture: imageId must not be undefined");if(void 0===t)throw new Error("putImageTexture: imageTexture must not be undefined");if(!0===Object.prototype.hasOwnProperty.call(i,n))throw new Error("putImageTexture: imageId already in cache");var a={imageId:n,imageTexture:t,timeStamp:new Date,sizeInBytes:t.sizeInBytes};if(i[n]=a,o.push(a),void 0===t.sizeInBytes)throw new Error("putImageTexture: imageTexture.sizeInBytes must not be undefined");if(void 0===t.sizeInBytes.toFixed)throw new Error("putImageTexture: imageTexture.sizeInBytes is not a number");s+=a.sizeInBytes,u()},removeImageTexture:function(e){if(void 0===e)throw new Error("removeImageTexture: imageId must not be undefined");var t=i[e];if(void 0===t)throw new Error("removeImageTexture: imageId must not be undefined");return o.splice(o.indexOf(t),1),s-=t.sizeInBytes,delete i[e],t.imageTexture},setMaximumSizeBytes:function(e){if(void 0===e)throw new Error("setMaximumSizeBytes: parameter numBytes must not be undefined");if(void 0===e.toFixed)throw new Error("setMaximumSizeBytes: parameter numBytes must be a number");l=e,u()}}},"./webgl/vertexShader.js":
/*!*******************************!*\
  !*** ./webgl/vertexShader.js ***!
  \*******************************/
/*! exports provided: vertexShader */function(e,t,n){"use strict";n.r(t),n.d(t,"vertexShader",function(){return a});var a="attribute vec2 a_position;attribute vec2 a_texCoord;uniform vec2 u_resolution;varying vec2 v_texCoord;void main() {vec2 zeroToOne = a_position / u_resolution;vec2 zeroToTwo = zeroToOne * 2.0;vec2 clipSpace = zeroToTwo - 1.0;gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);v_texCoord = a_texCoord;}"}})})},function(e,t,n){const a=n(0),r=n(2),i=n(3),{loadImage:o,addVolume:l}=n(4),s=n(11),u=n(12);r.external.cornerstone=a,r.external.dicomParser=s,i.external.cornerstone=a;r.webWorkerManager.initialize({webWorkerPath:"node_modules/cornerstone-wado-image-loader/dist/cornerstoneWADOImageLoaderWebWorker.js",taskConfiguration:{decodeTask:{codecsPath:"../dist/cornerstoneWADOImageLoaderCodecs.js"}}}),console.log("wadoimageloader:",r),console.log("cornerstone:",a),console.log("cornerstoneTools:",i);const d="mprLoader:t1-brain",c=u["t1-brain"],f={volumeId:d,currentImageIdIndex:0,imageIds:c},h=document.getElementById("viewport");let m,v="axial",g=0;function p(){const e=document.getElementById("slice");"axial"===v?e.max=m[0].toString():"coronal"===v?e.max=m[1].toString():"sagittal"===v&&(e.max=m[2].toString())}function b(){v=document.querySelector('input[name="axis"]:checked').value,p(),w()}const y=document.getElementsByName("axis");for(let e=0;e<y.length;e++)y[e].addEventListener("change",b);function w(){a.loadImage(d,{axis:v,slice:g}).then(function(e){a.displayImage(h,e.image)})}document.getElementById("slice").addEventListener("input",function(){g=parseInt(document.getElementById("slice").value,10)-1,w(),document.getElementById("slice-number").innerHTML=(g+1).toString()}),a.registerImageLoader("mprLoader",o),l("mprLoader:t1-brain",f),a.enable(h),i.addStackStateManager(h,["stack"]),i.addToolState(h,"stack",f),a.loadImage(d,{stack:f,plane:"axial",slice:0}).then(function(e){m=e.volumeShape,a.displayImage(h,e.image)}),document.addEventListener("volume-loaded",e=>{({shape:m}=e.detail),p()})},function(e,t,n){
/*! cornerstone-wado-image-loader - 2.1.4 - 2018-07-11 | (c) 2016 Chris Hafey | https://github.com/cornerstonejs/cornerstoneWADOImageLoader */
e.exports=function(e){var t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:a})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=63)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=n(56),i=(a=r)&&a.__esModule?a:{default:a},o=void 0,l=void 0,s={set cornerstone(e){o=e,(0,i.default)(o)},get cornerstone(){if(!o){if(!window||!window.cornerstone)throw new Error("cornerstoneWADOImageLoader requires a copy of Cornerstone to work properly. Please add cornerstoneWADOImageLoader.external.cornerstone = cornerstone; to your application.");o=window.cornerstone,(0,i.default)(o)}return o},set dicomParser(e){l=e},get dicomParser(){if(!l){if(!window||!window.dicomParser)throw new Error("cornerstoneWADOImageLoader requires a copy of dicomParser to work properly. Please add cornerstoneWADOImageLoader.external.dicomParser = dicomParser; to your application.");l=window.dicomParser}return l}};t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){for(var t=e[0],n=e[0],a=void 0,r=e.length,i=1;i<r;i++)a=e[i],t=Math.min(t,a),n=Math.max(n,a);return{min:t,max:n}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=void 0;function r(e,t){var n=function(e,t,n){var r=a._malloc(e.length);a.writeArrayToMemory(e,r);var i=a._malloc(4),o=a._malloc(4),l=a._malloc(4),s=a._malloc(4),u=a._malloc(4),d=(new Date).getTime();if(0!==a.ccall("jp2_decode","number",["number","number","number","number","number","number","number"],[r,e.length,i,o,l,s,u]))return console.log("[opj_decode] decoding failed!"),a._free(r),a._free(a.getValue(i,"*")),a._free(l),a._free(s),a._free(o),void a._free(u);var c=a.getValue(i,"*"),f={length:a.getValue(o,"i32"),sx:a.getValue(l,"i32"),sy:a.getValue(s,"i32"),nbChannels:a.getValue(u,"i32"),perf_timetodecode:void 0,pixelData:void 0},h=f.sx*f.sy*f.nbChannels,m=new Int32Array(a.HEAP32.buffer,c,h);if(1===t)if(Uint8Array.from)f.pixelData=Uint8Array.from(m);else{f.pixelData=new Uint8Array(h);for(var v=0;v<h;v++)f.pixelData[v]=m[v]}else if(n)if(Int16Array.from)f.pixelData=Int16Array.from(m);else{f.pixelData=new Int16Array(h);for(var g=0;g<h;g++)f.pixelData[g]=m[g]}else if(Uint16Array.from)f.pixelData=Uint16Array.from(m);else{f.pixelData=new Uint16Array(h);for(var p=0;p<h;p++)f.pixelData[p]=m[p]}var b=(new Date).getTime();return f.perf_timetodecode=b-d,a._free(r),a._free(i),a._free(c),a._free(o),a._free(l),a._free(s),a._free(u),f}(t,e.bitsAllocated<=8?1:2,1===e.pixelRepresentation);return e.columns=n.sx,e.rows=n.sy,e.pixelData=n.pixelData,n.nbChannels>1&&(e.photometricInterpretation="RGB"),e}function i(e){if(!e.usePDFJS&&"undefined"==typeof OpenJPEG)throw new Error("OpenJPEG decoder not loaded");if(!(a||(a=OpenJPEG())&&a._jp2_decode))throw new Error("OpenJPEG failed to initialize")}t.default=function(e,t,n){var a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return i(n),a.usePDFJS||n.usePDFJS?function(e,t){var n=new JpxImage;n.parse(t);var a=n.tiles.length;if(1!==a)throw new Error("JPEG2000 decoder returned a tileCount of "+a+", when 1 is expected");return e.columns=n.width,e.rows=n.height,e.pixelData=n.tiles[0].items,e}(e,t):r(e,t)},t.initializeJPEG2000=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=void 0;function r(){if("undefined"==typeof CharLS)throw new Error("No JPEG-LS decoder loaded");if(!(a||(a=CharLS())&&a._jpegls_decode))throw new Error("JPEG-LS failed to initialize")}t.default=function(e,t){r();var n=function(e,t){var n=a._malloc(e.length);a.writeArrayToMemory(e,n);var r=a._malloc(4),i=a._malloc(4),o=a._malloc(4),l=a._malloc(4),s=a._malloc(4),u=a._malloc(4),d=a._malloc(4),c=a._malloc(4),f=a._malloc(4),h={result:a.ccall("jpegls_decode","number",["number","number","number","number","number","number","number","number","number","number","number"],[n,e.length,r,i,o,l,s,u,c,d,f]),width:a.getValue(o,"i32"),height:a.getValue(l,"i32"),bitsPerSample:a.getValue(s,"i32"),stride:a.getValue(u,"i32"),components:a.getValue(c,"i32"),allowedLossyError:a.getValue(d,"i32"),interleaveMode:a.getValue(f,"i32"),pixelData:void 0},m=a.getValue(r,"*");return h.bitsPerSample<=8?(h.pixelData=new Uint8Array(h.width*h.height*h.components),h.pixelData.set(new Uint8Array(a.HEAP8.buffer,m,h.pixelData.length))):t?(h.pixelData=new Int16Array(h.width*h.height*h.components),h.pixelData.set(new Int16Array(a.HEAP16.buffer,m,h.pixelData.length))):(h.pixelData=new Uint16Array(h.width*h.height*h.components),h.pixelData.set(new Uint16Array(a.HEAP16.buffer,m,h.pixelData.length))),a._free(n),a._free(m),a._free(r),a._free(i),a._free(o),a._free(l),a._free(s),a._free(u),a._free(c),a._free(f),h}(t,1===e.pixelRepresentation);if(0!==n.result&&6!==n.result)throw new Error("JPEG-LS decoder failed to decode frame (error code "+n.result+")");return e.columns=n.width,e.rows=n.height,e.pixelData=n.pixelData,e},t.initializeJPEGLS=r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.internal=t.xhrRequest=t.getOptions=t.setOptions=void 0;var a,r=n(53),i=(a=r)&&a.__esModule?a:{default:a},o=n(6),l={xhrRequest:i.default,setOptions:o.setOptions,getOptions:o.getOptions};t.setOptions=o.setOptions,t.getOptions=o.getOptions,t.xhrRequest=i.default,t.internal=l},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=e.indexOf(":"),n=e.substring(t+1),a=n.indexOf("frame="),r=void 0;if(-1!==a){var i=n.substr(a+6);r=parseInt(i,10),n=n.substr(0,a-1)}return{scheme:e.substr(0,t),url:n,frame:r}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.setOptions=function(e){a=Object.assign(a,e)},t.getOptions=function(){return a};var a={beforeSend:function(){},imageCreated:function(){},strict:!1,useWebWorkers:!0,decodeConfig:{usePDFJS:!1}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){return t=t||0,e&&e.Value?e.Value.length<=t?n:e.Value[t]:n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default="2.1.4"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getInfo=d;var a,r=n(0),i=(a=r)&&a.__esModule?a:{default:a},o=n(4),l=0,s={},u={};function d(){return{cacheSizeInBytes:l,numberOfDataSetsCached:Object.keys(s).length}}t.default={isLoaded:function(e){return void 0!==s[e]},load:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:o.xhrRequest,n=arguments[2],a=i.default.cornerstone,r=i.default.dicomParser;if(s[e])return new Promise(function(t){s[e].cacheCount++,t(s[e].dataSet)});if(u[e])return u[e].cacheCount++,u[e];var c=t(e,n),f=new Promise(function(t,n){c.then(function(i){var o=new Uint8Array(i),u=void 0;try{u=r.parseDicom(o)}catch(e){return n(e)}s[e]={dataSet:u,cacheCount:f.cacheCount},l+=u.byteArray.length,t(u),a.triggerEvent(a.events,"datasetscachechanged",{uri:e,action:"loaded",cacheInfo:d()})},n).then(function(){delete u[e]},function(){delete u[e]})});return f.cacheCount=1,u[e]=f,f},unload:function(e){var t=i.default.cornerstone;s[e]&&(s[e].cacheCount--,0===s[e].cacheCount&&(l-=s[e].dataSet.byteArray.length,delete s[e],t.triggerEvent(t.events,"datasetscachechanged",{uri:e,action:"unloaded",cacheInfo:d()})))},getInfo:d,purge:function(){s={},u={}},get:function(e){if(s[e])return s[e].dataSet}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=(0,i.default)(e.pixelData),a=!(o(e.smallestPixelValue)&&o(e.largestPixelValue));!0!==t||a?(e.smallestPixelValue=n.min,e.largestPixelValue=n.max):(e.smallestPixelValue!==n.min&&console.warn("Image smallestPixelValue tag is incorrect. Rendering performance will suffer considerably."),e.largestPixelValue!==n.max&&console.warn("Image largestPixelValue tag is incorrect. Rendering performance will suffer considerably."))};var a,r=n(1),i=(a=r)&&a.__esModule?a:{default:a};function o(e){return"number"==typeof e}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("undefined"==typeof jpeg||void 0===jpeg.lossless||void 0===jpeg.lossless.Decoder)throw new Error("No JPEG Lossless decoder loaded");var n=e.bitsAllocated<=8?1:2,a=t.buffer,r=(new jpeg.lossless.Decoder).decode(a,t.byteOffset,t.length,n);return 0===e.pixelRepresentation?16===e.bitsAllocated?(e.pixelData=new Uint16Array(r.buffer),e):(e.pixelData=new Uint8Array(r.buffer),e):(e.pixelData=new Int16Array(r.buffer),e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("undefined"==typeof JpegImage)throw new Error("No JPEG Baseline decoder loaded");var n=new JpegImage;return n.parse(t),n.colorTransform=!1,8===e.bitsAllocated?(e.pixelData=n.getData(e.columns,e.rows),e):16===e.bitsAllocated?(e.pixelData=n.getData16(e.columns,e.rows),e):void 0}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(8===e.bitsAllocated)return e.planarConfiguration?function(e,t){for(var n=t,a=e.rows*e.columns,r=new ArrayBuffer(a*e.samplesPerPixel),i=new DataView(n.buffer,n.byteOffset),o=new Int8Array(n.buffer,n.byteOffset),l=new Int8Array(r),s=0,u=i.getInt32(0,!0),d=0;d<u;++d){s=d*a;var c=i.getInt32(4*(d+1),!0),f=i.getInt32(4*(d+2),!0);0===f&&(f=n.length);for(var h=a*u;c<f;){var m=o[c++];if(m>=0&&m<=127)for(var v=0;v<m+1&&s<h;++v)l[s]=o[c++],s++;else if(m<=-1&&m>=-127)for(var g=o[c++],p=0;p<1-m&&s<h;++p)l[s]=g,s++}}return e.pixelData=new Uint8Array(r),e}(e,t):function(e,t){for(var n=t,a=e.rows*e.columns,r=new ArrayBuffer(a*e.samplesPerPixel),i=new DataView(n.buffer,n.byteOffset),o=new Int8Array(n.buffer,n.byteOffset),l=new Int8Array(r),s=0,u=i.getInt32(0,!0),d=0;d<u;++d){s=d;var c=i.getInt32(4*(d+1),!0),f=i.getInt32(4*(d+2),!0);0===f&&(f=n.length);for(var h=a*u;c<f;){var m=o[c++];if(m>=0&&m<=127)for(var v=0;v<m+1&&s<h;++v)l[s]=o[c++],s+=e.samplesPerPixel;else if(m<=-1&&m>=-127)for(var g=o[c++],p=0;p<1-m&&s<h;++p)l[s]=g,s+=e.samplesPerPixel}}return e.pixelData=new Uint8Array(r),e}(e,t);if(16===e.bitsAllocated)return function(e,t){for(var n=t,a=e.rows*e.columns,r=new ArrayBuffer(a*e.samplesPerPixel*2),i=new DataView(n.buffer,n.byteOffset),o=new Int8Array(n.buffer,n.byteOffset),l=new Int8Array(r),s=i.getInt32(0,!0),u=0;u<s;++u){var d=0,c=0===u?1:0,f=i.getInt32(4*(u+1),!0),h=i.getInt32(4*(u+2),!0);for(0===h&&(h=n.length);f<h;){var m=o[f++];if(m>=0&&m<=127)for(var v=0;v<m+1&&d<a;++v)l[2*d+c]=o[f++],d++;else if(m<=-1&&m>=-127)for(var g=o[f++],p=0;p<1-m&&d<a;++p)l[2*d+c]=g,d++}}return 0===e.pixelRepresentation?e.pixelData=new Uint16Array(r):e.pixelData=new Int16Array(r),e}(e,t);throw new Error("unsupported pixel format for RLE")}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(16===e.bitsAllocated){var n=t.buffer,a=t.byteOffset,r=t.length;a%2&&(n=n.slice(a),a=0),0===e.pixelRepresentation?e.pixelData=new Uint16Array(n,a,r/2):e.pixelData=new Int16Array(n,a,r/2);for(var i=0;i<e.pixelData.length;i++)e.pixelData[i]=(255&(o=e.pixelData[i]))<<8|o>>8&255}else 8===e.bitsAllocated&&(e.pixelData=t);var o;return e}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var n=t.buffer,a=t.byteOffset,r=t.length;return 16===e.bitsAllocated?(a%2&&(n=n.slice(a),a=0),0===e.pixelRepresentation?e.pixelData=new Uint16Array(n,a,r/2):e.pixelData=new Int16Array(n,a,r/2)):8===e.bitsAllocated||1===e.bitsAllocated?e.pixelData=t:32===e.bitsAllocated&&(a%2&&(n=n.slice(a),a=0),e.pixelData=new Float32Array(n,a,r/4)),e}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=d(n(15)),r=d(n(14)),i=d(n(13)),o=d(n(12)),l=d(n(11)),s=d(n(3)),u=d(n(2));function d(e){return e&&e.__esModule?e:{default:e}}t.default=function(e,t,n,d,c){var f=(new Date).getTime();if("1.2.840.10008.1.2"===t)e=(0,a.default)(e,n);else if("1.2.840.10008.1.2.1"===t)e=(0,a.default)(e,n);else if("1.2.840.10008.1.2.2"===t)e=(0,r.default)(e,n);else if("1.2.840.10008.1.2.1.99"===t)e=(0,a.default)(e,n);else if("1.2.840.10008.1.2.5"===t)e=(0,i.default)(e,n);else if("1.2.840.10008.1.2.4.50"===t)e=(0,o.default)(e,n);else if("1.2.840.10008.1.2.4.51"===t)e=(0,o.default)(e,n);else if("1.2.840.10008.1.2.4.57"===t)e=(0,l.default)(e,n);else if("1.2.840.10008.1.2.4.70"===t)e=(0,l.default)(e,n);else if("1.2.840.10008.1.2.4.80"===t)e=(0,s.default)(e,n);else if("1.2.840.10008.1.2.4.81"===t)e=(0,s.default)(e,n);else if("1.2.840.10008.1.2.4.90"===t)e=(0,u.default)(e,n,d,c);else{if("1.2.840.10008.1.2.4.91"!==t)throw new Error("no decoder for transfer syntax "+t);e=(0,u.default)(e,n,d,c)}var h=void 0!==e.pixelRepresentation&&1===e.pixelRepresentation,m=h&&void 0!==e.bitsStored?32-e.bitsStored:void 0;if(h&&void 0!==m)for(var v=0;v<e.pixelData.length;v++)e.pixelData[v]=e.pixelData[v]<<m>>m;var g=(new Date).getTime();return e.decodeTimeInMS=g-f,e}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=d(n(0)),r=d(n(31)),i=d(n(30)),o=d(n(27)),l=d(n(26)),s=d(n(1)),u=d(n(25));function d(e){return e&&e.__esModule?e:{default:e}}var c="";t.default=function(e,t,n,d){if(!t||!t.length)return Promise.reject(new Error("The file does not contain image data."));var f=a.default.cornerstone,h=document.createElement("canvas"),m=(0,r.default)(e),v=(0,i.default)(m,n,t,h,d);return new Promise(function(t,a){v.then(function(a){var r=f.metaData.get("imagePlaneModule",e)||{},i=f.metaData.get("voiLutModule",e)||{},d=f.metaData.get("modalityLutModule",e)||{},m=f.metaData.get("sopCommonModule",e)||{},v=(0,o.default)(a.photometricInterpretation);if(!(0,u.default)(a,n)&&(function(e){32===e.bitsAllocated?e.pixelData=new Float32Array(e.pixelData):16===e.bitsAllocated?0===e.pixelRepresentation?e.pixelData=new Uint16Array(e.pixelData):e.pixelData=new Int16Array(e.pixelData):e.pixelData=new Uint8Array(e.pixelData)}(a),v)){h.height=a.rows,h.width=a.columns;var g=h.getContext("2d").createImageData(a.columns,a.rows);(0,l.default)(a,g),a.imageData=g,a.pixelData=g.data;var p=(0,s.default)(a.pixelData);a.smallestPixelValue=p.min,a.largestPixelValue=p.max}var b,y={imageId:e,color:v,columnPixelSpacing:r.pixelSpacing?r.pixelSpacing[1]:void 0,columns:a.columns,height:a.rows,intercept:d.rescaleIntercept?d.rescaleIntercept:0,invert:"MONOCHROME1"===a.photometricInterpretation,minPixelValue:a.smallestPixelValue,maxPixelValue:a.largestPixelValue,rowPixelSpacing:r.pixelSpacing?r.pixelSpacing[0]:void 0,rows:a.rows,sizeInBytes:a.pixelData.length,slope:d.rescaleSlope?d.rescaleSlope:1,width:a.columns,windowCenter:i.windowCenter?i.windowCenter[0]:void 0,windowWidth:i.windowWidth?i.windowWidth[0]:void 0,decodeTimeInMS:a.decodeTimeInMS,floatPixelData:void 0};if(a.pixelData instanceof Float32Array){var w=a.pixelData,_=function(e){for(var t=(0,s.default)(e),n=Math.abs(t.max-t.min)/65535,a=t.min,r=e.length,i=new Uint16Array(r),o=65535,l=0,u=0;u<r;u++){var d=Math.floor((e[u]-a)/n);i[u]=d,o=Math.min(o,d),l=Math.max(l,d)}return{min:o,max:l,intPixelData:i,slope:n,intercept:a}}(w);y.minPixelValue=_.min,y.maxPixelValue=_.max,y.slope=_.slope,y.intercept=_.intercept,y.floatPixelData=w,y.getPixelData=function(){return _.intPixelData}}else y.getPixelData=function(){return a.pixelData};if(y.color&&(y.getCanvas=function(){return c===e?h:(h.height=y.rows,h.width=y.columns,h.getContext("2d").putImageData(a.imageData,0,0),c=e,h)}),d.modalityLUTSequence&&d.modalityLUTSequence.length>0&&"1.2.840.10008.5.1.4.1.1.12.1"!==(b=m.sopClassUID)&&"1.2.840.10008.5.1.4.1.1.12.2.1"!==b&&(y.modalityLUT=d.modalityLUTSequence[0]),i.voiLUTSequence&&i.voiLUTSequence.length>0&&(y.voiLUT=i.voiLUTSequence[0]),y.color&&(y.windowWidth=255,y.windowCenter=127),void 0===y.windowCenter||void 0===y.windowWidth){var E=y.maxPixelValue*y.slope+y.intercept,x=y.minPixelValue*y.slope+y.intercept;y.windowWidth=E-x,y.windowCenter=(E+x)/2}t(y)},a)})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=[];t.default={add:function(e,t){a[e]=t},get:function(e){return a[e]},remove:function(e){a[e]=void 0},purge:function(){a=[]}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.loadImage=t.getLoaderForScheme=t.loadImageFromPromise=void 0;var a=u(n(17)),r=u(n(5)),i=u(n(9)),o=u(n(20)),l=u(n(51)),s=n(4);function u(e){return e&&e.__esModule?e:{default:e}}function d(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=arguments[3],s=arguments[4],u=arguments[5],d=(new Date).getTime(),c={cancelFn:void 0};return c.promise=new Promise(function(f,h){e.then(function(e){var m=(0,l.default)(e,n),v=e.string("x00020010"),g=(new Date).getTime(),p=(0,a.default)(t,m,v,s);!function(e,t){e.decache=function(){var e=(0,r.default)(t);i.default.unload(e.url)}}(c,t),p.then(function(t){t.data=e,t.sharedCacheKey=o;var n=(new Date).getTime();t.loadTimeInMS=g-d,t.totalTimeInMS=n-d,void 0!==u&&void 0!==u.imageDoneCallback&&u.imageDoneCallback(t),f(t)},function(t){h({error:t,dataSet:e})})},function(e){h({error:e})})}),c}function c(e){return"dicomweb"===e||"wadouri"===e?s.xhrRequest:"dicomfile"===e?o.default:void 0}t.loadImageFromPromise=d,t.getLoaderForScheme=c,t.loadImage=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=(0,r.default)(e),o=t.loader;return void 0===o&&(o=c(n.scheme)),i.default.isLoaded(n.url)?function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments[3],i=arguments[4],o=(new Date).getTime();return{promise:new Promise(function(s,u){var d=(new Date).getTime(),c=void 0;try{var f=(0,l.default)(e,n),h=e.string("x00020010");c=(0,a.default)(t,f,h,i)}catch(t){return void u({error:t,dataSet:e})}c.then(function(t){t.data=e,t.sharedCacheKey=r;var n=(new Date).getTime();t.loadTimeInMS=d-o,t.totalTimeInMS=n-o,s(t)},u)}),cancelFn:void 0}}(i.default.get(n.url,o,e),e,n.frame,n.url,t):d(i.default.load(n.url,o,e),e,n.frame,n.url,t)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=i(n(5)),r=i(n(24));function i(e){return e&&e.__esModule?e:{default:e}}t.default=function(e){var t=(0,a.default)(e),n=parseInt(t.url,10),i=r.default.get(n);return new Promise(function(e,t){var n=new FileReader;n.onload=function(t){var n=t.target.result;e(n)},n.onerror=t,n.readAsArrayBuffer(i)})}},function(e,t,n){"use strict";function a(e,t){return e&1<<t}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){for(var r=new Uint8Array(n),i=0;i<n;i++){var o=e[Math.floor(i/8)+t],l=i%8;r[i]=a(o,l)?1:0}return r}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=n(21),i=(a=r)&&a.__esModule?a:{default:a};t.default=function(e,t){var n=e.elements.x7fe00010||e.elements.x7fe00008,a=e.uint16("x00280100"),r=e.uint16("x00280010"),o=e.uint16("x00280011"),l=e.uint16("x00280002"),s=n.dataOffset,u=r*o*l,d=void 0;if(8===a){if((d=s+t*u)>=e.byteArray.length)throw new Error("frame exceeds size of pixelData");return new Uint8Array(e.byteArray.buffer,d,u)}if(16===a){if((d=s+t*u*2)>=e.byteArray.length)throw new Error("frame exceeds size of pixelData");return new Uint8Array(e.byteArray.buffer,d,2*u)}if(1===a){if((d=s+t*u*.125)>=e.byteArray.length)throw new Error("frame exceeds size of pixelData");return(0,i.default)(e.byteArray,d,u)}if(32===a){if((d=s+t*u*4)>=e.byteArray.length)throw new Error("frame exceeds size of pixelData");return new Uint8Array(e.byteArray.buffer,d,4*u)}throw new Error("unsupported pixel format")}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var n=i.default.dicomParser;if(e.elements.x7fe00010&&e.elements.x7fe00010.basicOffsetTable.length)return n.readEncapsulatedImageFrame(e,e.elements.x7fe00010,t);if(function(e){var t=e.intString("x00280008"),n=e.elements.x7fe00010;return t!==n.fragments.length}(e)){var a=n.createJPEGBasicOffsetTable(e,e.elements.x7fe00010);return n.readEncapsulatedImageFrame(e,e.elements.x7fe00010,t,a)}return n.readEncapsulatedPixelDataFromFragments(e,e.elements.x7fe00010,t)};var a,r=n(0),i=(a=r)&&a.__esModule?a:{default:a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=[];t.default={add:function(e){return"dicomfile:"+(a.push(e)-1)},get:function(e){return a[e]},remove:function(e){a[e]=void 0},purge:function(){a=[]}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(t=t||e.transferSyntax,8===e.bitsAllocated&&"1.2.840.10008.1.2.4.50"===t&&(3===e.samplesPerPixel||4===e.samplesPerPixel))return!0}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var n=t.data;if("RGB"===e.photometricInterpretation)r(e,n);else if("YBR_RCT"===e.photometricInterpretation)r(e,n);else if("YBR_ICT"===e.photometricInterpretation)r(e,n);else if("PALETTE COLOR"===e.photometricInterpretation)(0,a.convertPALETTECOLOR)(e,n);else if("YBR_FULL_422"===e.photometricInterpretation)r(e,n);else{if("YBR_FULL"!==e.photometricInterpretation)throw new Error("No color space conversion for photometric interpretation "+e.photometricInterpretation);!function(e,t){0===e.planarConfiguration?(0,a.convertYBRFullByPixel)(e.pixelData,t):(0,a.convertYBRFullByPlane)(e.pixelData,t)}(e,n)}};var a=n(45);function r(e,t){0===e.planarConfiguration?(0,a.convertRGBColorByPixel)(e.pixelData,t):(0,a.convertRGBColorByPlane)(e.pixelData,t)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return"RGB"===e||"PALETTE COLOR"===e||"YBR_FULL"===e||"YBR_FULL_422"===e||"YBR_PARTIAL_422"===e||"YBR_PARTIAL_420"===e||"YBR_RCT"===e||"YBR_ICT"===e}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=n(1),i=(a=r)&&a.__esModule?a:{default:a};t.default=function(e,t,n){var a=(new Date).getTime(),r=new Blob([t],{type:"image/jpeg"});return new Promise(function(t,o){var l=new FileReader;void 0===l.readAsBinaryString?l.readAsArrayBuffer(r):l.readAsBinaryString(r),l.onload=function(){var r=new Image;r.onload=function(){n.height=r.height,n.width=r.width,e.rows=r.height,e.columns=r.width;var o=n.getContext("2d");o.drawImage(this,0,0);var l=o.getImageData(0,0,r.width,r.height),s=(new Date).getTime();e.pixelData=l.data,e.imageData=l,e.decodeTimeInMS=s-a;var u=(0,i.default)(e.pixelData);e.smallestPixelValue=u.min,e.largestPixelValue=u.max,t(e)},r.onerror=function(e){o(e)},void 0===l.readAsBinaryString?r.src="data:image/jpeg;base64,"+window.btoa(function(e){return function(e){var t=void 0;try{return decodeURIComponent(escape(e))}catch(n){if((t=n)instanceof URIError)return e;throw t}}(String.fromCharCode.apply(null,Array.prototype.slice.apply(new Uint8Array(e))))}(l.result)):r.src="data:image/jpeg;base64,"+window.btoa(l.result)},l.onerror=function(e){o(e)}})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=0,r=[],i=[],o=(0,n(6).getOptions)(),l={maxWebWorkers:navigator.hardwareConcurrency||1,startWebWorkersOnDemand:!0,webWorkerPath:"../../dist/cornerstoneWADOImageLoaderWebWorker.js",webWorkerTaskPaths:[],taskConfiguration:{decodeTask:{loadCodecsOnStartup:!0,initializeCodecsOnStartup:!1,codecsPath:"../dist/cornerstoneWADOImageLoaderCodecs.js",usePDFJS:!1,strict:o.strict}}},s=void 0,u={maxWebWorkers:0,numWebWorkers:0,numTasksQueued:0,numTasksExecuting:0,numTasksCompleted:0,totalTaskTimeInMS:0,totalTimeDelayedInMS:0};function d(){if(r.length){for(var e=0;e<i.length;e++)if("ready"===i[e].status){i[e].status="busy";var t=r.shift();t.start=(new Date).getTime();var n=(new Date).getTime();return u.totalTimeDelayedInMS+=n-t.added,i[e].task=t,i[e].worker.postMessage({taskType:t.taskType,workerIndex:e,data:t.data},t.transferList),void u.numTasksExecuting++}i.length<s.maxWebWorkers&&f()}}function c(e){if("initialize"===e.data.taskType)i[e.data.workerIndex].status="ready",d();else{var t=i[e.data.workerIndex].task.start;i[e.data.workerIndex].task.deferred.resolve(e.data.result),i[e.data.workerIndex].task=void 0,u.numTasksExecuting--,i[e.data.workerIndex].status="ready",u.numTasksCompleted++;var n=(new Date).getTime();u.totalTaskTimeInMS+=n-t,d()}}function f(){if(!(i.length>=s.maxWebWorkers)){var e=new Worker(s.webWorkerPath);i.push({worker:e,status:"initializing"}),e.addEventListener("message",c),e.postMessage({taskType:"initialize",workerIndex:i.length-1,config:s})}}function h(e){if(e=e||l,s)throw new Error("WebWorkerManager already initialized");if((s=e).maxWebWorkers=s.maxWebWorkers||navigator.hardwareConcurrency||1,!s.startWebWorkersOnDemand)for(var t=0;t<s.maxWebWorkers;t++)f()}t.default={initialize:h,loadWebWorkerTask:function(e,t){s.webWorkerTaskPaths.push(e),t&&(s.taskConfiguration=Object.assign(s.taskConfiguration,t));for(var n=0;n<i.length;n++)i[n].worker.postMessage({taskType:"loadWebWorkerTask",workerIndex:i.length-1,sourcePath:e,config:s})},addTask:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments[3];s||h();var o={},l=new Promise(function(e,t){o={resolve:e,reject:t}}),u=void 0;for(u=0;u<r.length&&!(r[u].priority<n);u++);var c=a++;return r.splice(u,0,{taskId:c,taskType:e,status:"ready",added:(new Date).getTime(),data:t,deferred:o,priority:n,transferList:i}),d(),{taskId:c,promise:l}},getStatistics:function(){return u.maxWebWorkers=s.maxWebWorkers,u.numWebWorkers=i.length,u.numTasksQueued=r.length,u},setTaskPriority:function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=0;n<r.length;n++)if(r[n].taskId===e){var a=r.splice(n,1)[0];for(a.priority=t,n=0;n<r.length&&!(r[n].priority<t);n++);return r.splice(n,0,a),!0}return!1},cancelTask:function(e,t){for(var n=0;n<r.length;n++)if(r[n].taskId===e)return r.splice(n,1).deferred.reject(t),!0;return!1}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(6),r=d(n(29)),i=d(n(28)),o=d(n(16)),l=d(n(10)),s=n(2),u=n(3);function d(e){return e&&e.__esModule?e:{default:e}}var c=!1;function f(e,t,n,i){var d=i.priority||void 0,f=i.transferPixelData?[n.buffer]:void 0,h=(0,a.getOptions)(),m=h.strict,v=h.decodeConfig;return!1===h.useWebWorkers?(!1===c&&((0,s.initializeJPEG2000)(v),(0,u.initializeJPEGLS)(v),c=!0),new Promise(function(a,r){try{var s=[e,t,n,v,i],u=o.default.apply(void 0,s);(0,l.default)(u,m),a(u)}catch(e){r(e)}})):r.default.addTask("decodeTask",{imageFrame:e,transferSyntax:t,pixelData:n,options:i},d,f).promise}t.default=function(e,t,n,a){var r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};return"1.2.840.10008.1.2"===t?f(e,t,n,r):"1.2.840.10008.1.2.1"===t?f(e,t,n,r):"1.2.840.10008.1.2.2"===t?f(e,t,n,r):"1.2.840.10008.1.2.1.99"===t?f(e,t,n,r):"1.2.840.10008.1.2.5"===t?f(e,t,n,r):"1.2.840.10008.1.2.4.50"===t?8!==e.bitsAllocated||3!==e.samplesPerPixel&&4!==e.samplesPerPixel?f(e,t,n,r):(0,i.default)(e,n,a):"1.2.840.10008.1.2.4.51"===t?f(e,t,n,r):"1.2.840.10008.1.2.4.57"===t?f(e,t,n,r):"1.2.840.10008.1.2.4.70"===t?f(e,t,n,r):"1.2.840.10008.1.2.4.80"===t?f(e,t,n,r):"1.2.840.10008.1.2.4.81"===t?f(e,t,n,r):"1.2.840.10008.1.2.4.90"===t?f(e,t,n,r):"1.2.840.10008.1.2.4.91"===t?f(e,t,n,r):new Promise(function(e,n){n(new Error("No decoder for transfer syntax "+t))})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=n(0),i=(a=r)&&a.__esModule?a:{default:a};t.default=function(e){var t=i.default.cornerstone.metaData.get("imagePixelModule",e);return{samplesPerPixel:t.samplesPerPixel,photometricInterpretation:t.photometricInterpretation,planarConfiguration:t.planarConfiguration,rows:t.rows,columns:t.columns,bitsAllocated:t.bitsAllocated,bitsStored:t.bitsStored,pixelRepresentation:t.pixelRepresentation,smallestPixelValue:t.smallestPixelValue,largestPixelValue:t.largestPixelValue,redPaletteColorLookupTableDescriptor:t.redPaletteColorLookupTableDescriptor,greenPaletteColorLookupTableDescriptor:t.greenPaletteColorLookupTableDescriptor,bluePaletteColorLookupTableDescriptor:t.bluePaletteColorLookupTableDescriptor,redPaletteColorLookupTableData:t.redPaletteColorLookupTableData,greenPaletteColorLookupTableData:t.greenPaletteColorLookupTableData,bluePaletteColorLookupTableData:t.bluePaletteColorLookupTableData,pixelData:void 0}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getTransferSyntaxForContentType=l;var a=o(n(18)),r=o(n(33)),i=o(n(17));function o(e){return e&&e.__esModule?e:{default:e}}function l(e){var t="1.2.840.10008.1.2";return e&&e.split(";").forEach(function(e){var n=e.split("=");2===n.length&&"transfer-syntax"===n[0].trim()&&(t=n[1].trim()||t)}),t}t.default=function(e,t){var n=(new Date).getTime(),o=e.substring(7);return{promise:new Promise(function(s,u){if(void 0===a.default.get(e)){var d=new Error("no metadata for imageId "+e);return u(d)}(0,r.default)(o,e,'multipart/related; type="application/octet-stream"').then(function(a){var r=l(a.contentType),o=a.imageFrame.pixelData;(0,i.default)(e,o,r,t).then(function(e){var t=(new Date).getTime();e.loadTimeInMS=t-n,s(e)},u)},u)}),cancelFn:void 0}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=n(4),i=n(34),o=(a=i)&&a.__esModule?a:{default:a};t.default=function(e,t){var n={accept:arguments.length>2&&void 0!==arguments[2]?arguments[2]:"application/octet-stream"};return new Promise(function(a,i){(0,r.xhrRequest)(e,t,n).then(function(e){var t=new Uint8Array(e),n=(0,o.default)(t,"\r\n\r\n");-1===n&&i(new Error("invalid response - no multipart mime header"));var r=function(e,t,n){t=t||0,n=n||e.length-t;for(var a="",r=t;r<t+n;r++)a+=String.fromCharCode(e[r]);return a}(t,0,n).split("\r\n"),l=function(e){for(var t=0;t<e.length;t++)if("--"===e[t].substr(0,2))return e[t]}(r);l||i(new Error("invalid response - no boundary marker"));var s=n+4,u=(0,o.default)(t,l,s);-1===u&&i(new Error("invalid response - terminating boundary not found"));var d=u-s-2;a({contentType:function(e){for(var t=0;t<e.length;t++)if("Content-Type:"===e[t].substr(0,13))return e[t].substr(13).trim()}(r),imageFrame:{pixelData:new Uint8Array(e,s,d)}})})})}},function(e,t,n){"use strict";function a(e,t,n){if(n+e.length>t.length)return!1;for(var a=n,r=0;r<e.length;r++)if(e[r]!==t[a++])return!1;return!0}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){n=n||0;for(var r=function(e){for(var t=new Uint8Array(e.length),n=0,a=e.length;n<a;n++)t[n]=e.charCodeAt(n);return t}(t),i=n;i<e.length;i++)if(r[0]===e[i]&&a(r,e,i))return i;return-1}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(e&&e.Value&&!(t&&e.Value.length<t)){for(var n=[],a=0;a<e.Value.length;a++)n.push(parseFloat(e.Value[a]));return n}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=n(7),i=(a=r)&&a.__esModule?a:{default:a};t.default=function(e,t){var n=(0,i.default)(e,t);if(void 0!==n)return parseFloat(n)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(55);Object.defineProperty(t,"getNumberString",{enumerable:!0,get:function(){return s(a).default}});var r=n(36);Object.defineProperty(t,"getNumberValue",{enumerable:!0,get:function(){return s(r).default}});var i=n(35);Object.defineProperty(t,"getNumberValues",{enumerable:!0,get:function(){return s(i).default}});var o=n(7);Object.defineProperty(t,"getValue",{enumerable:!0,get:function(){return s(o).default}});var l=n(54);function s(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"metaDataProvider",{enumerable:!0,get:function(){return s(l).default}})},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(37),r=u(n(34)),i=u(n(33)),o=u(n(18)),l=u(n(32)),s=u(n(52));function u(e){return e&&e.__esModule?e:{default:e}}var d={getNumberString:a.getNumberString,getNumberValue:a.getNumberValue,getNumberValues:a.getNumberValues,getValue:a.getValue,metaDataProvider:a.metaDataProvider};t.default={metaData:d,findIndexOfString:r.default,getPixelData:i.default,loadImage:l.default,metaDataManager:o.default,register:s.default}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){var a=[],r=e.string(t);if(r){var i=r.split("\\");if(!(n&&i.length<n)){for(var o=0;o<i.length;o++)a.push(parseFloat(i[o]));return a}}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=e.string("x00080016");if("1.2.840.10008.5.1.4.1.1.2"===t||"1.2.840.10008.5.1.4.1.1.2.1"===t)return 1;var n=e.floatString("x00281052"),a=e.floatString("x00281053");return void 0!==n&&void 0!==a?function(e){var t=e.uint16("x00280103"),n=e.uint16("x00280101");return 0===t?0:-1<<n-1}(e)*a+n<0?1:0:e.elements.x00283000&&e.elements.x00283000.length>0?0:e.uint16("x00280103")}},function(e,t,n){"use strict";function a(e,t){var n=t.uint16("x00283002",0);0===n&&(n=65535);for(var a={id:"1",firstValueMapped:0===e?t.uint16("x00283002",1):t.int16("x00283002",1),numBitsPerEntry:t.uint16("x00283002",2),lut:[]},r=0;r<n;r++)a.lut[r]=0===e?t.uint16("x00283006",r):t.int16("x00283006",r);return a}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(t&&t.items.length){for(var n=[],r=0;r<t.items.length;r++){var i=a(e,t.items[r].dataSet);i&&n.push(i)}return n}}},function(e,t,n){"use strict";function a(e,t){if(e.elements[t]&&6===e.elements[t].length)return[e.uint16(t,0),e.uint16(t,1),e.uint16(t,2)]}function r(e,t,n){for(var a=[],r=e.elements[t],i=0;i<n[0];i++)16===n[2]?a[i]=e.uint16(t,i):a[i]=e.byteArray[i+r.dataOffset];return a}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t={samplesPerPixel:e.uint16("x00280002"),photometricInterpretation:e.string("x00280004"),rows:e.uint16("x00280010"),columns:e.uint16("x00280011"),bitsAllocated:e.uint16("x00280100"),bitsStored:e.uint16("x00280101"),highBit:e.uint16("x00280102"),pixelRepresentation:e.uint16("x00280103"),planarConfiguration:e.uint16("x00280006"),pixelAspectRatio:e.string("x00280034")};return function(e,t){0===e.uint16("x00280103")?(t.smallestPixelValue=e.uint16("x00280106"),t.largestPixelValue=e.uint16("x00280107")):(t.smallestPixelValue=e.int16("x00280106"),t.largestPixelValue=e.int16("x00280107"))}(e,t),"PALETTE COLOR"===t.photometricInterpretation&&e.elements.x00281101&&function(e,t){t.redPaletteColorLookupTableDescriptor=a(e,"x00281101"),t.greenPaletteColorLookupTableDescriptor=a(e,"x00281102"),t.bluePaletteColorLookupTableDescriptor=a(e,"x00281103"),0===t.redPaletteColorLookupTableDescriptor[0]&&(t.redPaletteColorLookupTableDescriptor[0]=65536,t.greenPaletteColorLookupTableDescriptor[0]=65536,t.bluePaletteColorLookupTableDescriptor[0]=65536);var n=t.redPaletteColorLookupTableDescriptor[0],i=e.elements.x00281201.length===n?8:16;t.redPaletteColorLookupTableDescriptor[2]!==i&&(t.redPaletteColorLookupTableDescriptor[2]=i,t.greenPaletteColorLookupTableDescriptor[2]=i,t.bluePaletteColorLookupTableDescriptor[2]=i),t.redPaletteColorLookupTableData=r(e,"x00281201",t.redPaletteColorLookupTableDescriptor),t.greenPaletteColorLookupTableData=r(e,"x00281202",t.greenPaletteColorLookupTableDescriptor),t.bluePaletteColorLookupTableData=r(e,"x00281203",t.bluePaletteColorLookupTableDescriptor)}(e,t),t}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(42);Object.defineProperty(t,"getImagePixelModule",{enumerable:!0,get:function(){return s(a).default}});var r=n(41);Object.defineProperty(t,"getLUTs",{enumerable:!0,get:function(){return s(r).default}});var i=n(40);Object.defineProperty(t,"getModalityLUTOutputPixelRepresentation",{enumerable:!0,get:function(){return s(i).default}});var o=n(39);Object.defineProperty(t,"getNumberValues",{enumerable:!0,get:function(){return s(o).default}});var l=n(57);function s(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"metaDataProvider",{enumerable:!0,get:function(){return s(l).default}})},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(43),r=h(n(9)),i=h(n(24)),o=h(n(23)),l=h(n(22)),s=h(n(20)),u=n(19),d=h(n(5)),c=h(n(21)),f=h(n(50));function h(e){return e&&e.__esModule?e:{default:e}}var m={getImagePixelModule:a.getImagePixelModule,getLUTs:a.getLUTs,getModalityLUTOutputPixelRepresentation:a.getModalityLUTOutputPixelRepresentation,getNumberValues:a.getNumberValues,metaDataProvider:a.metaDataProvider};t.default={metaData:m,dataSetCacheManager:r.default,fileManager:i.default,getEncapsulatedImageFrame:o.default,getUncompressedImageFrame:l.default,loadFileRequest:s.default,loadImageFromPromise:u.loadImageFromPromise,getLoaderForScheme:u.getLoaderForScheme,loadImage:u.loadImage,parseImageId:d.default,unpackBinaryFrame:c.default,register:f.default}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(62);Object.defineProperty(t,"convertRGBColorByPixel",{enumerable:!0,get:function(){return s(a).default}});var r=n(61);Object.defineProperty(t,"convertRGBColorByPlane",{enumerable:!0,get:function(){return s(r).default}});var i=n(60);Object.defineProperty(t,"convertYBRFullByPixel",{enumerable:!0,get:function(){return s(i).default}});var o=n(59);Object.defineProperty(t,"convertYBRFullByPlane",{enumerable:!0,get:function(){return s(o).default}});var l=n(58);function s(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"convertPALETTECOLOR",{enumerable:!0,get:function(){return s(l).default}})},,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(4);t.default=function(e){(0,a.setOptions)(e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){e.registerImageLoader("dicomweb",a.loadImage),e.registerImageLoader("wadouri",a.loadImage),e.registerImageLoader("dicomfile",a.loadImage),e.metaData.addProvider(r.metaDataProvider)};var a=n(19),r=n(43)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=i(n(23)),r=i(n(22));function i(e){return e&&e.__esModule?e:{default:e}}t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=e.elements.x7fe00010||e.elements.x7fe00008;return n?n.encapsulatedPixelData?(0,a.default)(e,t):(0,r.default)(e,t):null}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){e.registerImageLoader("wadors",i.default),e.metaData.addProvider(o.metaDataProvider)};var a,r=n(32),i=(a=r)&&a.__esModule?a:{default:a},o=n(37)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=n(0),i=(a=r)&&a.__esModule?a:{default:a},o=n(6);t.default=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=i.default.cornerstone,l=(0,o.getOptions)();return new Promise(function(i,o){var s=new XMLHttpRequest;s.open("get",e,!0),s.responseType="arraybuffer",l.beforeSend(s,t),Object.keys(n).forEach(function(e){s.setRequestHeader(e,n[e])}),a.deferred={resolve:i,reject:o},a.url=e,a.imageId=t,s.onloadstart=function(n){l.onloadstart&&l.onloadstart(n,a);var i={url:e,imageId:t};r.triggerEvent(r.events,"cornerstoneimageloadstart",i)},s.onloadend=function(n){l.onloadend&&l.onloadend(n,a);var i={url:e,imageId:t};r.triggerEvent(r.events,"cornerstoneimageloadend",i)},s.onreadystatechange=function(e){l.onreadystatechange?l.onreadystatechange(e,a):4===s.readyState&&(200===s.status?i(s.response,s):o(s))},s.onprogress=function(n){var i=n.loaded,o=void 0,s=void 0;n.lengthComputable&&(o=n.total,s=Math.round(i/o*100)),l.onprogress&&l.onprogress(n,a);var u={url:e,imageId:t,loaded:i,total:o,percentComplete:s};r.triggerEvent(r.events,"cornerstoneimageloadprogress",u)},s.send()})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=s(n(0)),r=s(n(35)),i=s(n(7)),o=s(n(36)),l=s(n(18));function s(e){return e&&e.__esModule?e:{default:e}}t.default=function(e,t){var n=a.default.dicomParser,s=l.default.get(t);if(s){if("generalSeriesModule"===e)return{modality:(0,i.default)(s["00080060"]),seriesInstanceUID:(0,i.default)(s["0020000e"]),seriesNumber:(0,o.default)(s["00200011"]),studyInstanceUID:(0,i.default)(s["0020000d"]),seriesDate:n.parseDA((0,i.default)(s["00080021"])),seriesTime:n.parseTM((0,i.default)(s["00080031"],0,""))};if("patientStudyModule"===e)return{patientAge:(0,o.default)(s["00101010"]),patientSize:(0,o.default)(s["00101020"]),patientWeight:(0,o.default)(s["00101030"])};if("imagePlaneModule"===e){var u=(0,r.default)(s["00200037"],6),d=(0,r.default)(s["00200032"],3),c=(0,r.default)(s["00280030"],2),f=1,h=1;c&&(h=c[0],f=c[1]);var m=null,v=null;return u&&(m=[parseFloat(u[0]),parseFloat(u[1]),parseFloat(u[2])],v=[parseFloat(u[3]),parseFloat(u[4]),parseFloat(u[5])]),{frameOfReferenceUID:(0,i.default)(s["00200052"]),rows:(0,o.default)(s["00280010"]),columns:(0,o.default)(s["00280011"]),imageOrientationPatient:u,rowCosines:m,columnCosines:v,imagePositionPatient:d,sliceThickness:(0,o.default)(s["00180050"]),sliceLocation:(0,o.default)(s["00201041"]),pixelSpacing:c,rowPixelSpacing:h,columnPixelSpacing:f}}if("imagePixelModule"===e)return{samplesPerPixel:(0,o.default)(s["00280002"]),photometricInterpretation:(0,i.default)(s["00280004"]),rows:(0,o.default)(s["00280010"]),columns:(0,o.default)(s["00280011"]),bitsAllocated:(0,o.default)(s["00280100"]),bitsStored:(0,o.default)(s["00280101"]),highBit:(0,i.default)(s["00280102"]),pixelRepresentation:(0,o.default)(s["00280103"]),planarConfiguration:(0,o.default)(s["00280006"]),pixelAspectRatio:(0,i.default)(s["00280034"]),smallestPixelValue:(0,o.default)(s["00280106"]),largestPixelValue:(0,o.default)(s["00280107"]),redPaletteColorLookupTableDescriptor:(0,r.default)(s["00281101"]),greenPaletteColorLookupTableDescriptor:(0,r.default)(s["00281102"]),bluePaletteColorLookupTableDescriptor:(0,r.default)(s["00281103"]),redPaletteColorLookupTableData:(0,r.default)(s["00281201"]),greenPaletteColorLookupTableData:(0,r.default)(s["00281202"]),bluePaletteColorLookupTableData:(0,r.default)(s["00281203"])};if("voiLutModule"===e)return{windowCenter:(0,r.default)(s["00281050"],1),windowWidth:(0,r.default)(s["00281051"],1)};if("modalityLutModule"===e)return{rescaleIntercept:(0,o.default)(s["00281052"]),rescaleSlope:(0,o.default)(s["00281053"]),rescaleType:(0,i.default)(s["00281054"])};if("sopCommonModule"===e)return{sopClassUID:(0,i.default)(s["00080016"]),sopInstanceUID:(0,i.default)(s["00080018"])};if("petIsotopeModule"===e){var g=(0,i.default)(s["00540016"]);if(void 0===g)return;return{radiopharmaceuticalInfo:{radiopharmaceuticalStartTime:n.parseTM((0,i.default)(g["00181072"],0,"")),radionuclideTotalDose:(0,o.default)(g["00181074"]),radionuclideHalfLife:(0,o.default)(g["00181075"])}}}}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=n(7),i=(a=r)&&a.__esModule?a:{default:a};t.default=function(e,t,n){var a=(0,i.default)(e,t,n);if(void 0!==a)return parseFloat(a)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=i(n(38)),r=i(n(44));function i(e){return e&&e.__esModule?e:{default:e}}t.default=function(e){a.default.register(e),r.default.register(e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=d(n(0)),r=d(n(39)),i=d(n(5)),o=d(n(9)),l=d(n(42)),s=d(n(41)),u=d(n(40));function d(e){return e&&e.__esModule?e:{default:e}}t.default=function(e,t){var n=a.default.dicomParser,d=(0,i.default)(t),c=o.default.get(d.url);if(c){if("generalSeriesModule"===e)return{modality:c.string("x00080060"),seriesInstanceUID:c.string("x0020000e"),seriesNumber:c.intString("x00200011"),studyInstanceUID:c.string("x0020000d"),seriesDate:n.parseDA(c.string("x00080021")),seriesTime:n.parseTM(c.string("x00080031")||"")};if("patientStudyModule"===e)return{patientAge:c.intString("x00101010"),patientSize:c.floatString("x00101020"),patientWeight:c.floatString("x00101030")};if("imagePlaneModule"===e){var f=(0,r.default)(c,"x00200037",6),h=(0,r.default)(c,"x00200032",3),m=(0,r.default)(c,"x00280030",2),v=1,g=1;m&&(g=m[0],v=m[1]);var p=null,b=null;return f&&(p=[parseFloat(f[0]),parseFloat(f[1]),parseFloat(f[2])],b=[parseFloat(f[3]),parseFloat(f[4]),parseFloat(f[5])]),{frameOfReferenceUID:c.string("x00200052"),rows:c.uint16("x00280010"),columns:c.uint16("x00280011"),imageOrientationPatient:f,rowCosines:p,columnCosines:b,imagePositionPatient:h,sliceThickness:c.floatString("x00180050"),sliceLocation:c.floatString("x00201041"),pixelSpacing:m,rowPixelSpacing:g,columnPixelSpacing:v}}if("imagePixelModule"===e)return(0,l.default)(c);if("modalityLutModule"===e)return{rescaleIntercept:c.floatString("x00281052"),rescaleSlope:c.floatString("x00281053"),rescaleType:c.string("x00281054"),modalityLUTSequence:(0,s.default)(c.uint16("x00280103"),c.elements.x00283000)};if("voiLutModule"===e){var y=(0,u.default)(c);return{windowCenter:(0,r.default)(c,"x00281050",1),windowWidth:(0,r.default)(c,"x00281051",1),voiLUTSequence:(0,s.default)(y,c.elements.x00283010)}}if("sopCommonModule"===e)return{sopClassUID:c.string("x00080016"),sopInstanceUID:c.string("x00080018")};if("petIsotopeModule"===e){var w=c.elements.x00540016;if(void 0===w)return;var _=w.items[0].dataSet;return{radiopharmaceuticalInfo:{radiopharmaceuticalStartTime:n.parseTM(_.string("x00181072")||""),radionuclideTotalDose:_.floatString("x00181074"),radionuclideHalfLife:_.floatString("x00181075")}}}}}},function(e,t,n){"use strict";function a(e,t){for(var n=e.length,a=new Uint8ClampedArray(n),r=0;r<n;++r)a[r]=e[r]>>t;return a}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){for(var n=e.columns*e.rows,r=e.pixelData,i=e.redPaletteColorLookupTableData,o=e.greenPaletteColorLookupTableData,l=e.bluePaletteColorLookupTableData,s=e.redPaletteColorLookupTableData.length,u=0,d=0,c=e.redPaletteColorLookupTableDescriptor[1],f=8===e.redPaletteColorLookupTableDescriptor[2]?0:8,h=a(i,f),m=a(o,f),v=a(l,f),g=0;g<n;++g){var p=r[u++];p<c?p=0:p>c+s-1?p=s-1:p-=c,t[d++]=h[p],t[d++]=m[p],t[d++]=v[p],t[d++]=255}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(void 0===e)throw new Error("decodeRGB: ybrBuffer must not be undefined");if(e.length%3!=0)throw new Error("decodeRGB: ybrBuffer length must be divisble by 3");for(var n=e.length/3,a=0,r=0,i=n,o=2*n,l=0;l<n;l++){var s=e[r++],u=e[i++],d=e[o++];t[a++]=s+1.402*(d-128),t[a++]=s-.34414*(u-128)-.71414*(d-128),t[a++]=s+1.772*(u-128),t[a++]=255}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(void 0===e)throw new Error("decodeRGB: ybrBuffer must not be undefined");if(e.length%3!=0)throw new Error("decodeRGB: ybrBuffer length must be divisble by 3");for(var n=e.length/3,a=0,r=0,i=0;i<n;i++){var o=e[a++],l=e[a++],s=e[a++];t[r++]=o+1.402*(s-128),t[r++]=o-.34414*(l-128)-.71414*(s-128),t[r++]=o+1.772*(l-128),t[r++]=255}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(void 0===e)throw new Error("decodeRGB: rgbBuffer must not be undefined");if(e.length%3!=0)throw new Error("decodeRGB: rgbBuffer length must be divisible by 3");for(var n=e.length/3,a=0,r=0,i=n,o=2*n,l=0;l<n;l++)t[a++]=e[r++],t[a++]=e[i++],t[a++]=e[o++],t[a++]=255}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(void 0===e)throw new Error("decodeRGB: rgbBuffer must not be undefined");if(e.length%3!=0)throw new Error("decodeRGB: rgbBuffer length must be divisible by 3");for(var n=e.length/3,a=0,r=0,i=0;i<n;i++)t[r++]=e[a++],t[r++]=e[a++],t[r++]=e[a++],t[r++]=255}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(45);Object.keys(a).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return a[e]}})});var r=n(44);Object.defineProperty(t,"wadouri",{enumerable:!0,get:function(){return y(r).default}});var i=n(38);Object.defineProperty(t,"wadors",{enumerable:!0,get:function(){return y(i).default}});var o=n(49);Object.defineProperty(t,"configure",{enumerable:!0,get:function(){return y(o).default}});var l=n(26);Object.defineProperty(t,"convertColorSpace",{enumerable:!0,get:function(){return y(l).default}});var s=n(17);Object.defineProperty(t,"createImage",{enumerable:!0,get:function(){return y(s).default}});var u=n(30);Object.defineProperty(t,"decodeImageFrame",{enumerable:!0,get:function(){return y(u).default}});var d=n(28);Object.defineProperty(t,"decodeJPEGBaseline8BitColor",{enumerable:!0,get:function(){return y(d).default}});var c=n(31);Object.defineProperty(t,"getImageFrame",{enumerable:!0,get:function(){return y(c).default}});var f=n(1);Object.defineProperty(t,"getMinMax",{enumerable:!0,get:function(){return y(f).default}});var h=n(27);Object.defineProperty(t,"isColorImage",{enumerable:!0,get:function(){return y(h).default}});var m=n(25);Object.defineProperty(t,"isJPEGBaseline8BitColor",{enumerable:!0,get:function(){return y(m).default}});var v=n(29);Object.defineProperty(t,"webWorkerManager",{enumerable:!0,get:function(){return y(v).default}});var g=n(8);Object.defineProperty(t,"version",{enumerable:!0,get:function(){return y(g).default}});var p=n(4);Object.defineProperty(t,"internal",{enumerable:!0,get:function(){return p.internal}});var b=n(0);function y(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"external",{enumerable:!0,get:function(){return y(b).default}})}])},function(e,t,n){
/*! cornerstone-tools - 2.3.9 - 2018-07-24 | (c) 2017 Chris Hafey | https://github.com/cornerstonejs/cornerstoneTools */
window,e.exports=function(e){var t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:a})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=46)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=window.cornerstone,r=window.cornerstoneMath,i=window.Hammer;t.default={set cornerstone(e){a=e},get cornerstone(){return a},set cornerstoneMath(e){r=e},get cornerstoneMath(){return r},set Hammer(e){i=e},get Hammer(){return i}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={IMAGE_RENDERED:"cornerstoneimagerendered",NEW_IMAGE:"cornerstonenewimage",IMAGE_CACHE_PROMISE_REMOVED:"cornerstoneimagecachepromiseremoved",ELEMENT_DISABLED:"cornerstoneelementdisabled",MOUSE_DOWN:"cornerstonetoolsmousedown",MOUSE_UP:"cornerstonetoolsmouseup",MOUSE_DOWN_ACTIVATE:"cornerstonetoolsmousedownactivate",MOUSE_DRAG:"cornerstonetoolsmousedrag",MOUSE_MOVE:"cornerstonetoolsmousemove",MOUSE_CLICK:"cornerstonetoolsmouseclick",MOUSE_DOUBLE_CLICK:"cornerstonetoolsmousedoubleclick",MOUSE_WHEEL:"cornerstonetoolsmousewheel",TOUCH_START:"cornerstonetoolstouchstart",TOUCH_START_ACTIVE:"cornerstonetoolstouchstartactive",TOUCH_END:"cornerstonetoolstouchend",TOUCH_DRAG:"cornerstonetoolstouchdrag",TOUCH_DRAG_END:"cornerstonetoolstouchdragend",TOUCH_PINCH:"cornerstonetoolstouchpinch",TOUCH_ROTATE:"cornerstonetoolstouchrotate",TOUCH_PRESS:"cornerstonetoolstouchpress",TAP:"cornerstonetoolstap",DOUBLE_TAP:"cornerstonetoolsdoubletap",MULTI_TOUCH_START:"cornerstonetoolsmultitouchstart",MULTI_TOUCH_START_ACTIVE:"cornerstonetoolsmultitouchstartactive",MULTI_TOUCH_DRAG:"cornerstonetoolsmultitouchdrag",KEY_DOWN:"cornerstonetoolskeydown",KEY_UP:"cornerstonetoolskeyup",KEY_PRESS:"cornerstonetoolskeypress",MEASUREMENT_ADDED:"cornerstonetoolsmeasurementadded",MEASUREMENT_MODIFIED:"cornerstonetoolsmeasurementmodified",MEASUREMENT_REMOVED:"cornerstonemeasurementremoved",TOOL_DEACTIVATED:"cornerstonetoolstooldeactivated",CLIP_STOPPED:"cornerstonetoolsclipstopped",STACK_SCROLL:"cornerstonestackscroll",LINE_SAMPLE_UPDATED:"cornerstonelinesampleupdated"}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getElementToolStateManager=t.setElementToolStateManager=t.clearToolState=t.removeToolState=t.getToolState=t.addToolState=void 0;var a=l(n(1)),r=l(n(0)),i=n(26),o=l(n(6));function l(e){return e&&e.__esModule?e:{default:e}}function s(e){var t=r.default.cornerstone.getEnabledElement(e);return void 0===t.toolStateManager&&(t.toolStateManager=i.globalImageIdSpecificToolStateManager),t.toolStateManager}t.addToolState=function(e,t,n){s(e).add(e,t,n);var r=a.default.MEASUREMENT_ADDED,i={toolType:t,element:e,measurementData:n};(0,o.default)(e,r,i)},t.getToolState=function(e,t){return s(e).get(e,t)},t.removeToolState=function(e,t,n){for(var r=s(e).get(e,t),i=-1,l=0;l<r.data.length;l++)r.data[l]===n&&(i=l);if(-1!==i){r.data.splice(i,1);var u=a.default.MEASUREMENT_REMOVED,d={toolType:t,element:e,measurementData:n};(0,o.default)(e,u,d)}},t.clearToolState=function(e,t){var n=s(e).get(e,t);void 0!==n&&(n.data=[])},t.setElementToolStateManager=function(e,t){r.default.cornerstone.getEnabledElement(e).toolStateManager=t},t.getElementToolStateManager=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getNewContext=function(e){var t=e.getContext("2d");return t.setTransform(1,0,0,1,0,0),t},t.draw=function(e,t){e.save(),t(e),e.restore()},t.path=l,t.setShadow=function(e,t){t.shadow&&(e.shadowColor=t.shadowColor||"#000000",e.shadowOffsetX=t.shadowOffsetX||1,e.shadowOffsetY=t.shadowOffsetY||1)},t.drawLine=function(e,t,n,a,r){var o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"pixel";l(e,r,function(e){if("pixel"===o){var r=i.default.cornerstone;n=r.pixelToCanvas(t,n),a=r.pixelToCanvas(t,a)}e.moveTo(n.x,n.y),e.lineTo(a.x,a.y)})},t.drawLines=function(e,t,n,a){var r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"pixel";l(e,a,function(e){n.forEach(function(n){var a=n.start,o=n.end;if("pixel"===r){var l=i.default.cornerstone;a=l.pixelToCanvas(t,a),o=l.pixelToCanvas(t,o)}e.moveTo(a.x,a.y),e.lineTo(o.x,o.y)})})},t.drawJoinedLines=function(e,t,n,a,r){var o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"pixel";l(e,r,function(e){if("pixel"===o){var r=i.default.cornerstone;n=r.pixelToCanvas(t,n),a=a.map(function(e){return r.pixelToCanvas(t,e)})}e.moveTo(n.x,n.y),a.forEach(function(t){var n=t.x,a=t.y;e.lineTo(n,a)})})},t.drawCircle=function(e,t,n,a,r){"pixel"===(arguments.length>5&&void 0!==arguments[5]?arguments[5]:"pixel")&&(n=i.default.cornerstone.pixelToCanvas(t,n)),l(e,r,function(e){e.arc(n.x,n.y,a,0,2*Math.PI)})},t.drawEllipse=function(e,t,n,a,r){"pixel"===(arguments.length>5&&void 0!==arguments[5]?arguments[5]:"pixel")&&(n=i.default.cornerstone.pixelToCanvas(t,n),a=i.default.cornerstone.pixelToCanvas(t,a));var o=Math.min(n.x,a.x),s=Math.min(n.y,a.y),u=Math.abs(n.x-a.x),d=Math.abs(n.y-a.y),c=u/2*.5522848,f=d/2*.5522848,h=o+u,m=s+d,v=o+u/2,g=s+d/2;l(e,r,function(e){e.moveTo(o,g),e.bezierCurveTo(o,g-f,v-c,s,v,s),e.bezierCurveTo(v+c,s,h,g-f,h,g),e.bezierCurveTo(h,g+f,v+c,m,v,m),e.bezierCurveTo(v-c,m,o,g+f,o,g),e.closePath()})},t.drawRect=function(e,t,n,a,r){if("pixel"===(arguments.length>5&&void 0!==arguments[5]?arguments[5]:"pixel")){var o=i.default.cornerstone;n=o.pixelToCanvas(t,n),a=o.pixelToCanvas(t,a)}var s=Math.min(n.x,a.x),u=Math.min(n.y,a.y),d=Math.abs(n.x-a.x),c=Math.abs(n.y-a.y);l(e,r,function(e){e.rect(s,u,d,c)})},t.fillOutsideRect=function(e,t,n,a,r){if("pixel"===(arguments.length>5&&void 0!==arguments[5]?arguments[5]:"pixel")){var o=i.default.cornerstone;n=o.pixelToCanvas(t,n),a=o.pixelToCanvas(t,a)}var s=Math.min(n.x,a.x),u=Math.min(n.y,a.y),d=Math.abs(n.x-a.x),c=Math.abs(n.y-a.y);l(e,r,function(e){e.rect(0,0,e.canvas.clientWidth,e.canvas.clientHeight),e.rect(s+d,u,-d,c)})},t.fillBox=function(e,t,n){e.fillStyle=n,e.fillRect(t.left,t.top,t.width,t.height)},t.fillTextLines=function(e,t,n,a,r){var i=o.textStyle.getFontSize();e.font=o.textStyle.getFont(),e.textBaseline="top",e.fillStyle=a,n.forEach(function(n,a){e.fillText(n,t.left+r,t.top+r+a*(i+r))})};var a,r=n(0),i=(a=r)&&a.__esModule?a:{default:a},o=n(46);function l(e,t,n){var a=t.color,r=t.lineWidth,i=t.fillStyle,l=t.lineDash;e.beginPath(),e.strokeStyle=a||e.strokeStyle,e.lineWidth=r||void 0===r&&o.toolStyle.getToolWidth()||e.lineWidth,l&&e.setLineDash(l),n(e),i&&(e.fillStyle=i,e.fill()),e.stroke(),l&&e.setLineDash([])}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a={};t.getToolOptions=function(e,t){if(!a[e])return{};var n=a[e].find(function(e){return e.element===t});return n?n.options:{}},t.setToolOptions=function(e,t,n){if(a[e]){var r=a[e].findIndex(function(e){return e.element===t});if(-1===r)a[e].push({element:t,options:n});else{var i=a[e][r].options||{};a[e][r].options=Object.assign(i,n)}}else a[e]=[{element:t,options:n}]},t.clearToolOptions=function(e,t){var n=a[e];n&&(a[e]=n.filter(function(e){return e.element!==t}))},t.clearToolOptionsByToolType=function(e){delete a[e]},t.clearToolOptionsByElement=function(e){for(var t in a)a[t]=a[t].filter(function(t){return t.element!==e})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return 0!=(t&1<<e-1)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=void 0;return"function"==typeof window.CustomEvent?a=new CustomEvent(t,{detail:n,cancelable:!0}):(a=document.createEvent("CustomEvent")).initCustomEvent(t,!0,!0,n),e.dispatchEvent(a)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a="white",r="greenyellow",i="transparent",o={setFillColor:function(e){i=e},getFillColor:function(){return i},setToolColor:function(e){a=e},getToolColor:function(){return a},setActiveColor:function(e){r=e},getActiveColor:function(){return r},getColorIfActive:function(e){return e.color?e.color:e.active?r:a}};t.default=o},function(e,t,n){"use strict";function a(e,t,n){return Math.min(Math.max(t,e),n)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=a,t.clipToBox=function(e,t){e.x=a(e.x,0,t.width),e.y=a(e.y,0,t.height)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,a,r){Object.keys(n).forEach(function(s){var u=n[s];if(!0!==u.drawnIndependently&&(!r||!0!==r.drawHandlesIfActive||u.active)){var d=function(e){return e&&e.handleRadius?e.handleRadius:l}(r),c={color:a,lineWidth:u.active?i.default.getActiveWidth():i.default.getToolWidth(),fillStyle:r&&r.fill};(0,o.drawCircle)(e,t.element,u,d,c)}})};var a,r=n(15),i=(a=r)&&a.__esModule?a:{default:a},o=n(3),l=6},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t={},n=e.toolType;function g(t){var i=t.detail,o=i.element,l=(0,v.getToolOptions)(n,o);(0,f.default)(i.which,l.mouseButtonMask)&&(e.addNewMeasurement?e.addNewMeasurement(i):function(t){var i=r.default.cornerstone,o=t.element,l=e.createNewMeasurement(t);if(l){(0,h.addToolState)(t.element,n,l),o.removeEventListener(a.default.MOUSE_MOVE,y),o.removeEventListener(a.default.MOUSE_DOWN,w),o.removeEventListener(a.default.MOUSE_DOWN_ACTIVATE,_),E&&o.removeEventListener(a.default.MOUSE_DOUBLE_CLICK,E),i.updateImage(o);var d=void 0;d=1===Object.keys(l.handles).length?s.default:u.default;var f=void 0;f=!(!e.options||void 0===e.options.preventHandleOutsideImage)&&e.options.preventHandleOutsideImage,d(t,n,l,l.handles.end,function(){l.active=!1,l.invalidated=!0,(0,c.default)(t,l.handles)&&(0,h.removeToolState)(o,n,l),o.addEventListener(a.default.MOUSE_MOVE,y),o.addEventListener(a.default.MOUSE_DOWN,w),o.addEventListener(a.default.MOUSE_DOWN_ACTIVATE,_),E&&o.addEventListener(a.default.MOUSE_DOUBLE_CLICK,E),i.updateImage(o)},f)}}(i),t.preventDefault(),t.stopPropagation())}function p(t){var a=t.detail;i.default.setCoords(a);var o=(0,h.getToolState)(a.element,n);if(o){for(var s=!1,u=0;u<o.data.length;u++){var d=a.currentPoints.canvas,c=o.data[u];!0===(0,l.default)(a.element,c.handles,d)&&(s=!0),(e.pointNearTool(a.element,c,d)&&!c.active||!e.pointNearTool(a.element,c,d)&&c.active)&&(c.active=!c.active,s=!0)}!0===s&&r.default.cornerstone.updateImage(a.element)}}function b(t){var i=t.detail,l=void 0,u=i.element,m=(0,v.getToolOptions)(n,u);if((0,f.default)(i.which,m.mouseButtonMask)){var g=i.startPoints.canvas,p=(0,h.getToolState)(t.currentTarget,n);if(p){var b=void 0,w=void 0;for(w=!(!e.options||void 0===e.options.preventHandleOutsideImage)&&e.options.preventHandleOutsideImage,b=0;b<p.data.length;b++){l=p.data[b];var _=(0,o.default)(u,l.handles,g,6);if(_)return u.removeEventListener(a.default.MOUSE_MOVE,y),l.active=!0,(0,s.default)(i,n,l,_,x,w),t.stopImmediatePropagation(),t.stopPropagation(),void t.preventDefault()}if(e.pointNearTool){var E=e.options||{deleteIfHandleOutsideImage:!0,preventHandleOutsideImage:!1};for(b=0;b<p.data.length;b++)if((l=p.data[b]).active=!1,e.pointNearTool(u,l,g))return l.active=!0,u.removeEventListener(a.default.MOUSE_MOVE,y),(0,d.default)(t,l,p,n,E,x),t.stopImmediatePropagation(),t.stopPropagation(),void t.preventDefault()}}}function x(){l.invalidated=!0,(0,c.default)(i,l.handles)&&(0,h.removeToolState)(u,n,l),r.default.cornerstone.updateImage(u),u.addEventListener(a.default.MOUSE_MOVE,y)}}var y=e.mouseMoveCallback||p,w=e.mouseDownCallback||b,_=e.mouseDownActivateCallback||g,E=e.mouseDoubleClickCallback,x={enable:function(t){t.removeEventListener(a.default.IMAGE_RENDERED,e.onImageRendered),t.removeEventListener(a.default.MOUSE_MOVE,y),t.removeEventListener(a.default.MOUSE_DOWN,w),t.removeEventListener(a.default.MOUSE_DOWN_ACTIVATE,_),E&&t.removeEventListener(a.default.MOUSE_DOUBLE_CLICK,E),t.addEventListener(a.default.IMAGE_RENDERED,e.onImageRendered),r.default.cornerstone.updateImage(t)},disable:function(t){t.removeEventListener(a.default.IMAGE_RENDERED,e.onImageRendered),t.removeEventListener(a.default.MOUSE_MOVE,y),t.removeEventListener(a.default.MOUSE_DOWN,w),t.removeEventListener(a.default.MOUSE_DOWN_ACTIVATE,_),E&&t.removeEventListener(a.default.MOUSE_DOUBLE_CLICK,E),r.default.cornerstone.updateImage(t)},activate:function(t,i){(0,v.setToolOptions)(n,t,{mouseButtonMask:i}),t.removeEventListener(a.default.IMAGE_RENDERED,e.onImageRendered),t.removeEventListener(a.default.MOUSE_MOVE,y),t.removeEventListener(a.default.MOUSE_DOWN,w),t.removeEventListener(a.default.MOUSE_DOWN_ACTIVATE,_),t.addEventListener(a.default.IMAGE_RENDERED,e.onImageRendered),t.addEventListener(a.default.MOUSE_MOVE,y),t.addEventListener(a.default.MOUSE_DOWN,w),t.addEventListener(a.default.MOUSE_DOWN_ACTIVATE,_),E&&(t.removeEventListener(a.default.MOUSE_DOUBLE_CLICK,E),t.addEventListener(a.default.MOUSE_DOUBLE_CLICK,E)),r.default.cornerstone.updateImage(t)},deactivate:function(t,i){(0,v.setToolOptions)(n,t,{mouseButtonMask:i});var o=a.default.TOOL_DEACTIVATED,l={mouseButtonMask:i,toolType:n,type:o};(0,m.default)(t,o,l),t.removeEventListener(a.default.IMAGE_RENDERED,e.onImageRendered),t.removeEventListener(a.default.MOUSE_MOVE,y),t.removeEventListener(a.default.MOUSE_DOWN,w),t.removeEventListener(a.default.MOUSE_DOWN_ACTIVATE,_),t.addEventListener(a.default.IMAGE_RENDERED,e.onImageRendered),t.addEventListener(a.default.MOUSE_MOVE,y),t.addEventListener(a.default.MOUSE_DOWN,w),E&&(t.removeEventListener(a.default.MOUSE_DOUBLE_CLICK,E),t.addEventListener(a.default.MOUSE_DOUBLE_CLICK,E)),e.deactivate&&e.deactivate(t,i),r.default.cornerstone.updateImage(t)},getConfiguration:function(){return t},setConfiguration:function(e){t=e},mouseDownCallback:b,mouseMoveCallback:p,mouseDownActivateCallback:g};return e.pointNearTool&&(x.pointNearTool=e.pointNearTool),E&&(x.mouseDoubleClickCallback=E),e.addNewMeasurement&&(x.addNewMeasurement=e.addNewMeasurement),x};var a=g(n(1)),r=g(n(0)),i=g(n(38)),o=g(n(25)),l=g(n(32)),s=g(n(31)),u=g(n(30)),d=g(n(37)),c=g(n(16)),f=g(n(5)),h=n(2),m=g(n(6)),v=n(4);function g(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.textBoxWidth=l,t.default=function(e,t,n,a,r,s){"[object Array]"!==Object.prototype.toString.call(t)&&(t=[t]);var u=i.default.getFontSize(),d=i.default.getBackgroundColor(),c=0;t.forEach(function(t){var n=l(e,t,5);c=Math.max(c,n)});var f={width:c,height:5+t.length*(u+5)};return(0,o.draw)(e,function(e){e.strokeStyle=r,s&&s.centering&&!0===s.centering.x&&(n-=f.width/2),s&&s.centering&&!0===s.centering.y&&(a-=f.height/2),f.left=n,f.top=a;var i=s&&!0===s.debug?"#FF0000":d;(0,o.fillBox)(e,f,i),(0,o.fillTextLines)(e,f,t,r,5)}),f};var a,r=n(21),i=(a=r)&&a.__esModule?a:{default:a},o=n(3);function l(e,t,n){var a=i.default.getFont(),r=e.font;a&&a!==r&&(e.font=a);var o=e.measureText(t).width;return a&&a!==r&&(e.font=r),o+2*n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=f(n(1)),r=f(n(0)),i=f(n(16)),o=f(n(25)),l=f(n(59)),s=f(n(28)),u=f(n(60)),d=n(2),c=f(n(6));function f(e){return e&&e.__esModule?e:{default:e}}function h(e){Object.keys(e).forEach(function(t){e[t].active=!1})}function m(e){if(e)for(var t=0;t<e.data.length;t++){var n=e.data[t];n.active=!1,n.handles&&h(n.handles)}}t.default=function(e){function t(o){var l=o.detail;e.addNewMeasurement?e.addNewMeasurement(l):function(o){var l=r.default.cornerstone,u=o.element,c=e.createNewMeasurement(o);if(c){if((0,d.addToolState)(u,e.toolType,c),1===Object.keys(c.handles).length&&o.type===a.default.TAP)return c.active=!1,c.handles.end.active=!1,c.handles.end.highlight=!1,c.invalidated=!0,(0,i.default)(o,c.handles)&&(0,d.removeToolState)(u,e.toolType,c),void l.updateImage(u);u.removeEventListener(a.default.TOUCH_START_ACTIVE,e.touchDownActivateCallback||t),u.removeEventListener(a.default.TAP,e.tapCallback||n),u.removeEventListener(a.default.TOUCH_START,e.touchStartCallback||f),l.updateImage(u),(0,s.default)(o,e.toolType,c,c.handles.end,function(){c.active=!1,c.invalidated=!0,(0,i.default)(o,c.handles)&&(0,d.removeToolState)(u,e.toolType,c),u.addEventListener(a.default.TOUCH_START_ACTIVE,e.touchDownActivateCallback||t),u.addEventListener(a.default.TAP,e.tapCallback||n),u.addEventListener(a.default.TOUCH_START,e.touchStartCallback||f),l.updateImage(u)})}}(l),o.stopImmediatePropagation(),o.preventDefault()}function n(s){var c=s.detail,h=r.default.cornerstone,v=c.element,g=c.currentPoints.canvas,p=(0,d.getToolState)(s.currentTarget,e.toolType),b=void 0,y=void 0;function w(){m(p),(0,i.default)(c,b.handles)&&(0,d.removeToolState)(v,e.toolType,b),h.updateImage(v),v.addEventListener(a.default.TOUCH_START,e.touchStartCallback||f),v.addEventListener(a.default.TAP,e.tapCallback||n)}if(m(p),p)for(y=0;y<p.data.length;y++){b=p.data[y];var _=(0,o.default)(v,b.handles,g,25);if(_)return v.removeEventListener(a.default.TOUCH_START,e.touchStartCallback||f),v.removeEventListener(a.default.TAP,e.tapCallback||n),b.active=!0,_.active=!0,h.updateImage(v),(0,l.default)(s,e.toolType,b,_,w),s.stopImmediatePropagation(),void s.preventDefault()}if(p&&e.pointNearTool)for(y=0;y<p.data.length;y++)if(b=p.data[y],e.pointNearTool(v,b,g))return v.removeEventListener(a.default.TOUCH_START,e.touchStartCallback||f),v.removeEventListener(a.default.TAP,e.tapCallback||n),b.active=!0,h.updateImage(v),(0,u.default)(s,b,p,e.toolType,!0,w),s.stopImmediatePropagation(),void s.preventDefault();return e.touchDownActivateCallback?e.touchDownActivateCallback(s):t(s),!1}function f(t){var s=t.detail,h=r.default.cornerstone,m=s.element,v=s.startPoints.canvas,g=void 0,p=(0,d.getToolState)(t.currentTarget,e.toolType),b=void 0;function y(t,r){g.active=!1,g.invalidated=!0,(0,i.default)(s,g.handles)&&(0,d.removeToolState)(s.element,e.toolType,g),h.updateImage(s.element),m.addEventListener(a.default.TOUCH_START,e.touchStartCallback||f),m.addEventListener(a.default.TAP,e.tapCallback||n),e.pressCallback&&m.addEventListener(a.default.TOUCH_PRESS,e.pressCallback),t&&t.type===a.default.TOUCH_PRESS&&(0,c.default)(m,t.type,r)}if(p){for(b=0;b<p.data.length;b++){g=p.data[b];var w=(0,o.default)(s.element,g.handles,v,28);if(w)return m.removeEventListener(a.default.TOUCH_START,e.touchStartCallback||f),m.removeEventListener(a.default.TAP,e.tapCallback||n),e.pressCallback&&m.removeEventListener(a.default.TOUCH_PRESS,e.pressCallback),g.active=!0,(0,l.default)(t,e.toolType,g,w,y),t.stopImmediatePropagation(),t.preventDefault(),void t.stopPropagation()}if(e.pointNearTool)for(b=0;b<p.data.length;b++)if(g=p.data[b],e.pointNearTool(s.element,g,v))return m.removeEventListener(a.default.TOUCH_START,e.touchStartCallback||f),m.removeEventListener(a.default.TAP,e.tapCallback||n),e.pressCallback&&m.removeEventListener(a.default.TOUCH_PRESS,e.pressCallback),(0,u.default)(t,g,p,e.toolType,!0,y),t.stopImmediatePropagation(),t.preventDefault(),void t.stopPropagation()}}var h={enable:function(i){i.removeEventListener(a.default.IMAGE_RENDERED,e.onImageRendered),i.removeEventListener(a.default.TOUCH_START,e.touchStartCallback||f),i.removeEventListener(a.default.TOUCH_START_ACTIVE,e.touchDownActivateCallback||t),i.removeEventListener(a.default.TAP,e.tapCallback||n),i.addEventListener(a.default.IMAGE_RENDERED,e.onImageRendered),e.doubleTapCallback&&i.removeEventListener(a.default.DOUBLE_TAP,e.doubleTapCallback),e.pressCallback&&i.removeEventListener(a.default.TOUCH_PRESS,e.pressCallback),r.default.cornerstone.updateImage(i)},disable:function(i){i.removeEventListener(a.default.IMAGE_RENDERED,e.onImageRendered),i.removeEventListener(a.default.TOUCH_START,e.touchStartCallback||f),i.removeEventListener(a.default.TOUCH_START_ACTIVE,e.touchDownActivateCallback||t),i.removeEventListener(a.default.TAP,e.tapCallback||n),e.doubleTapCallback&&i.removeEventListener(a.default.DOUBLE_TAP,e.doubleTapCallback),e.pressCallback&&i.removeEventListener(a.default.TOUCH_PRESS,e.pressCallback),r.default.cornerstone.updateImage(i)},activate:function(i){i.removeEventListener(a.default.IMAGE_RENDERED,e.onImageRendered),i.removeEventListener(a.default.TOUCH_START,e.touchStartCallback||f),i.removeEventListener(a.default.TOUCH_START_ACTIVE,e.touchDownActivateCallback||t),i.removeEventListener(a.default.TAP,e.tapCallback||n),i.addEventListener(a.default.IMAGE_RENDERED,e.onImageRendered),i.addEventListener(a.default.TOUCH_START,e.touchStartCallback||f),i.addEventListener(a.default.TOUCH_START_ACTIVE,e.touchDownActivateCallback||t),i.addEventListener(a.default.TAP,e.tapCallback||n),e.doubleTapCallback&&(i.removeEventListener(a.default.DOUBLE_TAP,e.doubleTapCallback),i.addEventListener(a.default.DOUBLE_TAP,e.doubleTapCallback)),e.pressCallback&&(i.removeEventListener(a.default.TOUCH_PRESS,e.pressCallback),i.addEventListener(a.default.TOUCH_PRESS,e.pressCallback)),r.default.cornerstone.updateImage(i)},deactivate:function(i){var o=a.default.TOOL_DEACTIVATED,l={toolType:e.toolType,type:o};(0,c.default)(i,o,l),i.removeEventListener(a.default.IMAGE_RENDERED,e.onImageRendered),i.removeEventListener(a.default.TOUCH_START,e.touchStartCallback||f),i.removeEventListener(a.default.TOUCH_START_ACTIVE,e.touchDownActivateCallback||t),i.removeEventListener(a.default.TAP,e.tapCallback||n),i.addEventListener(a.default.IMAGE_RENDERED,e.onImageRendered),i.addEventListener(a.default.TOUCH_START,e.touchStartCallback||f),e.doubleTapCallback&&i.removeEventListener(a.default.DOUBLE_TAP,e.doubleTapCallback),e.pressCallback&&i.removeEventListener(a.default.TOUCH_PRESS,e.pressCallback),r.default.cornerstone.updateImage(i)},touchStartCallback:e.touchStartCallback||f,touchDownActivateCallback:e.touchDownActivateCallback||t,tapCallback:e.tapCallback||n};return e.pointNearTool&&(h.pointNearTool=e.pointNearTool),e.doubleTapCallback&&(h.doubleTapCallback=e.doubleTapCallback),e.pressCallback&&(h.pressCallback=e.pressCallback),e.addNewMeasurement&&(h.addNewMeasurement=e.addNewMeasurement),h}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=void 0,r=void 0,i=void 0,o={setStartLoadHandler:function(e){a=e},getStartLoadHandler:function(){return a},setEndLoadHandler:function(e){r=e},getEndLoadHandler:function(){return r},setErrorLoadingHandler:function(e){i=e},getErrorLoadingHandler:function(){return i}};t.default=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(!t)throw new Error("simpleMouseButtonTool: toolType is required");var n={};return{activate:function(n,a){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};r.mouseButtonMask=a,(0,o.setToolOptions)(t,n,r),n.removeEventListener(i.default.MOUSE_DOWN_ACTIVATE,e),n.addEventListener(i.default.MOUSE_DOWN_ACTIVATE,e)},disable:function(t){t.removeEventListener(i.default.MOUSE_DOWN_ACTIVATE,e)},enable:function(t){t.removeEventListener(i.default.MOUSE_DOWN_ACTIVATE,e)},deactivate:function(t){t.removeEventListener(i.default.MOUSE_DOWN_ACTIVATE,e)},getConfiguration:function(){return n},setConfiguration:function(e){n=e}}};var a,r=n(1),i=(a=r)&&a.__esModule?a:{default:a},o=n(4)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=1,r=2,i={setToolWidth:function(e){a=e},getToolWidth:function(){return a},setActiveWidth:function(e){r=e},getActiveWidth:function(){return r}};t.default=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var n=e.image,a={left:0,top:0,width:n.width,height:n.height},r=!1;return Object.keys(t).forEach(function(e){var n=t[e];!0!==n.allowedOutsideImage&&!1===i.default.cornerstoneMath.point.insideRect(n,a)&&(r=!0)}),r};var a,r=n(0),i=(a=r)&&a.__esModule?a:{default:a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,o,l,s,u,d,c,f){var h=a.default.cornerstone,m=h.pixelToCanvas(t,n);c&&(m.x+=c);var v={centering:{x:!1,y:f}};if(n.boundingBox=(0,r.default)(e,o,m.x,m.y,u,v),n.hasMoved){var g=s(l).map(function(e){return h.pixelToCanvas(t,e)});(0,i.default)(g,m,n.boundingBox,e,u,d)}};var a=o(n(0)),r=o(n(11)),i=o(n(104));function o(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){var a=[i.default.TOUCH_DRAG];return n&&!0===n.fireOnTouchStart&&a.push(i.default.TOUCH_START),{activate:function(r){n&&n.eventData&&(0,o.setToolOptions)(t,r,n.eventData),a.forEach(function(t){r.removeEventListener(t,e),r.addEventListener(t,e)}),n&&n.activateCallback&&n.activateCallback(r),n&&n.touchStartCallback&&r.addEventListener(i.default.TOUCH_START,n.touchStartCallback),n&&n.touchEndCallback&&r.addEventListener(i.default.TOUCH_END,n.touchEndCallback)},disable:function(t){a.forEach(function(n){t.removeEventListener(n,e)}),n&&n.disableCallback&&n.disableCallback(t),n&&n.touchStartCallback&&t.removeEventListener(i.default.TOUCH_START,n.touchStartCallback),n&&n.touchEndCallback&&t.removeEventListener(i.default.TOUCH_END,n.touchEndCallback)},enable:function(t){a.forEach(function(n){t.removeEventListener(n,e)}),n&&n.enableCallback&&n.enableCallback(t),n&&n.touchStartCallback&&t.removeEventListener(i.default.TOUCH_START,n.touchStartCallback),n&&n.touchEndCallback&&t.removeEventListener(i.default.TOUCH_END,n.touchEndCallback)},deactivate:function(t){a.forEach(function(n){t.removeEventListener(n,e)}),n&&n.deactivateCallback&&n.deactivateCallback(t),n&&n.touchStartCallback&&t.removeEventListener(i.default.TOUCH_START,n.touchStartCallback),n&&n.touchEndCallback&&t.removeEventListener(i.default.TOUCH_END,n.touchEndCallback)}}};var a,r=n(1),i=(a=r)&&a.__esModule?a:{default:a},o=n(4)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=i.default.cornerstoneMath;return e instanceof t.Vector3?e:new t.Vector3(e[0],e[1],e[2])};var a,r=n(0),i=(a=r)&&a.__esModule?a:{default:a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var n=i.default.cornerstone,a=n.metaData.get("patientStudyModule",e.imageId),r=n.metaData.get("generalSeriesModule",e.imageId);if(a&&r&&"PT"===r.modality){var l=t*e.slope+e.intercept,s=a.patientWeight;if(s){var u=n.metaData.get("petIsotopeModule",e.imageId);if(u){var d=u.radiopharmaceuticalInfo,c=d.radiopharmaceuticalStartTime,f=d.radionuclideTotalDose,h=d.radionuclideHalfLife,m=r.seriesTime;if(c&&f&&h&&m){var v=o(m.fractionalSeconds||0)+m.seconds+60*m.minutes+60*m.hours*60-(o(c.fractionalSeconds)+c.seconds+60*c.minutes+60*c.hours*60);return l*s/(f*Math.exp(-v*Math.log(2)/h))*1e3}}}}};var a,r=n(0),i=(a=r)&&a.__esModule?a:{default:a};function o(e){return parseFloat("."+e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=15,r=a+"px Arial",i="transparent",o={setFont:function(e){r=e},getFont:function(){return r},setFontSize:function(e){a=e},getFontSize:function(){return a},setBackgroundColor:function(e){i=e},getBackgroundColor:function(){return i}};t.default=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(e.boundingBox)return i.default.cornerstoneMath.point.insideRect(t,e.boundingBox)};var a,r=n(0),i=(a=r)&&a.__esModule?a:{default:a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.freehand=void 0;var a=O(n(1)),r=O(n(0)),i=O(n(15)),o=O(n(7)),l=O(n(9)),s=O(n(32)),u=O(n(22)),d=O(n(20)),c=O(n(6)),f=O(n(5)),h=O(n(17)),m=n(2),v=n(4),g=n(8),p=n(55),b=O(n(98)),y=O(n(97)),w=O(n(96)),_=O(n(94)),E=O(n(93)),x=O(n(54)),T=n(34),P=n(3);function O(e){return e&&e.__esModule?e:{default:e}}function S(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}var I="freehand",M={mouseLocation:{handles:{start:{highlight:!0,active:!0}}},keyDown:{shift:!1,ctrl:!1,alt:!1},activePencilMode:!1,spacing:5,activeHandleRadius:3,completeHandleRadius:6,alwaysShowHandles:!1,invalidColor:"crimson",modifying:!1,movingTextBox:!1,currentHandle:0,currentTool:-1};function C(e,t,n){return null!==L(e,t,n)}function L(e,t,n){var a=z.getConfiguration();if(void 0===t.handles)return null;if(!1===t.visible)return null;for(var i=0;i<t.handles.length;i++){var o=r.default.cornerstone.pixelToCanvas(e,t.handles[i]);if(r.default.cornerstoneMath.point.distance(o,n)<a.spacing)return i}return t.textBox&&(0,u.default)(t.textBox,n)?t.textBox:null}function D(e){var t=e.detail,n=z.getConfiguration();t.event.shiftKey&&(n.activePencilMode=!0),function(e){e.element.addEventListener(a.default.MOUSE_MOVE,R);var t=z.getConfiguration();t.mouseLocation.handles.start.x=e.currentPoints.image.x,t.mouseLocation.handles.start.y=e.currentPoints.image.y,(0,m.addToolState)(e.element,I,{visible:!0,active:!0,invalidated:!0,color:void 0,handles:[],textBox:{active:!1,hasMoved:!1,movesIndependently:!1,drawnIndependently:!0,allowedOutsideImage:!0,hasBoundingBox:!0}});var n=(0,m.getToolState)(e.element,I);t.currentTool=n.data.length-1}(t),A(t),e.preventDefault(),e.stopPropagation()}function A(e){var t=(0,m.getToolState)(e.element,I);if(void 0!==t){var n=z.getConfiguration(),a=t.data[n.currentTool];if(!a.handles.invalidHandlePlacement){var i=new T.FreehandHandleData(e.currentPoints.image);a.handles.length&&a.handles[n.currentHandle-1].lines.push(e.currentPoints.image),a.handles.push(i),n.currentHandle+=1,r.default.cornerstone.updateImage(e.element)}}}function j(e,t){var n=(0,m.getToolState)(e.element,I);if(n){var a=z.getConfiguration(),i=n.data[a.currentTool];i.active=!1,i.highlight=!1,i.handles.invalidHandlePlacement=!1,void 0!==t&&i.handles[a.currentHandle-1].lines.push(i.handles[0]),a.modifying&&(a.modifying=!1,i.invalidated=!0),a.currentHandle=0,a.currentTool=-1,a.activePencilMode=!1,i.canComplete=!1,r.default.cornerstone.updateImage(e.element)}}function k(e){var t=e.detail,n=t.element,r=(0,v.getToolOptions)(I,n);if(!(0,f.default)(t.which,r.mouseButtonMask))return e.stopPropagation(),void e.preventDefault();var i=z.getConfiguration().currentTool;if(i<0)!function(e){var t=e.detail,n=function(e){var t=e.element,n=e.currentPoints.canvas,a=(0,m.getToolState)(t,I);if(a)for(var r=void 0,i=0;i<a.data.length;i++)if(null!==(r=L(t,a.data[i],n)))return{handleNearby:r,toolIndex:i}}(t);t.event.ctrlKey?(0,w.default)(e,n):void 0!==n&&function(e,t){var n=e.detail,r=n.element,i=(0,m.getToolState)(n.element,I),o=t.handleNearby;o.hasBoundingBox?function(e,t){var n=z.getConfiguration(),r=t.handleNearby,i=t.toolIndex;e.addEventListener(a.default.MOUSE_UP,N),e.addEventListener(a.default.MOUSE_DRAG,U),n.movingTextBox=!0,n.currentHandle=r,n.currentTool=i}(r,t):void 0!==o&&function(e,t,n){var r=z.getConfiguration(),i=t.handleNearby,o=t.toolIndex;e.removeEventListener(a.default.MOUSE_MOVE,R),r.dragOrigin={x:n.data[o].handles[i].x,y:n.data[o].handles[i].y},e.addEventListener(a.default.MOUSE_UP,N),e.addEventListener(a.default.MOUSE_CLICK,N),e.addEventListener(a.default.MOUSE_DRAG,U),r.modifying=!0,r.currentHandle=i,r.currentTool=o}(r,t,i),e.preventDefault(),e.stopPropagation()}(e,n)}(e);else{var o=(0,m.getToolState)(t.element,I);i>=0&&o.data[i].active&&function(e,t,n){var a=e.detail,r=z.getConfiguration(),i=a.element,o=t.data[n],l=L(i,o,a.currentPoints.canvas);!x.default.end(o.handles)&&o.canComplete?j(a,r.currentHandle):null===l&&A(a),e.preventDefault(),e.stopPropagation()}(e,o,i)}}function R(e){var t=e.detail,n=(0,m.getToolState)(t.element,I);if(n){if(z.getConfiguration().currentTool<0){if(!function(e,t){for(var n=!1,a=0;a<t.data.length;a++){var r=e.element,i=t.data[a],o=e.currentPoints.canvas;!0===(0,s.default)(r,i.handles,o)&&(n=!0),(C(r,i,o)&&!i.active||!C(r,i,o)&&i.active)&&(i.active=!i.active,n=!0),!0===i.textBox&&(0,u.default)(i.textBox,o)&&(i.active=!i.active,i.highlight=!i.highlight,n=!0)}return n}(t,n))return}else!function(e,t){var n=z.getConfiguration(),a=n.currentTool,i=e.element,o=t.data[a],l=e.currentPoints.canvas;if(B(e),function(e){var t=z.getConfiguration();if(e.handles.length<2)return!0;var n=void 0;n=t.activePencilMode?function(e){var t=z.getConfiguration().mouseLocation.handles.start,n=e.handles,a=x.default.newHandle(t,n);return!1===a&&(a=function(e,t){var n=z.getConfiguration(),a=e.handles;if(r.default.cornerstoneMath.point.distance(a[0],t)<n.spacing)return e.canComplete=!0,!1;e.canComplete=!1;for(var i=1;i<a.length-1;i++)if(r.default.cornerstoneMath.point.distance(a[i],t)<n.spacing)return!0;return!1}(e,t)),a}(e):function(e){var t=z.getConfiguration(),n=t.mouseLocation.handles.start,a=e.handles,i=!1;return e.canComplete=!1,r.default.cornerstoneMath.point.distance(a[0],n)<t.spacing&&!x.default.end(a)?(e.canComplete=!0,i=!1):i=x.default.newHandle(n,a),i}(e),e.handles.invalidHandlePlacement=n}(o),n.activePencilMode)!function(e,t){for(var n=z.getConfiguration(),a=n.mouseLocation.handles.start,i=0;i<t.length;i++)if(r.default.cornerstoneMath.point.distance(t[i],a)<n.spacing)return;A(e)}(e,o.handles);else{var s=L(i,o,l);null!==s&&!s.hasBoundingBox&&s<o.handles.length-1&&(n.mouseLocation.handles.start.x=o.handles[s].x,n.mouseLocation.handles.start.y=o.handles[s].y)}}(t,n);r.default.cornerstone.updateImage(t.element)}}function U(e){var t=e.detail,n=(0,m.getToolState)(t.element,I);if(n){var a=z.getConfiguration(),i=n.data[a.currentTool],o=a.currentHandle;B(t),a.currentTool>=0&&(0,b.default)(o,i),r.default.cornerstone.updateImage(t.element)}}function N(e){var t=e.detail,n=t.element,i=(0,m.getToolState)(t.element,I);n.removeEventListener(a.default.MOUSE_UP,N),n.removeEventListener(a.default.MOUSE_DRAG,U),n.removeEventListener(a.default.MOUSE_CLICK,N),n.addEventListener(a.default.MOUSE_MOVE,R),void 0!==i&&("handle"===(0,y.default)(e,i)&&j(t),e.preventDefault(),e.stopPropagation(),r.default.cornerstone.updateImage(t.element))}function B(e){var t=z.getConfiguration();t.mouseLocation.handles.start.x=e.currentPoints.image.x,t.mouseLocation.handles.start.y=e.currentPoints.image.y,(0,g.clipToBox)(t.mouseLocation.handles.start,e.image)}function H(e){var t=e.toString().split(".");return t[0]=t[0].replace(/\B(?=(\d{3})+(?!\d))/g,","),t.join(".")}function F(e){var t=e.detail,n=(0,m.getToolState)(e.currentTarget,I);if(void 0!==n){var a=r.default.cornerstone,s=t.image,u=t.element,c=z.getConfiguration(),f=a.metaData.get("generalSeriesModule",s.imageId),v=void 0;f&&(v=f.modality);for(var g=(0,P.getNewContext)(t.canvasContext.canvas),p=i.default.getToolWidth(),b=function(e){var r=n.data[e];if(!1===r.visible)return"continue";(0,P.draw)(g,function(e){var n=o.default.getColorIfActive(r),i=void 0;if(r.active?r.handles.invalidHandlePlacement?(n=c.invalidColor,i=c.invalidColor):(n=o.default.getColorIfActive(r),i=o.default.getFillColor()):i=o.default.getToolColor(),r.handles.length)for(var f=0;f<r.handles.length;f++){var m=[].concat(S(r.handles[f].lines));f!==r.handles.length-1||r.polyBoundingBox||m.push(c.mouseLocation.handles.start),(0,P.drawJoinedLines)(e,t.element,r.handles[f],m,{color:n})}var g={fill:i};(c.alwaysShowHandles||c.keyDown.ctrl||r.active&&r.polyBoundingBox)&&(g.handleRadius=c.activeHandleRadius,(0,l.default)(e,t,r.handles,n,g)),r.canComplete&&(g.handleRadius=c.completeHandleRadius,(0,l.default)(e,t,[r.handles[0]],n,g)),r.active&&!r.polyBoundingBox&&(g.handleRadius=c.activeHandleRadius,(0,l.default)(e,t,c.mouseLocation.handles,n,g),(0,l.default)(e,t,[r.handles[0]],n,g));var b=void 0,y=void 0,x=void 0;if(!1===r.invalidated)y=r.meanStdDev,x=r.meanStdDevSUV,b=r.area;else if(!r.active){for(var T={left:r.handles[0].x,right:r.handles[0].x,bottom:r.handles[0].y,top:r.handles[0].x},O=0;O<r.handles.length;O++)T.left=Math.min(T.left,r.handles[O].x),T.right=Math.max(T.right,r.handles[O].x),T.bottom=Math.min(T.bottom,r.handles[O].y),T.top=Math.max(T.top,r.handles[O].y);var I={left:T.left,top:T.bottom,width:Math.abs(T.right-T.left),height:Math.abs(T.top-T.bottom)};if(r.polyBoundingBox=I,!s.color){var M=a.getPixels(u,I.left,I.top,I.width,I.height);y=(0,E.default)(M,I,r.handles),"PT"===v&&(x={mean:(0,d.default)(s,(y.mean-s.intercept)/s.slope),stdDev:(0,d.default)(s,(y.stdDev-s.intercept)/s.slope)}),y&&!isNaN(y.mean)&&(r.meanStdDev=y,r.meanStdDevSUV=x)}var C=(s.columnPixelSpacing||1)*(s.rowPixelSpacing||1);b=(0,_.default)(r.handles,C),isNaN(b)||(r.area=b),r.invalidated=!1}if(r.polyBoundingBox&&!r.textBox.freehand){r.textBox.hasMoved||(r.textBox.x=r.polyBoundingBox.left+r.polyBoundingBox.width,r.textBox.y=r.polyBoundingBox.top+r.polyBoundingBox.height/2);var L=function(e){var t=e.meanStdDev,n=e.meanStdDevSUV,a=e.area,r=[];if(t&&void 0!==t.mean){var i="";"CT"===v&&(i=" HU");var o="Mean: "+H(t.mean.toFixed(2))+i,l="StdDev: "+H(t.stdDev.toFixed(2))+i;n&&void 0!==n.mean&&(o+=" SUV: "+H(n.mean.toFixed(2)),l+=" SUV: "+H(n.stdDev.toFixed(2))),r.push(o),r.push(l)}if(a){var u=" mm"+String.fromCharCode(178);s.rowPixelSpacing&&s.columnPixelSpacing||(u=" pixels"+String.fromCharCode(178));var d="Area: "+H(a.toFixed(2))+u;r.push(d)}return r}(r);(0,h.default)(e,u,r.textBox,L,r.handles,w,n,p,0,!0)}})},y=0;y<n.data.length;y++)b(y)}function w(e){return e}}function V(e){e.removeEventListener(a.default.MOUSE_DOWN,k),e.removeEventListener(a.default.MOUSE_DOWN_ACTIVATE,D),e.removeEventListener(a.default.MOUSE_DRAG,U),e.removeEventListener(a.default.MOUSE_UP,N),e.removeEventListener(a.default.MOUSE_MOVE,R),e.removeEventListener(a.default.IMAGE_RENDERED,F),e.removeEventListener(a.default.KEY_DOWN,p.keyDownCallback),e.removeEventListener(a.default.KEY_UP,p.keyUpCallback)}var z={enable:function(e){V(e),e.addEventListener(a.default.IMAGE_RENDERED,F),r.default.cornerstone.updateImage(e)},disable:function(e){V(e),r.default.cornerstone.updateImage(e)},activate:function(e,t){(0,v.setToolOptions)(I,e,{mouseButtonMask:t}),V(e),e.addEventListener(a.default.IMAGE_RENDERED,F),e.addEventListener(a.default.MOUSE_MOVE,R),e.addEventListener(a.default.MOUSE_DOWN,k),e.addEventListener(a.default.MOUSE_DOWN_ACTIVATE,D),e.addEventListener(a.default.KEY_DOWN,p.keyDownCallback),e.addEventListener(a.default.KEY_UP,p.keyUpCallback),r.default.cornerstone.updateImage(e)},deactivate:function(e,t){(0,v.setToolOptions)(I,e,{mouseButtonMask:t});var n=a.default.TOOL_DEACTIVATED,i={mouseButtonMask:t,toolType:I,type:n};(0,c.default)(e,n,i),V(e),e.addEventListener(a.default.IMAGE_RENDERED,F),e.addEventListener(a.default.MOUSE_MOVE,R),e.addEventListener(a.default.MOUSE_DOWN,k),e.addEventListener(a.default.KEY_DOWN,p.keyDownCallback),e.addEventListener(a.default.KEY_UP,p.keyUpCallback),r.default.cornerstone.updateImage(e)},getConfiguration:function(){return M},setConfiguration:function(e){M=e},pointNearTool:C};t.freehand=z},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t={};return{disable:function(t){t.removeEventListener(a.default.IMAGE_RENDERED,e)},enable:function(t){t.removeEventListener(a.default.IMAGE_RENDERED,e),t.addEventListener(a.default.IMAGE_RENDERED,e),r.default.cornerstone.updateImage(t)},getConfiguration:function(){return t},setConfiguration:function(e){t=e}}};var a=i(n(1)),r=i(n(0));function i(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,i){var o=void 0;if(t)return Object.keys(t).forEach(function(l){var s=t[l];if(s.hasOwnProperty("pointNearHandle")){if(s.pointNearHandle(e,s,n))return void(o=s)}else if(!0===s.hasBoundingBox){if((0,r.default)(s,n))return void(o=s)}else{var u=a.default.cornerstone.pixelToCanvas(e,s);if(a.default.cornerstoneMath.point.distance(u,n)<=i)return void(o=s)}}),o};var a=i(n(0)),r=i(n(22));function i(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.globalImageIdSpecificToolStateManager=t.newImageIdSpecificToolStateManager=void 0;var a,r=n(0),i=(a=r)&&a.__esModule?a:{default:a};function o(){var e={};return{get:function(t,n){var a=i.default.cornerstone.getEnabledElement(t);if(a.image&&!1!==e.hasOwnProperty(a.image.imageId)){var r=e[a.image.imageId];if(!1!==r.hasOwnProperty(n))return r[n]}},add:function(t,n,a){var r=i.default.cornerstone.getEnabledElement(t);r.image&&!1!==e.hasOwnProperty(r.image.imageId)||(e[r.image.imageId]={});var o=e[r.image.imageId];!1===o.hasOwnProperty(n)&&(o[n]={data:[]}),o[n].data.push(a)},clear:function(t){var n=i.default.cornerstone.getEnabledElement(t);n.image&&!1!==e.hasOwnProperty(n.image.imageId)&&delete e[n.image.imageId]},saveImageIdToolState:function(t){return e[t]},restoreImageIdToolState:function(t,n){e[t]=n},saveToolState:function(){return e},restoreToolState:function(t){e=t},toolState:e}}var l=o();t.newImageIdSpecificToolStateManager=o,t.globalImageIdSpecificToolStateManager=l},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,a){var r=i.default.cornerstone,o={start:r.pixelToCanvas(e,t),end:r.pixelToCanvas(e,n)};return i.default.cornerstoneMath.lineSegment.distanceToPoint(o,a)};var a,r=n(0),i=(a=r)&&a.__esModule?a:{default:a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,l,s,u){var d=r.default.cornerstone,c=e.element,f=d.pageToPixel(c,e.currentPoints.page.x,e.currentPoints.page.y+50),h={x:l.x-f.x,y:l.y-f.y};function m(e){var r=e.detail;l.x=r.currentPoints.image.x+h.x,l.y=r.currentPoints.image.y+h.y,u&&(0,o.clipToBox)(l,r.image),d.updateImage(c);var s=a.default.MEASUREMENT_MODIFIED,f={toolType:t,element:c,measurementData:n};(0,i.default)(c,s,f)}function v(e){var t=e.detail;if(c.removeEventListener(a.default.TOUCH_DRAG,m),c.removeEventListener(a.default.TOUCH_PINCH,v),c.removeEventListener(a.default.TOUCH_END,v),c.removeEventListener(a.default.TAP,v),c.removeEventListener(a.default.TOUCH_START,g),c.removeEventListener(a.default.TOOL_DEACTIVATED,p),e.type===a.default.TOUCH_PINCH||e.type===a.default.TOUCH_PRESS)return l.active=!1,d.updateImage(c),void s();l.active=!1,n.active=!1,l.x=t.currentPoints.image.x+h.x,l.y=t.currentPoints.image.y+h.y,u&&(0,o.clipToBox)(l,t.image),d.updateImage(c),"function"==typeof s&&s()}function g(e){return e.stopImmediatePropagation(),!1}function p(){c.removeEventListener(a.default.TOUCH_DRAG,m),c.removeEventListener(a.default.TOUCH_PINCH,v),c.removeEventListener(a.default.TOUCH_END,v),c.removeEventListener(a.default.TAP,v),c.removeEventListener(a.default.TOUCH_START,g),c.removeEventListener(a.default.TOOL_DEACTIVATED,p),l.active=!1,n.active=!1,l.x=e.currentPoints.image.x+h.x,l.y=e.currentPoints.image.y+h.y,u&&(0,o.clipToBox)(l,e.image),d.updateImage(c)}l.active=!0,n.active=!0,c.addEventListener(a.default.TOUCH_DRAG,m),c.addEventListener(a.default.TOUCH_PINCH,v),c.addEventListener(a.default.TOUCH_END,v),c.addEventListener(a.default.TAP,v),c.addEventListener(a.default.TOUCH_START,g),c.addEventListener(a.default.TOOL_DEACTIVATED,p)};var a=l(n(1)),r=l(n(0)),i=l(n(6)),o=n(8);function l(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return{activate:function(t){t.removeEventListener(i.default.MOUSE_WHEEL,e),t.addEventListener(i.default.MOUSE_WHEEL,e)},disable:function(t){t.removeEventListener(i.default.MOUSE_WHEEL,e)},enable:function(t){t.removeEventListener(i.default.MOUSE_WHEEL,e)},deactivate:function(t){t.removeEventListener(i.default.MOUSE_WHEEL,e)}}};var a,r=n(1),i=(a=r)&&a.__esModule?a:{default:a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,l,s,u){var d=r.default.cornerstone,c=e.element;function f(e){var r=e.detail;l.active=!0,l.x=r.currentPoints.image.x,l.y=r.currentPoints.image.y,u&&(0,o.clipToBox)(l,r.image),d.updateImage(c);var s=a.default.MEASUREMENT_MODIFIED,f={toolType:t,element:c,measurementData:n};(0,i.default)(c,s,f)}function h(e){c.removeEventListener(a.default.MOUSE_MOVE,h),c.removeEventListener(a.default.MOUSE_DRAG,h),c.addEventListener(a.default.MOUSE_MOVE,f),c.addEventListener(a.default.MOUSE_DRAG,f),c.addEventListener(a.default.MOUSE_CLICK,g),e.type===a.default.MOUSE_DRAG&&c.addEventListener(a.default.MOUSE_UP,g)}function m(e){e.detail.measurementData===n&&g()}function v(e){e.detail.toolType===t&&(c.removeEventListener(a.default.MOUSE_MOVE,f),c.removeEventListener(a.default.MOUSE_DRAG,f),c.removeEventListener(a.default.MOUSE_CLICK,g),c.removeEventListener(a.default.MOUSE_UP,g),c.removeEventListener(a.default.MEASUREMENT_REMOVED,m),c.removeEventListener(a.default.TOOL_DEACTIVATED,v),l.active=!1,d.updateImage(c))}function g(){c.removeEventListener(a.default.MOUSE_MOVE,f),c.removeEventListener(a.default.MOUSE_DRAG,f),c.removeEventListener(a.default.MOUSE_CLICK,g),c.removeEventListener(a.default.MOUSE_UP,g),c.removeEventListener(a.default.MEASUREMENT_REMOVED,m),c.removeEventListener(a.default.TOOL_DEACTIVATED,v),l.active=!1,d.updateImage(c),"function"==typeof s&&s()}c.addEventListener(a.default.MOUSE_DRAG,h),c.addEventListener(a.default.MOUSE_MOVE,h),c.addEventListener(a.default.MEASUREMENT_REMOVED,m),c.addEventListener(a.default.TOOL_DEACTIVATED,v)};var a=l(n(1)),r=l(n(0)),i=l(n(6)),o=n(8);function l(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,l,s,u){var d=r.default.cornerstone,c=e.element,f={x:l.x-e.currentPoints.image.x,y:l.y-e.currentPoints.image.y};function h(e){var r=e.detail;!1===l.hasMoved&&(l.hasMoved=!0),l.active=!0,l.x=r.currentPoints.image.x+f.x,l.y=r.currentPoints.image.y+f.y,u&&(0,o.clipToBox)(l,r.image),d.updateImage(c);var s=a.default.MEASUREMENT_MODIFIED,h={toolType:t,element:c,measurementData:n};(0,i.default)(c,s,h)}function m(){l.active=!1,c.removeEventListener(a.default.MOUSE_DRAG,h),c.removeEventListener(a.default.MOUSE_UP,m),c.removeEventListener(a.default.MOUSE_CLICK,m),d.updateImage(c),"function"==typeof s&&s()}c.addEventListener(a.default.MOUSE_DRAG,h),c.addEventListener(a.default.MOUSE_UP,m),c.addEventListener(a.default.MOUSE_CLICK,m)};var a=l(n(1)),r=l(n(0)),i=l(n(6)),o=n(8);function l(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,a){a||(a=6);var r=function(e){var t=void 0;return Object.keys(e).forEach(function(n){var a=e[n];!0!==a.active||(t=a)}),t}(t),o=(0,i.default)(e,t,n,a);return r!==o&&(void 0!==o&&(o.active=!0),void 0!==r&&(r.active=!1),!0)};var a,r=n(25),i=(a=r)&&a.__esModule?a:{default:a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=void 0,r={default:6,IE:{9:6,10:8,default:8},Firefox:{default:6},Opera:{10:8,11:6,12:6,default:6},Chrome:{default:6},Safari:{default:6}};function i(){var e=navigator.userAgent,t=e.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i)||[],n=void 0;return/trident/i.test(t[1])?"IE "+((n=/\brv[ :]+(\d+)/g.exec(e)||[])[1]||""):"Chrome"===t[1]&&null!==(n=e.match(/\b(OPR|Edge)\/(\d+)/))?n.slice(1).join(" ").replace("OPR","Opera"):(t=t[2]?[t[1],t[2]]:[navigator.appName,navigator.appVersion,"-?"],null!==(n=e.match(/version\/(\d+)/i))&&t.splice(1,1,n[1]),t.join(" "))}function o(){var e=i().split(" "),t=e[0],n=e[1],a=r[t];return a?a[n]?a[n]:a.default:r.default}t.getDefaultSimultaneousRequests=o,t.getMaxSimultaneousRequests=function(){return a||o()},t.setMaxSimultaneousRequests=function(e){a=e},t.getBrowserInfo=i,t.isMobileDevice=function(){return new RegExp("Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini").test(navigator.userAgent)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FreehandHandleData=function e(t){var n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],a=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.x=t.x,this.y=t.y,this.highlight=n,this.active=a,this.lines=[]}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var n={},a=[i.default.MULTI_TOUCH_DRAG];return t&&!0===t.fireOnTouchStart&&a.push(i.default.MULTI_TOUCH_START),{activate:function(n){a.forEach(function(t){n.removeEventListener(t,e),n.addEventListener(t,e)}),t&&t.activateCallback&&t.activateCallback(n)},disable:function(n){a.forEach(function(t){n.removeEventListener(t,e)}),t&&t.disableCallback&&t.disableCallback(n)},enable:function(n){a.forEach(function(t){n.removeEventListener(t,e)}),t&&t.enableCallback&&t.enableCallback(n)},deactivate:function(n){a.forEach(function(t){n.removeEventListener(t,e)}),t&&t.deactivateCallback&&t.deactivateCallback(n)},getConfiguration:function(){return n},setConfiguration:function(e){n=e}}};var a,r=n(1),i=(a=r)&&a.__esModule?a:{default:a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){var l=(0,r.getToolState)(e,"timeSeries");if(l&&l.data&&l.data.length){var s=a.default.cornerstone,u=l.data[0],d=u.stacks[u.currentStackIndex].currentImageIdIndex,c=u.currentStackIndex+t;if(n?(c>=u.stacks.length&&(c=0),c<0&&(c=u.stacks.length-1)):c=(0,o.default)(c,0,u.stacks.length-1),c!==u.currentStackIndex){var f=s.getViewport(e),h=u.stacks[c],m=i.default.getStartLoadHandler(),v=i.default.getEndLoadHandler(),g=i.default.getErrorLoadingHandler();m&&m(e),(!0===h.preventCache?s.loadImage(h.imageIds[d]):s.loadAndCacheImage(h.imageIds[d])).then(function(t){u.currentImageIdIndex!==d&&(h.currentImageIdIndex=d,u.currentStackIndex=c,s.displayImage(e,t,f),v&&v(e,t))},function(t){var n=h.imageIds[d];g&&g(e,n,t)})}}};var a=l(n(0)),r=n(2),i=l(n(13)),o=l(n(8));function l(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,u,d,c){var f=r.default.cornerstone,h=e.detail.element;function m(e){var n=e.detail;t.active=!0,Object.keys(t.handles).forEach(function(e){var a=t.handles[e];!0!==a.movesIndependently&&(a.x+=n.deltaPoints.image.x,a.y+=n.deltaPoints.image.y,d.preventHandleOutsideImage&&(0,s.clipToBox)(a,n.image))}),f.updateImage(h);var r=a.default.MEASUREMENT_MODIFIED,i={toolType:u,element:h,measurementData:t};(0,l.default)(h,r,i),e.preventDefault(),e.stopPropagation()}function v(e){var n=e.detail;t.invalidated=!0,h.removeEventListener(a.default.MOUSE_DRAG,m),h.removeEventListener(a.default.MOUSE_UP,v),h.removeEventListener(a.default.MOUSE_CLICK,v),!0===d.deleteIfHandleOutsideImage&&(0,i.default)(n,t.handles)&&(0,o.removeToolState)(h,u,t),f.updateImage(h),"function"==typeof c&&c()}return h.addEventListener(a.default.MOUSE_DRAG,m),h.addEventListener(a.default.MOUSE_UP,v),h.addEventListener(a.default.MOUSE_CLICK,v),!0};var a=u(n(1)),r=u(n(0)),i=u(n(16)),o=n(2),l=u(n(6)),s=n(8);function u(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=void 0,r={setCoords:function(e){a=e.currentPoints.canvas},getCoords:function(){return a}};t.default=r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return{page:i.default.cornerstoneMath.point.copy(e.page),image:i.default.cornerstoneMath.point.copy(e.image),client:i.default.cornerstoneMath.point.copy(e.client),canvas:i.default.cornerstoneMath.point.copy(e.canvas)}};var a,r=n(0),i=(a=r)&&a.__esModule?a:{default:a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,a,r){if(!e)throw new Error("getRGBPixels: parameter element must not be undefined");t=Math.round(t),n=Math.round(n);var o=i.default.cornerstone.getEnabledElement(e),l=[],s=0,u=o.image.getPixelData(),d=void 0,c=void 0,f=void 0;if(o.image.color)for(c=0;c<r;c++)for(f=0;f<a;f++){var h=u[d=4*((c+n)*o.image.columns+(f+t))],m=u[d+1],v=u[d+2],g=u[d+3];l[s++]=h,l[s++]=m,l[s++]=v,l[s++]=g}return l};var a,r=n(0),i=(a=r)&&a.__esModule?a:{default:a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var n=e.width/2,a=e.height/2;if(n<=0||a<=0)return!1;var r=e.left+n,i=e.top+a,o=t.x-r,l=t.y-i;return o*o/(n*n)+l*l/(a*a)<=1}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var n=Math.pow(10,t);return Math.round(e*n)/n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],l=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=(0,i.getToolState)(e,"stack");if(s&&s.data&&s.data.length){var u=s.data[0];u.pending||(u.pending=[]);var d=u.currentImageIdIndex+t;if(n?d%=u.imageIds.length:d=(0,o.default)(d,0,u.imageIds.length-1),l)(0,r.default)(e,d);else{var c={index:d};u.pending.push(c),function e(t,n,i){if(t.pending[0]===n){if(t.currentImageIdIndex===n.index)return t.pending.splice(t.pending.indexOf(n),1),void(t.pending.length>0&&e(t,t.pending[0],i));i.addEventListener(a.default.NEW_IMAGE,function e(o){t.imageIds.indexOf(o.detail.image.imageId)===n.index&&(t.pending.splice(t.pending.indexOf(n),1),i.removeEventListener(a.default.NEW_IMAGE,e),t.pending.length>0&&function e(t,n,i){if(t.pending[0]===n){if(t.currentImageIdIndex===n.index)return t.pending.splice(t.pending.indexOf(n),1),void(t.pending.length>0&&e(t,t.pending[0],i));i.addEventListener(a.default.NEW_IMAGE,function r(o){t.imageIds.indexOf(o.detail.image.imageId)===n.index&&(t.pending.splice(t.pending.indexOf(n),1),i.removeEventListener(a.default.NEW_IMAGE,r),t.pending.length>0&&e(t,t.pending[0],i))}),(0,r.default)(i,n.index)}}(t,t.pending[0],i))}),(0,r.default)(i,n.index)}}(u,c,e)}}};var a=l(n(1)),r=l(n(65)),i=n(2),o=l(n(8));function l(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=n(0),i=(a=r)&&a.__esModule?a:{default:a},o=n(33),l={interaction:[],thumbnail:[],prefetch:[]},s={interaction:0,thumbnail:0,prefetch:0},u={interaction:6,thumbnail:6,prefetch:5},d=!1,c=20;function f(){d&&setTimeout(function(){m()},c)}function h(e){var t=i.default.cornerstone,n=e.type;s[n]++,d=!0;var a=e.imageId,r=e.doneCallback,o=e.failCallback,l=t.imageCache.getImageLoadObject(a);if(l)l.promise.then(function(e){s[n]--,r(e),f()},function(e){s[n]--,o(e),f()});else{var u=function(e){return"prefetch"===e.type?-5:"interactive"===e.type?0:"thumbnail"===e.type?5:void 0}(e);(!0===e.preventCache?t.loadImage(a,{priority:u,type:e.type}):t.loadAndCacheImage(a,{priority:u,type:e.type})).then(function(e){s[n]--,r(e),f()},function(e){s[n]--,o(e),f()})}}function m(){var e=(0,o.getMaxSimultaneousRequests)();u={interaction:Math.max(e,1),thumbnail:Math.max(e-2,1),prefetch:Math.max(e-1,1)};for(var t=e-(s.interaction+s.thumbnail+s.prefetch),n=0;n<t;n++){var a=l.interaction.length&&s.interaction<u.interaction?l.interaction.shift():l.thumbnail.length&&s.thumbnail<u.thumbnail?l.thumbnail.shift():l.prefetch.length&&s.prefetch<u.prefetch?l.prefetch.shift():(l.interaction.length||l.thumbnail.length||l.prefetch.length||(d=!1),!1);a&&h(a)}}t.default={addRequest:function(e,t,n,a,r,o,s){if(!l.hasOwnProperty(n))throw new Error("Request type must be one of interaction, thumbnail, or prefetch");if(e&&t){var u={type:n,imageId:t,preventCache:a,doneCallback:r,failCallback:o},c=i.default.cornerstone.imageCache.getImageLoadObject(t);c?c.promise.then(function(e){r(e)},function(e){o(e)}):(s?l[n].unshift(u):l[n].push(u),d=!0)}},clearRequestStack:function(e){if(!l.hasOwnProperty(e))throw new Error("Request type must be one of interaction, thumbnail, or prefetch");l[e]=[]},startGrabbing:m,getRequestPool:function(){return l}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.projectPatientPointToImagePlane=function(e,t){var n=(0,r.default)(t.rowCosines),a=(0,r.default)(t.columnCosines),i=(0,r.default)(t.imagePositionPatient),o=e.clone().sub(i),l=n.dot(o)/t.columnPixelSpacing,s=a.dot(o)/t.rowPixelSpacing;return{x:l,y:s}},t.imagePointToPatientPoint=o,t.planePlaneIntersection=function(e,t){var n=(0,r.default)(e.rowCosines),i=(0,r.default)(e.columnCosines),l=(0,r.default)(e.imagePositionPatient),s=(0,r.default)(t.rowCosines),u=(0,r.default)(t.columnCosines),d=(0,r.default)(t.imagePositionPatient),c=n.clone().cross(i),f=new a.default.cornerstoneMath.Plane;f.setFromNormalAndCoplanarPoint(c,l);var h=s.clone().cross(u),m=new a.default.cornerstoneMath.Plane;m.setFromNormalAndCoplanarPoint(h,d);var v=m.clone().intersectPlane(f),g=v.origin,p=v.direction,b=o({x:t.columns,y:t.rows},t),y=d.distanceTo(b),w=new a.default.cornerstoneMath.Line3;w.start=g,w.end=g.clone().add(p.multiplyScalar(y));var _=function(e){var t=o({x:0,y:0},e),n=o({x:e.columns,y:0},e),r=o({x:0,y:e.rows},e),i=o({x:e.columns,y:e.rows},e);return{top:new a.default.cornerstoneMath.Line3(t,n),left:new a.default.cornerstoneMath.Line3(t,r),right:new a.default.cornerstoneMath.Line3(n,i),bottom:new a.default.cornerstoneMath.Line3(r,i)}}(t),E=function(e,t){var n=[];return Object.keys(t).forEach(function(a){var r=t[a],i=e.intersectLine(r);i&&n.push(i)}),n}(w,_);if(2===E.length)return{start:E[0],end:E[1]}};var a=i(n(0)),r=i(n(19));function i(e){return e&&e.__esModule?e:{default:e}}function o(e,t){var n=(0,r.default)(t.rowCosines),a=(0,r.default)(t.columnCosines),i=(0,r.default)(t.imagePositionPatient),o=n.clone().multiplyScalar(e.x);o.multiplyScalar(t.columnPixelSpacing);var l=a.clone().multiplyScalar(e.y);l.multiplyScalar(t.rowPixelSpacing);var s=o.add(l);return s.add(i),s}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getToolOptions=t.setToolOptions=t.version=t.adaptiveBrush=t.brush=t.zoomTouchDrag=t.zoomTouchPinch=t.zoomWheel=t.zoom=t.wwwcRegionTouch=t.wwwcRegion=t.wwwcTouchDrag=t.wwwc=t.touchTool=t.touchPinchTool=t.touchDragTool=t.textMarkerTouch=t.textMarker=t.simpleMouseButtonTool=t.simpleAngleTouch=t.simpleAngle=t.seedAnnotateTouch=t.seedAnnotate=t.scaleOverlayTool=t.saveAs=t.rotateTouch=t.rotateTouchDrag=t.rotate=t.rectangleRoiTouch=t.rectangleRoi=t.probeTouch=t.probe=t.panMultiTouch=t.panTouchDrag=t.pan=t.orientationMarkers=t.multiTouchDragTool=t.mouseWheelTool=t.mouseButtonTool=t.mouseButtonRectangleTool=t.magnifyTouchDrag=t.magnify=t.lengthTouch=t.length=t.keyboardTool=t.imageStats=t.highlightTouch=t.highlight=t.freehandSculpter=t.freehand=t.eraserTouch=t.eraser=t.ellipticalRoiTouch=t.ellipticalRoi=t.dragProbeTouch=void 0,t.dragProbe=t.doubleTapZoom=t.doubleTapTool=t.displayTool=t.crosshairsTouch=t.crosshairs=t.arrowAnnotateTouch=t.arrowAnnotate=t.angleTouch=t.angle=t.touchInput=t.preventGhostClick=t.mouseWheelInput=t.mouseInput=t.keyboardInput=t.touchMoveHandle=t.touchMoveAllHandles=t.moveNewHandleTouch=t.moveNewHandle=t.moveHandle=t.moveAllHandles=t.handleActivator=t.getHandleNearImagePoint=t.drawHandles=t.anyHandlesOutsideImage=t.stopClip=t.playClip=t.stackRenderers=t.scrollIndicator=t.stackPrefetch=t.stackScrollMultiTouch=t.stackScrollTouchDrag=t.stackScrollWheel=t.stackScroll=t.stackScrollKeyboard=t.appState=t.globalFrameOfReferenceSpecificToolStateManager=t.newFrameOfReferenceSpecificToolStateManager=t.globalImageIdSpecificToolStateManager=t.newImageIdSpecificToolStateManager=t.loadHandlerManager=t.addStackStateManager=t.newStackSpecificToolStateManager=t.stackSpecificStateManager=t.textStyle=t.newTimeSeriesSpecificToolStateManager=t.addTimeSeriesStateManager=t.toolColors=t.toolCoordinates=t.getElementToolStateManager=t.setElementToolStateManager=t.clearToolState=t.removeToolState=t.getToolState=t.addToolState=t.toolStyle=t.panZoomSynchronizer=t.stackImageIndexSynchronizer=t.stackImagePositionOffsetSynchronizer=t.stackImagePositionSynchronizer=t.stackScrollSynchronizer=t.Synchronizer=t.updateImageSynchronizer=t.wwwcSynchronizer=t.timeSeriesScrollTouchDrag=t.timeSeriesScrollWheel=t.timeSeriesScroll=t.timeSeriesPlayer=t.incrementTimePoint=t.probeTool4D=t.calculateEllipseStatistics=t.calculateSUV=t.copyPoints=t.drawArrow=t.drawCircle=t.drawEllipse=t.drawTextBox=t.getLuminance=t.isMobileDevice=t.getBrowserInfo=t.getMaxSimultaneousRequests=t.getDefaultSimultaneousRequests=t.getRGBPixels=t.isMouseButtonEnabled=t.makeUnselectable=t.pointInEllipse=t.pointInsideBoundingBox=t.planePlaneIntersection=t.imagePointToPatientPoint=t.projectPatientPointToImagePlane=t.roundToDecimal=t.scroll=t.scrollToIndex=t.setContextToDisplayFontSize=t.requestPoolManager=t.orientation=t.referenceLines=t.EVENTS=t.external=t.drawing=void 0;var a=n(0);Object.defineProperty(t,"external",{enumerable:!0,get:function(){return lt(a).default}});var r=n(1);Object.defineProperty(t,"EVENTS",{enumerable:!0,get:function(){return lt(r).default}});var i=n(142);Object.defineProperty(t,"referenceLines",{enumerable:!0,get:function(){return lt(i).default}});var o=n(66);Object.defineProperty(t,"orientation",{enumerable:!0,get:function(){return lt(o).default}});var l=n(44);Object.defineProperty(t,"requestPoolManager",{enumerable:!0,get:function(){return lt(l).default}});var s=n(138);Object.defineProperty(t,"setContextToDisplayFontSize",{enumerable:!0,get:function(){return lt(s).default}});var u=n(65);Object.defineProperty(t,"scrollToIndex",{enumerable:!0,get:function(){return lt(u).default}});var d=n(43);Object.defineProperty(t,"scroll",{enumerable:!0,get:function(){return lt(d).default}});var c=n(42);Object.defineProperty(t,"roundToDecimal",{enumerable:!0,get:function(){return lt(c).default}});var f=n(45);Object.defineProperty(t,"projectPatientPointToImagePlane",{enumerable:!0,get:function(){return f.projectPatientPointToImagePlane}}),Object.defineProperty(t,"imagePointToPatientPoint",{enumerable:!0,get:function(){return f.imagePointToPatientPoint}}),Object.defineProperty(t,"planePlaneIntersection",{enumerable:!0,get:function(){return f.planePlaneIntersection}});var h=n(22);Object.defineProperty(t,"pointInsideBoundingBox",{enumerable:!0,get:function(){return lt(h).default}});var m=n(41);Object.defineProperty(t,"pointInEllipse",{enumerable:!0,get:function(){return lt(m).default}});var v=n(137);Object.defineProperty(t,"makeUnselectable",{enumerable:!0,get:function(){return lt(v).default}});var g=n(5);Object.defineProperty(t,"isMouseButtonEnabled",{enumerable:!0,get:function(){return lt(g).default}});var p=n(40);Object.defineProperty(t,"getRGBPixels",{enumerable:!0,get:function(){return lt(p).default}});var b=n(33);Object.defineProperty(t,"getDefaultSimultaneousRequests",{enumerable:!0,get:function(){return b.getDefaultSimultaneousRequests}}),Object.defineProperty(t,"getMaxSimultaneousRequests",{enumerable:!0,get:function(){return b.getMaxSimultaneousRequests}}),Object.defineProperty(t,"getBrowserInfo",{enumerable:!0,get:function(){return b.getBrowserInfo}}),Object.defineProperty(t,"isMobileDevice",{enumerable:!0,get:function(){return b.isMobileDevice}});var y=n(64);Object.defineProperty(t,"getLuminance",{enumerable:!0,get:function(){return lt(y).default}});var w=n(11);Object.defineProperty(t,"drawTextBox",{enumerable:!0,get:function(){return lt(w).default}});var _=n(136);Object.defineProperty(t,"drawEllipse",{enumerable:!0,get:function(){return lt(_).default}});var E=n(135);Object.defineProperty(t,"drawCircle",{enumerable:!0,get:function(){return lt(E).default}});var x=n(63);Object.defineProperty(t,"drawArrow",{enumerable:!0,get:function(){return lt(x).default}});var T=n(39);Object.defineProperty(t,"copyPoints",{enumerable:!0,get:function(){return lt(T).default}});var P=n(20);Object.defineProperty(t,"calculateSUV",{enumerable:!0,get:function(){return lt(P).default}});var O=n(62);Object.defineProperty(t,"calculateEllipseStatistics",{enumerable:!0,get:function(){return lt(O).default}});var S=n(134);Object.defineProperty(t,"probeTool4D",{enumerable:!0,get:function(){return lt(S).default}});var I=n(36);Object.defineProperty(t,"incrementTimePoint",{enumerable:!0,get:function(){return lt(I).default}});var M=n(131);Object.defineProperty(t,"timeSeriesPlayer",{enumerable:!0,get:function(){return lt(M).default}});var C=n(130);Object.defineProperty(t,"timeSeriesScroll",{enumerable:!0,get:function(){return C.timeSeriesScroll}}),Object.defineProperty(t,"timeSeriesScrollWheel",{enumerable:!0,get:function(){return C.timeSeriesScrollWheel}}),Object.defineProperty(t,"timeSeriesScrollTouchDrag",{enumerable:!0,get:function(){return C.timeSeriesScrollTouchDrag}});var L=n(129);Object.defineProperty(t,"wwwcSynchronizer",{enumerable:!0,get:function(){return lt(L).default}});var D=n(128);Object.defineProperty(t,"updateImageSynchronizer",{enumerable:!0,get:function(){return lt(D).default}});var A=n(127);Object.defineProperty(t,"Synchronizer",{enumerable:!0,get:function(){return lt(A).default}});var j=n(126);Object.defineProperty(t,"stackScrollSynchronizer",{enumerable:!0,get:function(){return lt(j).default}});var k=n(125);Object.defineProperty(t,"stackImagePositionSynchronizer",{enumerable:!0,get:function(){return lt(k).default}});var R=n(124);Object.defineProperty(t,"stackImagePositionOffsetSynchronizer",{enumerable:!0,get:function(){return lt(R).default}});var U=n(123);Object.defineProperty(t,"stackImageIndexSynchronizer",{enumerable:!0,get:function(){return lt(U).default}});var N=n(122);Object.defineProperty(t,"panZoomSynchronizer",{enumerable:!0,get:function(){return lt(N).default}});var B=n(15);Object.defineProperty(t,"toolStyle",{enumerable:!0,get:function(){return lt(B).default}});var H=n(2);Object.defineProperty(t,"addToolState",{enumerable:!0,get:function(){return H.addToolState}}),Object.defineProperty(t,"getToolState",{enumerable:!0,get:function(){return H.getToolState}}),Object.defineProperty(t,"removeToolState",{enumerable:!0,get:function(){return H.removeToolState}}),Object.defineProperty(t,"clearToolState",{enumerable:!0,get:function(){return H.clearToolState}}),Object.defineProperty(t,"setElementToolStateManager",{enumerable:!0,get:function(){return H.setElementToolStateManager}}),Object.defineProperty(t,"getElementToolStateManager",{enumerable:!0,get:function(){return H.getElementToolStateManager}});var F=n(38);Object.defineProperty(t,"toolCoordinates",{enumerable:!0,get:function(){return lt(F).default}});var V=n(7);Object.defineProperty(t,"toolColors",{enumerable:!0,get:function(){return lt(V).default}});var z=n(121);Object.defineProperty(t,"addTimeSeriesStateManager",{enumerable:!0,get:function(){return z.addTimeSeriesStateManager}}),Object.defineProperty(t,"newTimeSeriesSpecificToolStateManager",{enumerable:!0,get:function(){return z.newTimeSeriesSpecificToolStateManager}});var W=n(21);Object.defineProperty(t,"textStyle",{enumerable:!0,get:function(){return lt(W).default}});var G=n(120);Object.defineProperty(t,"stackSpecificStateManager",{enumerable:!0,get:function(){return G.stackSpecificStateManager}}),Object.defineProperty(t,"newStackSpecificToolStateManager",{enumerable:!0,get:function(){return G.newStackSpecificToolStateManager}}),Object.defineProperty(t,"addStackStateManager",{enumerable:!0,get:function(){return G.addStackStateManager}});var q=n(13);Object.defineProperty(t,"loadHandlerManager",{enumerable:!0,get:function(){return lt(q).default}});var Y=n(26);Object.defineProperty(t,"newImageIdSpecificToolStateManager",{enumerable:!0,get:function(){return Y.newImageIdSpecificToolStateManager}}),Object.defineProperty(t,"globalImageIdSpecificToolStateManager",{enumerable:!0,get:function(){return Y.globalImageIdSpecificToolStateManager}});var Z=n(119);Object.defineProperty(t,"newFrameOfReferenceSpecificToolStateManager",{enumerable:!0,get:function(){return Z.newFrameOfReferenceSpecificToolStateManager}}),Object.defineProperty(t,"globalFrameOfReferenceSpecificToolStateManager",{enumerable:!0,get:function(){return Z.globalFrameOfReferenceSpecificToolStateManager}});var K=n(118);Object.defineProperty(t,"appState",{enumerable:!0,get:function(){return lt(K).default}});var X=n(117);Object.defineProperty(t,"stackScrollKeyboard",{enumerable:!0,get:function(){return lt(X).default}});var J=n(116);Object.defineProperty(t,"stackScroll",{enumerable:!0,get:function(){return J.stackScroll}}),Object.defineProperty(t,"stackScrollWheel",{enumerable:!0,get:function(){return J.stackScrollWheel}}),Object.defineProperty(t,"stackScrollTouchDrag",{enumerable:!0,get:function(){return J.stackScrollTouchDrag}}),Object.defineProperty(t,"stackScrollMultiTouch",{enumerable:!0,get:function(){return J.stackScrollMultiTouch}});var $=n(115);Object.defineProperty(t,"stackPrefetch",{enumerable:!0,get:function(){return lt($).default}});var Q=n(114);Object.defineProperty(t,"scrollIndicator",{enumerable:!0,get:function(){return lt(Q).default}});var ee=n(113);Object.defineProperty(t,"stackRenderers",{enumerable:!0,get:function(){return lt(ee).default}});var te=n(111);Object.defineProperty(t,"playClip",{enumerable:!0,get:function(){return te.playClip}}),Object.defineProperty(t,"stopClip",{enumerable:!0,get:function(){return te.stopClip}});var ne=n(16);Object.defineProperty(t,"anyHandlesOutsideImage",{enumerable:!0,get:function(){return lt(ne).default}});var ae=n(9);Object.defineProperty(t,"drawHandles",{enumerable:!0,get:function(){return lt(ae).default}});var re=n(25);Object.defineProperty(t,"getHandleNearImagePoint",{enumerable:!0,get:function(){return lt(re).default}});var ie=n(32);Object.defineProperty(t,"handleActivator",{enumerable:!0,get:function(){return lt(ie).default}});var oe=n(37);Object.defineProperty(t,"moveAllHandles",{enumerable:!0,get:function(){return lt(oe).default}});var le=n(31);Object.defineProperty(t,"moveHandle",{enumerable:!0,get:function(){return lt(le).default}});var se=n(30);Object.defineProperty(t,"moveNewHandle",{enumerable:!0,get:function(){return lt(se).default}});var ue=n(28);Object.defineProperty(t,"moveNewHandleTouch",{enumerable:!0,get:function(){return lt(ue).default}});var de=n(60);Object.defineProperty(t,"touchMoveAllHandles",{enumerable:!0,get:function(){return lt(de).default}});var ce=n(59);Object.defineProperty(t,"touchMoveHandle",{enumerable:!0,get:function(){return lt(ce).default}});var fe=n(110);Object.defineProperty(t,"keyboardInput",{enumerable:!0,get:function(){return lt(fe).default}});var he=n(109);Object.defineProperty(t,"mouseInput",{enumerable:!0,get:function(){return lt(he).default}});var me=n(108);Object.defineProperty(t,"mouseWheelInput",{enumerable:!0,get:function(){return lt(me).default}});var ve=n(58);Object.defineProperty(t,"preventGhostClick",{enumerable:!0,get:function(){return lt(ve).default}});var ge=n(107);Object.defineProperty(t,"touchInput",{enumerable:!0,get:function(){return lt(ge).default}});var pe=n(106);Object.defineProperty(t,"angle",{enumerable:!0,get:function(){return pe.angle}}),Object.defineProperty(t,"angleTouch",{enumerable:!0,get:function(){return pe.angleTouch}});var be=n(105);Object.defineProperty(t,"arrowAnnotate",{enumerable:!0,get:function(){return be.arrowAnnotate}}),Object.defineProperty(t,"arrowAnnotateTouch",{enumerable:!0,get:function(){return be.arrowAnnotateTouch}});var ye=n(103);Object.defineProperty(t,"crosshairs",{enumerable:!0,get:function(){return ye.crosshairs}}),Object.defineProperty(t,"crosshairsTouch",{enumerable:!0,get:function(){return ye.crosshairsTouch}});var we=n(24);Object.defineProperty(t,"displayTool",{enumerable:!0,get:function(){return lt(we).default}});var _e=n(57);Object.defineProperty(t,"doubleTapTool",{enumerable:!0,get:function(){return lt(_e).default}});var Ee=n(102);Object.defineProperty(t,"doubleTapZoom",{enumerable:!0,get:function(){return lt(Ee).default}});var xe=n(101);Object.defineProperty(t,"dragProbe",{enumerable:!0,get:function(){return xe.dragProbe}}),Object.defineProperty(t,"dragProbeTouch",{enumerable:!0,get:function(){return xe.dragProbeTouch}});var Te=n(100);Object.defineProperty(t,"ellipticalRoi",{enumerable:!0,get:function(){return Te.ellipticalRoi}}),Object.defineProperty(t,"ellipticalRoiTouch",{enumerable:!0,get:function(){return Te.ellipticalRoiTouch}});var Pe=n(99);Object.defineProperty(t,"eraser",{enumerable:!0,get:function(){return Pe.eraser}}),Object.defineProperty(t,"eraserTouch",{enumerable:!0,get:function(){return Pe.eraserTouch}});var Oe=n(23);Object.defineProperty(t,"freehand",{enumerable:!0,get:function(){return Oe.freehand}});var Se=n(52);Object.defineProperty(t,"freehandSculpter",{enumerable:!0,get:function(){return Se.freehandSculpter}});var Ie=n(90);Object.defineProperty(t,"highlight",{enumerable:!0,get:function(){return Ie.highlight}}),Object.defineProperty(t,"highlightTouch",{enumerable:!0,get:function(){return Ie.highlightTouch}});var Me=n(89);Object.defineProperty(t,"imageStats",{enumerable:!0,get:function(){return lt(Me).default}});var Ce=n(61);Object.defineProperty(t,"keyboardTool",{enumerable:!0,get:function(){return lt(Ce).default}});var Le=n(88);Object.defineProperty(t,"length",{enumerable:!0,get:function(){return Le.length}}),Object.defineProperty(t,"lengthTouch",{enumerable:!0,get:function(){return Le.lengthTouch}});var De=n(87);Object.defineProperty(t,"magnify",{enumerable:!0,get:function(){return De.magnify}}),Object.defineProperty(t,"magnifyTouchDrag",{enumerable:!0,get:function(){return De.magnifyTouchDrag}});var Ae=n(51);Object.defineProperty(t,"mouseButtonRectangleTool",{enumerable:!0,get:function(){return lt(Ae).default}});var je=n(10);Object.defineProperty(t,"mouseButtonTool",{enumerable:!0,get:function(){return lt(je).default}});var ke=n(29);Object.defineProperty(t,"mouseWheelTool",{enumerable:!0,get:function(){return lt(ke).default}});var Re=n(35);Object.defineProperty(t,"multiTouchDragTool",{enumerable:!0,get:function(){return lt(Re).default}});var Ue=n(86);Object.defineProperty(t,"orientationMarkers",{enumerable:!0,get:function(){return lt(Ue).default}});var Ne=n(85);Object.defineProperty(t,"pan",{enumerable:!0,get:function(){return Ne.pan}}),Object.defineProperty(t,"panTouchDrag",{enumerable:!0,get:function(){return Ne.panTouchDrag}});var Be=n(84);Object.defineProperty(t,"panMultiTouch",{enumerable:!0,get:function(){return lt(Be).default}});var He=n(83);Object.defineProperty(t,"probe",{enumerable:!0,get:function(){return He.probe}}),Object.defineProperty(t,"probeTouch",{enumerable:!0,get:function(){return He.probeTouch}});var Fe=n(82);Object.defineProperty(t,"rectangleRoi",{enumerable:!0,get:function(){return Fe.rectangleRoi}}),Object.defineProperty(t,"rectangleRoiTouch",{enumerable:!0,get:function(){return Fe.rectangleRoiTouch}});var Ve=n(81);Object.defineProperty(t,"rotate",{enumerable:!0,get:function(){return Ve.rotate}}),Object.defineProperty(t,"rotateTouchDrag",{enumerable:!0,get:function(){return Ve.rotateTouchDrag}});var ze=n(80);Object.defineProperty(t,"rotateTouch",{enumerable:!0,get:function(){return lt(ze).default}});var We=n(79);Object.defineProperty(t,"saveAs",{enumerable:!0,get:function(){return lt(We).default}});var Ge=n(78);Object.defineProperty(t,"scaleOverlayTool",{enumerable:!0,get:function(){return lt(Ge).default}});var qe=n(77);Object.defineProperty(t,"seedAnnotate",{enumerable:!0,get:function(){return qe.seedAnnotate}}),Object.defineProperty(t,"seedAnnotateTouch",{enumerable:!0,get:function(){return qe.seedAnnotateTouch}});var Ye=n(76);Object.defineProperty(t,"simpleAngle",{enumerable:!0,get:function(){return Ye.simpleAngle}}),Object.defineProperty(t,"simpleAngleTouch",{enumerable:!0,get:function(){return Ye.simpleAngleTouch}});var Ze=n(14);Object.defineProperty(t,"simpleMouseButtonTool",{enumerable:!0,get:function(){return lt(Ze).default}});var Ke=n(75);Object.defineProperty(t,"textMarker",{enumerable:!0,get:function(){return Ke.textMarker}}),Object.defineProperty(t,"textMarkerTouch",{enumerable:!0,get:function(){return Ke.textMarkerTouch}});var Xe=n(18);Object.defineProperty(t,"touchDragTool",{enumerable:!0,get:function(){return lt(Xe).default}});var Je=n(50);Object.defineProperty(t,"touchPinchTool",{enumerable:!0,get:function(){return lt(Je).default}});var $e=n(12);Object.defineProperty(t,"touchTool",{enumerable:!0,get:function(){return lt($e).default}});var Qe=n(74);Object.defineProperty(t,"wwwc",{enumerable:!0,get:function(){return Qe.wwwc}}),Object.defineProperty(t,"wwwcTouchDrag",{enumerable:!0,get:function(){return Qe.wwwcTouchDrag}});var et=n(73);Object.defineProperty(t,"wwwcRegion",{enumerable:!0,get:function(){return et.wwwcRegion}}),Object.defineProperty(t,"wwwcRegionTouch",{enumerable:!0,get:function(){return et.wwwcRegionTouch}});var tt=n(72);Object.defineProperty(t,"zoom",{enumerable:!0,get:function(){return tt.zoom}}),Object.defineProperty(t,"zoomWheel",{enumerable:!0,get:function(){return tt.zoomWheel}}),Object.defineProperty(t,"zoomTouchPinch",{enumerable:!0,get:function(){return tt.zoomTouchPinch}}),Object.defineProperty(t,"zoomTouchDrag",{enumerable:!0,get:function(){return tt.zoomTouchDrag}});var nt=n(71);Object.defineProperty(t,"brush",{enumerable:!0,get:function(){return nt.brush}});var at=n(70);Object.defineProperty(t,"adaptiveBrush",{enumerable:!0,get:function(){return at.adaptiveBrush}});var rt=n(69);Object.defineProperty(t,"version",{enumerable:!0,get:function(){return lt(rt).default}});var it=n(4);Object.defineProperty(t,"setToolOptions",{enumerable:!0,get:function(){return it.setToolOptions}}),Object.defineProperty(t,"getToolOptions",{enumerable:!0,get:function(){return it.getToolOptions}});var ot=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(3));function lt(e){return e&&e.__esModule?e:{default:e}}t.drawing=ot},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.drawBrushOnCanvas=t.drawBrushPixels=void 0;var a,r=n(0),i=(a=r)&&a.__esModule?a:{default:a},o=n(3);t.drawBrushPixels=function(e,t,n,a){e.forEach(function(e){var r,i=(r=e[0],e[1]*a+r);t[i]=n})},t.drawBrushOnCanvas=function(e,t,n,a){var r=i.default.cornerstone.pixelToCanvas(a,{x:0,y:0}),l=i.default.cornerstone.pixelToCanvas(a,{x:1,y:1}),s=l.x-r.x,u=l.y-r.y;(0,o.draw)(t,function(t){e.forEach(function(e){var r=i.default.cornerstone.pixelToCanvas(a,{x:e[0],y:e[1]}),l={left:r.x,top:r.y,width:s,height:u};(0,o.fillBox)(t,l,n)})})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){var a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,i=Math.round(a),o=Math.round(r);if(1===e)return[[i,o]];for(var l=[],s=0,u=-e;u<=e;u++){var d=o+u;if(!(d>t||d<0))for(var c=-e;c<=e;c++){var f=i+c;f>n||f<0||c*c+u*u<e*e&&(l[s++]=[i+c,o+u])}}return l}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=e.toolType;function n(e){var t=e.detail,n=!1;n=function(e){var t=e.keyCode,n=!1;return 109===t||173===t?(v(),n=!0):61!==t&&107!==t||(m(),n=!0),n}(t)||n,(n=function(e){var t=e.keyCode,n=!1;return 219===t?(p(),n=!0):221===t&&(g(),n=!0),n}(t)||n)&&r.default.cornerstone.updateImage(t.element)}function d(e){var t=T.getConfiguration(),n=r.default.cornerstone.colors.getColormap(t.colormapId);t.draw=e;var a=n.getColor(t.draw);t.hoverColor="rgba("+a[[0]]+", "+a[[1]]+", "+a[[2]]+", 1.0 )",t.dragColor="rgba("+a[[0]]+", "+a[[1]]+", "+a[[2]]+", 0.8 )"}function m(){var e=T.getConfiguration();e.radius=(0,u.default)(e.radius+1,e.minRadius,e.maxRadius)}function v(){var e=T.getConfiguration();e.radius=(0,u.default)(e.radius-1,e.minRadius,e.maxRadius)}function g(){var e=T.getConfiguration(),t=b(),n=e.draw+1;n===t&&(n=0),d(n)}function p(){var e=T.getConfiguration(),t=b(),n=e.draw-1;n<0&&(n=t-1),d(n)}function b(){var e=T.getConfiguration(),t=r.default.cornerstone.colors.getColormap(e.colormapId);return t.getNumberOfColors()}function y(t){e.onMouseMove(t)}function w(t){var n=t.detail,r=n.element;e.onMouseUp(t),r.removeEventListener(a.default.MOUSE_DRAG,y),r.removeEventListener(a.default.MOUSE_DRAG,_),r.removeEventListener(a.default.MOUSE_UP,w),r.removeEventListener(a.default.MOUSE_CLICK,w)}function _(t){return e.onDrag(t),!1}function E(n){var r=n.detail,i=r.element,o=(0,s.getToolOptions)(t,i);if((0,l.default)(r.which,o.mouseButtonMask))return i.addEventListener(a.default.MOUSE_DRAG,_),i.addEventListener(a.default.MOUSE_UP,w),i.addEventListener(a.default.MOUSE_CLICK,w),e.onMouseDown(n),!1;i.addEventListener(a.default.MOUSE_DRAG,y),i.addEventListener(a.default.MOUSE_UP,w)}function x(t){var n=t.detail,a=n.element,o=(0,i.getToolState)(a,c),l=void 0;o?l=o.data[0].pixelData:(l=new Uint8ClampedArray(n.image.width*n.image.height),(0,i.addToolState)(a,c,{pixelData:l}));var s=r.default.cornerstone.getLayer(n.element,f);s.image.setPixelData(l),s.invalid=!0,r.default.cornerstone.updateImage(a),e.onImageRendered(t)}var T=(0,o.default)({mouseMoveCallback:y,mouseDownActivateCallback:E,onImageRendered:x,deactivate:function(e){e.removeEventListener(a.default.IMAGE_RENDERED,x),e.removeEventListener(a.default.MOUSE_DOWN_ACTIVATE,E),e.removeEventListener(a.default.MOUSE_MOVE,y),e.removeEventListener(a.default.KEY_DOWN,n),e.addEventListener(a.default.IMAGE_RENDERED,x),T.getConfiguration().active=!1}});return T.keyDownCallback=n,T.activate=function(e,o){(0,s.setToolOptions)(t,e,{mouseButtonMask:o}),e.removeEventListener(a.default.IMAGE_RENDERED,x),e.addEventListener(a.default.IMAGE_RENDERED,x),e.removeEventListener(a.default.MOUSE_DOWN_ACTIVATE,E),e.addEventListener(a.default.MOUSE_DOWN_ACTIVATE,E),e.removeEventListener(a.default.MOUSE_MOVE,y),e.addEventListener(a.default.MOUSE_MOVE,y),e.removeEventListener(a.default.KEY_DOWN,n),e.addEventListener(a.default.KEY_DOWN,n);var l=r.default.cornerstone.getEnabledElement(e),u=l.image,d=u.width,m=u.height,v=new Uint8ClampedArray(d*m),g=T.getConfiguration();g.active=!0;var p=g.colormapId;if(!p){var b=T.getConfiguration();(function(e){var t=r.default.cornerstone.colors.getColormap(e);t.setNumberOfColors(20),t.setColor(0,[255,255,255,0]),t.setColor(1,[230,25,75,102]),t.setColor(2,[60,180,175,102]),t.setColor(3,[255,225,25,102]),t.setColor(4,[0,130,200,102]),t.setColor(5,[245,130,48,102]),t.setColor(6,[145,30,180,102]),t.setColor(7,[70,240,240,102]),t.setColor(8,[240,50,230,102]),t.setColor(9,[210,245,60,102]),t.setColor(10,[250,190,190,102]),t.setColor(11,[0,128,128,102]),t.setColor(12,[230,190,255,102]),t.setColor(13,[170,110,40,102]),t.setColor(14,[255,250,200,102]),t.setColor(15,[128,0,0,102]),t.setColor(16,[170,255,195,102]),t.setColor(17,[128,128,0,102]),t.setColor(18,[255,215,180,102]),t.setColor(19,[0,0,128,102])})(p="BrushColorMap"),b.colormapId=p}var w={minPixelValue:0,maxPixelValue:1,slope:1,intercept:0,getPixelData:function(){return v},rows:l.image.height,columns:l.image.width,height:m,width:d,pixelData:v,setPixelData:function(e){v=e},colormap:p,color:!1,rgba:!1,labelmap:!0,invert:!1,columnPixelSpacing:1,rowPixelSpacing:1,sizeInBytes:l.image.width*l.image.height},_=void 0;h||(h=r.default.cornerstone.addLayer(e,r.default.cornerstone.getEnabledElement(e).image)),f&&(_=r.default.cornerstone.getLayer(e,f)),_||(f=r.default.cornerstone.addLayer(e,w,{viewport:{pixelReplication:!0}})),(0,i.addToolState)(e,c,{pixelData:v}),g.brushLayerId=f,T.setConfiguration(g),r.default.cornerstone.updateImage(e)},T.changeDrawColor=d,T.increaseRadius=m,T.decreaseRadius=v,T.nextSegmentation=g,T.previousSegmentation=p,T};var a=d(n(1)),r=d(n(0)),i=n(2),o=d(n(10)),l=d(n(5)),s=n(4),u=d(n(8));function d(e){return e&&e.__esModule?e:{default:e}}var c="brush",f=void 0,h=void 0},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return{activate:function(t){t.removeEventListener(i.default.TOUCH_PINCH,e),t.addEventListener(i.default.TOUCH_PINCH,e)},disable:function(t){t.removeEventListener(i.default.TOUCH_PINCH,e)},enable:function(t){t.removeEventListener(i.default.TOUCH_PINCH,e)},deactivate:function(t){t.removeEventListener(i.default.TOUCH_PINCH,e)}}};var a,r=n(1),i=(a=r)&&a.__esModule?a:{default:a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var n=e.toolType;function m(r){var i=r.detail,o=i.element,l=(0,h.getToolOptions)(n,o);if((0,c.default)(i.which,l.mouseButtonMask))return function(r){var i=r.element,o=e.createNewMeasurement(r);o&&((0,f.addToolState)(r.element,n,o),i.removeEventListener(a.default.MOUSE_MOVE,v),(0,s.default)(r,n,o,o.handles.end,function(){o.active=!1,(0,d.default)(r,o.handles)&&(0,f.removeToolState)(r.element,n,o),i.addEventListener(a.default.MOUSE_MOVE,v)},t))}(i),!1}function v(t){var a=t.detail;i.default.setCoords(a);var o=(0,f.getToolState)(a.element,n);if(void 0!==o){for(var s=!1,u=a.currentPoints.canvas,d=0;d<o.data.length;d++){var c=o.data[d];!0===(0,l.default)(a.element,c.handles,u)&&(s=!0),(e.pointInsideRect(a.element,c,u)&&!c.active||!e.pointInsideRect(a.element,c,u)&&c.active)&&(c.active=!c.active,s=!0)}!0===s&&r.default.cornerstone.updateImage(a.element)}}function g(i){var l=i.detail,m=l.element,g=r.default.cornerstone,p=void 0,b=(0,h.getToolOptions)(n,m);if((0,c.default)(l.which,b.mouseButtonMask)){var y=l.startPoints.canvas,w=(0,f.getToolState)(i.currentTarget,n),_=void 0;if(void 0!==w)for(_=0;_<w.data.length;_++){p=w.data[_];var E=(0,o.default)(l.element,p.handles,y,25);if(void 0!==E)return m.removeEventListener(a.default.MOUSE_MOVE,v),p.active=!0,(0,s.default)(l,n,p,E,T,t),i.stopImmediatePropagation(),!1}var x={deleteIfHandleOutsideImage:!0,preventHandleOutsideImage:t};if(void 0!==w&&void 0!==e.pointInsideRect)for(_=0;_<w.data.length;_++)if(p=w.data[_],e.pointInsideRect(l.element,p,y))return m.removeEventListener(a.default.MOUSE_MOVE,v),(0,u.default)(i,p,w,n,x,T),m.addEventListener(a.default.MOUSE_MOVE,v),i.stopImmediatePropagation(),!1}function T(){p.active=!1,(0,d.default)(l,p.handles)&&(0,f.removeToolState)(l.element,n,p),g.updateImage(l.element),m.addEventListener(a.default.MOUSE_MOVE,v)}}return{enable:function(t){t.removeEventListener(a.default.IMAGE_RENDERED,e.onImageRendered),t.removeEventListener(a.default.MOUSE_MOVE,v),t.removeEventListener(a.default.MOUSE_DOWN,g),t.removeEventListener(a.default.MOUSE_DOWN_ACTIVATE,m),t.addEventListener(a.default.IMAGE_RENDERED,e.onImageRendered),r.default.cornerstone.updateImage(t)},disable:function(t){t.removeEventListener(a.default.IMAGE_RENDERED,e.onImageRendered),t.removeEventListener(a.default.MOUSE_MOVE,v),t.removeEventListener(a.default.MOUSE_DOWN,g),t.removeEventListener(a.default.MOUSE_DOWN_ACTIVATE,m),r.default.cornerstone.updateImage(t)},activate:function(t,i){(0,h.setToolOptions)(n,t,{mouseButtonMask:i}),t.removeEventListener(a.default.IMAGE_RENDERED,e.onImageRendered),t.removeEventListener(a.default.MOUSE_MOVE,v),t.removeEventListener(a.default.MOUSE_DOWN,g),t.removeEventListener(a.default.MOUSE_DOWN_ACTIVATE,m),t.addEventListener(a.default.IMAGE_RENDERED,e.onImageRendered),t.addEventListener(a.default.MOUSE_MOVE,v),t.addEventListener(a.default.MOUSE_DOWN,g),t.addEventListener(a.default.MOUSE_DOWN_ACTIVATE,m),r.default.cornerstone.updateImage(t)},deactivate:function(t,i){(0,h.setToolOptions)(n,t,{mouseButtonMask:i}),t.removeEventListener(a.default.IMAGE_RENDERED,e.onImageRendered),t.removeEventListener(a.default.MOUSE_MOVE,v),t.removeEventListener(a.default.MOUSE_DOWN,g),t.removeEventListener(a.default.MOUSE_DOWN_ACTIVATE,m),t.addEventListener(a.default.IMAGE_RENDERED,e.onImageRendered),t.addEventListener(a.default.MOUSE_MOVE,v),t.addEventListener(a.default.MOUSE_DOWN,g),r.default.cornerstone.updateImage(t)}}};var a=m(n(1)),r=m(n(0)),i=m(n(38)),o=m(n(25)),l=m(n(32)),s=m(n(31)),u=m(n(37)),d=m(n(16)),c=m(n(5)),f=n(2),h=n(4);function m(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.freehandSculpter=void 0;var a=m(n(1)),r=m(n(0)),i=n(23),o=m(n(7)),l=m(n(9)),s=m(n(5)),u=n(2),d=n(4),c=n(8),f=n(55),h=n(53);function m(e){return e&&e.__esModule?e:{default:e}}var v=new(n(91).Sculpter),g="freehandSculpter",p="freehand",b={mouseLocation:{handles:{start:{highlight:!0,active:!0}}},keyDown:{shift:!1,ctrl:!1,alt:!1},active:!1,minSpacing:5,maxSpacing:20,toolSizeImage:null,toolSizeCanvas:null,currentTool:null,color:o.default.getActiveColor()};function y(e){var t=e.detail,n=t.element,i=(0,d.getToolOptions)(g,n),o=I.getConfiguration(),l=!1;if(!(0,s.default)(t.which,i.mouseButtonMask))return e.stopPropagation(),void e.preventDefault();t.event.ctrlKey?(function(e){var t=I.getConfiguration(),n=e.element,a=new h.FreehandLineFinder(e).findTool();t.currentTool=a,function(e,t){for(var n=(0,u.getToolState)(e,p),a=0;a<n.data.length;a++)n.data[a].active=a===t}(n,a)}(t),l=!0):null!==o.currentTool&&(function(e){var t=I.getConfiguration(),n=e.element;(function(e){for(var t=I.getConfiguration(),n=t.currentTool,a=(0,u.getToolState)(e.element,p).data[n].handles,i=e.currentPoints.image,o=e.currentPoints.canvas,l=1/0,s=1/0,d=0;d<a.length;d++){var c=a[d],f=r.default.cornerstoneMath.point.distance(c,i);if(f<l){l=f;var h=r.default.cornerstone.pixelToCanvas(e.element,a[d]);s=r.default.cornerstoneMath.point.distance(h,o)}}t.toolSizeImage=l,t.toolSizeCanvas=s})(e),t.active=!0,T(e),n.addEventListener(a.default.MOUSE_UP,_),n.addEventListener(a.default.MOUSE_CLICK,_),n.addEventListener(a.default.MOUSE_DRAG,w)}(t),l=!0),l&&r.default.cornerstone.updateImage(t.element)}function w(e){var t=e.detail,n=(0,u.getToolState)(t.element,p);if(n){var a=I.getConfiguration(),i=n.data[a.currentTool].handles;T(t),v.sculpt(t,i),r.default.cornerstone.updateImage(t.element)}}function _(e){var t=e.detail,n=t.element,i=I.getConfiguration();n.removeEventListener(a.default.MOUSE_UP,_),n.removeEventListener(a.default.MOUSE_DRAG,w),n.removeEventListener(a.default.MOUSE_CLICK,_),i.active=!1,e.preventDefault(),e.stopPropagation(),function(e){var t=I.getConfiguration(),n=e.element;(0,u.getToolState)(n,p).data[t.currentTool].invalidated=!0,r.default.cornerstone.updateImage(n)}(t)}function E(e){x(e.detail.element)}function x(e){var t=I.getConfiguration(),n=(0,u.getToolState)(e,p);if(t.currentTool=null,n)for(var a=0;a<n.data.length;a++)n.data[a].active=!1;r.default.cornerstone.updateImage(e)}function T(e){var t=I.getConfiguration();t.mouseLocation.handles.start.x=e.currentPoints.image.x,t.mouseLocation.handles.start.y=e.currentPoints.image.y,(0,c.clipToBox)(t.mouseLocation.handles.start,e.image)}function P(e){var t=e.detail,n=t.canvasContext.canvas.getContext("2d"),a=I.getConfiguration();if(a.active){var r={fill:null,handleRadius:a.toolSizeCanvas};(0,l.default)(n,t,a.mouseLocation.handles,a.color,r)}}function O(e){x(e),S(e)}function S(e){e.removeEventListener(a.default.IMAGE_RENDERED,P),e.removeEventListener(a.default.MOUSE_DOWN,y),e.removeEventListener(a.default.MOUSE_DRAG,w),e.removeEventListener(a.default.MOUSE_UP,_),e.removeEventListener(a.default.KEY_DOWN,f.keyDownCallback),e.removeEventListener(a.default.KEY_UP,f.keyUpCallback),e.removeEventListener(a.default.NEW_IMAGE,E)}var I={enable:function(e){O(e)},disable:O,activate:function(e,t){(0,d.setToolOptions)(g,e,{mouseButtonMask:t}),i.freehand.enable(e),S(e),e.addEventListener(a.default.IMAGE_RENDERED,P),e.addEventListener(a.default.MOUSE_DOWN,y),e.addEventListener(a.default.KEY_DOWN,f.keyDownCallback),e.addEventListener(a.default.KEY_UP,f.keyUpCallback),e.addEventListener(a.default.NEW_IMAGE,E),e.focus(),r.default.cornerstone.updateImage(e)},deactivate:function(e){O(e)},getConfiguration:function(){return b},setConfiguration:function(e){b=e}};t.freehandSculpter=I},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FreehandLineFinder=void 0;var a,r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),i=n(2),o=n(0),l=(a=o)&&a.__esModule?a:{default:a},s=n(95);t.FreehandLineFinder=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._eventData=t}return r(e,[{key:"findLine",value:function(){var e=this.findTool();if(null===e)return null;var t=this._getCloseLinesInTool(e);return t?this._findCorrectLine(e,t):null}},{key:"findTool",value:function(){return this._toolData=(0,i.getToolState)(this._eventData.element,"freehand"),this._mousePoint=this._eventData.currentPoints.canvas,this._toolData?this._nearestHandleToPointAllTools().toolIndex:null}},{key:"_nearestHandleToPointAllTools",value:function(){for(var e=this._toolData,t={toolIndex:null,handleIndex:null,distance:1/0},n=0;n<e.data.length;n++){var a=this._nearestHandleToPoint(n);null!==a&&a.distance<t.distance&&(t=a)}return t}},{key:"_nearestHandleToPoint",value:function(e){var t=this._eventData,n=this._toolData.data[e];if(void 0===n.handles)return null;if(!1===n.visible)return null;for(var a={toolIndex:e,handleIndex:null,distance:1/0},r=0;r<n.handles.length;r++){var i=l.default.cornerstone.pixelToCanvas(t.element,n.handles[r]),o=l.default.cornerstoneMath.point.distance(i,this._mousePoint);o<a.distance&&(a.handleIndex=r,a.distance=o)}return a}},{key:"_getCloseLinesInTool",value:function(t){for(var n=this._toolData.data[t].handles,a=[],r=0;r<n.length;r++){var i=e.getNextHandleIndex(r,n.length);this._distanceOfPointfromLine(n[r],n[i])<10&&a.push([r,i])}return a}},{key:"_findCorrectLine",value:function(e,t){for(var n=0;n<t.length;n++)if(this._pointProjectsToLineSegment(e,t[n]))return new s.ClickedLineData(e,t[n]);return null}},{key:"_pointProjectsToLineSegment",value:function(t,n){var a=this._eventData,r=this._toolData.data[t];if(void 0!==r.handles){if(!1===r.visible)return!1;var i=r.handles[n[0]],o=r.handles[n[1]],l=e.getCanvasPointsFromHandles(i,o,a.element),s=e.getLineAsVector(l),u=this._getLineOriginToMouseAsVector(l),d=(u[0]*s[0]+u[1]*s[1])/s.magnitude;return d>0&&d<s.magnitude}}},{key:"_getLineOriginToMouseAsVector",value:function(e){return[this._mousePoint.x-e[0].x,this._mousePoint.y-e[0].y]}},{key:"_distanceOfPointfromLine",value:function(e,t){var n=this._eventData,a=l.default.cornerstone.pixelToCanvas(n.element,e),r=l.default.cornerstone.pixelToCanvas(n.element,t),i=this._mousePoint;return Math.abs((r.y-a.y)*i.x-(r.x-a.x)*i.y+r.x*a.y-r.y*a.x)/l.default.cornerstoneMath.point.distance(a,r)}}],[{key:"getCanvasPointsFromHandles",value:function(e,t,n){var a=[];return e.x<t.x?(a.push(l.default.cornerstone.pixelToCanvas(n,e)),a.push(l.default.cornerstone.pixelToCanvas(n,t))):(a.push(l.default.cornerstone.pixelToCanvas(n,t)),a.push(l.default.cornerstone.pixelToCanvas(n,e))),a}},{key:"getLineAsVector",value:function(e){var t=[e[1].x-e[0].x,e[1].y-e[0].y];return t.magnitude=l.default.cornerstoneMath.point.distance(e[0],e[1]),t}},{key:"getNextHandleIndex",value:function(e,t){return e<t-1?e+1:0}}]),e}()},function(e,t,n){"use strict";function a(e,t,n,a){for(var o=e.length-1,l=0;l<e.length;l++)if(-1===a.indexOf(l)&&-1===a.indexOf(o)){if(r(t,n,i(e[o]),i(e[l])))return!0;o=l}else o=l;return!1}function r(e,t,n,a){var r=!1,i=[o(e,t,n),o(e,t,a),o(n,a,e),o(n,a,t)];return i[0]!==i[1]&&i[2]!==i[3]||(0===i[0]&&l(e,n,t)?r=!0:0===i[1]&&l(e,a,t)?r=!0:0===i[2]&&l(n,e,a)?r=!0:0===i[3]&&l(n,t,a)&&(r=!0),r)}function i(e){return{x:e.x,y:e.y}}function o(e,t,n){var a=(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y);return 0===a?0:a>0?1:2}function l(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}Object.defineProperty(t,"__esModule",{value:!0});var s={newHandle:function(e,t){var n=t.length-1;return a(t,i(t[n]),i(e),[n])},end:function(e){var t=e.length-1;return a(e,i(e[t]),i(e[0]),[t,0])},modify:function(e,t){var n=i(e[t]),r=t-1;0===t&&(r=e.length-1);var o=i(e[r]);return!!a(e,n,o,[t,r])||a(e,n,o=i(e[r=t===e.length-1?0:t+1]),[t,r])}};t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.keyDownCallback=function(e){var t=e.detail,n=o.freehand.getConfiguration(),a=t.keyCode,r=!1;a===l.CTRL&&(n.keyDown.ctrl=!0,r=!0),a===l.SHIFT&&(n.keyDown.shift=!0),a===l.ALT&&(n.keyDown.alt=!0),r&&i.default.cornerstone.updateImage(t.element)},t.keyUpCallback=function(e){var t=e.detail,n=o.freehand.getConfiguration(),a=t.keyCode,r=!1;a===l.CTRL&&(n.keyDown.ctrl=!1,r=!0),a===l.SHIFT&&(n.keyDown.shift=!1),a===l.ALT&&(n.keyDown.alt=!1),r&&i.default.cornerstone.updateImage(t.element)};var a,r=n(0),i=(a=r)&&a.__esModule?a:{default:a},o=n(23),l={SHIFT:16,CTRL:17,ALT:18}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(!t)throw new Error("simpleTouchTool: toolType is required");var n={};return{activate:function(n){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};(0,o.setToolOptions)(t,n,a),n.removeEventListener(i.default.TOUCH_START,e),n.addEventListener(i.default.TOUCH_START,e)},disable:function(t){t.removeEventListener(i.default.TOUCH_START,e)},enable:function(t){t.removeEventListener(i.default.TOUCH_START,e)},deactivate:function(t){t.removeEventListener(i.default.TOUCH_START,e)},getConfiguration:function(){return n},setConfiguration:function(e){n=e}}};var a,r=n(1),i=(a=r)&&a.__esModule?a:{default:a},o=n(4)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return{activate:function(t){t.removeEventListener(i.default.DOUBLE_TAP,e),t.addEventListener(i.default.DOUBLE_TAP,e)},disable:function(t){t.removeEventListener(i.default.DOUBLE_TAP,e)},enable:function(t){t.removeEventListener(i.default.DOUBLE_TAP,e)},deactivate:function(t){t.removeEventListener(i.default.DOUBLE_TAP,e)}}};var a,r=n(1),i=(a=r)&&a.__esModule?a:{default:a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=2e3,r={mouse:0,touch:1},i=void 0,o=void 0;function l(e,t){var n=Date.now();if(e!==i){if(n-o<=a)return t.preventDefault(),t.stopPropagation(),t.stopImmediatePropagation(),!1;i=e}o=n}var s=l.bind(null,r.mouse),u=l.bind(null,r.touch);function d(e,t,n){var a=n?s:u;t.forEach(function(t){e.addEventListener(t,a)})}function c(e,t,n){var a=n?s:u;t.forEach(function(t){e.removeEventListener(t,a)})}var f=["mousedown","mouseup"],h=["touchstart","touchend"];function m(e){c(e,f,r.mouse),c(e,h,r.touch)}var v={enable:function(e){m(e),d(e,f,r.mouse),d(e,h,r.touch)},disable:m};t.default=v},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,o,u){l.value=!0;var d=e.detail,c=r.default.cornerstone,f=d.element,h=c.getEnabledElement(f),m=((new Date).getTime(),-57),v={x:d.currentPoints.page.x,y:d.currentPoints.page.y+m},g=c.pageToPixel(f,v.x,v.y);function p(e){var r=e.detail;l.value=!1,!1===o.hasMoved&&(o.hasMoved=!0),o.active=!0;var s=r.currentPoints,u={x:s.page.x,y:s.page.y+m};g=c.pageToPixel(f,u.x,u.y),o.x=g.x,o.y=g.y,c.updateImage(f);var d=a.default.MEASUREMENT_MODIFIED,h={toolType:t,element:f,measurementData:n};(0,i.default)(f,d,h)}function b(e){var t=e.detail;l.value=!1,o.active=!1,f.removeEventListener(a.default.TOUCH_DRAG,p),s.forEach(function(e){f.removeEventListener(e,b)}),c.updateImage(f),e.type===a.default.TOUCH_PRESS&&(t.handlePressed=n,o.x=d.currentPoints.image.x,o.y=d.currentPoints.image.y),"function"==typeof u&&u(e)}f.addEventListener(a.default.TOUCH_DRAG,p),s.forEach(function(e){f.addEventListener(e,b)}),function e(t,n,a,i,o){if(a.value){var l=r.default.cornerstone,s=((new Date).getTime(),Math.abs(n.y-o.y)),u=s/10;if(s<1)return n.y=o.y,void(a.value=!1);n.y>o.y?n.y-=u:n.y<o.y&&(n.y+=u),l.updateImage(i.element),l.requestAnimationFrame(function(){e(0,n,a,i,o)})}}(0,o,l,h,g)};var a=o(n(1)),r=o(n(0)),i=o(n(6));function o(e){return e&&e.__esModule?e:{default:e}}var l={value:!1},s=[a.default.TOUCH_END,a.default.TOUCH_DRAG_END,a.default.TOUCH_PINCH,a.default.TOUCH_PRESS,a.default.TAP]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,s,u,d){var c=e.detail.element,f=r.default.cornerstone;function h(e){var n=e.detail;t.active=!0,Object.keys(t.handles).forEach(function(e){var a=t.handles[e];!0!==a.movesIndependently&&(a.x+=n.deltaPoints.image.x,a.y+=n.deltaPoints.image.y)}),f.updateImage(c);var r=a.default.MEASUREMENT_MODIFIED,i={toolType:s,element:c,measurementData:t};(0,l.default)(c,r,i),e.preventDefault(),e.stopPropagation()}function m(e){var n=e.detail;t.active=!1,t.invalidated=!1,c.removeEventListener(a.default.TOUCH_DRAG,h),c.removeEventListener(a.default.TOUCH_PINCH,m),c.removeEventListener(a.default.TOUCH_PRESS,m),c.removeEventListener(a.default.TOUCH_END,m),c.removeEventListener(a.default.TOUCH_DRAG_END,m),c.removeEventListener(a.default.TAP,m);var r=(0,i.default)(n,t.handles);!0===u&&!0===r&&(0,o.removeToolState)(c,s,t),f.updateImage(c),"function"==typeof d&&d(e)}return c.addEventListener(a.default.TOUCH_DRAG,h),c.addEventListener(a.default.TOUCH_PINCH,m),c.addEventListener(a.default.TOUCH_PRESS,m),c.addEventListener(a.default.TOUCH_END,m),c.addEventListener(a.default.TOUCH_DRAG_END,m),c.addEventListener(a.default.TAP,m),!0};var a=s(n(1)),r=s(n(0)),i=s(n(16)),o=n(2),l=s(n(6));function s(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t={};return{activate:function(t){t.removeEventListener(i.default.KEY_DOWN,e),t.addEventListener(i.default.KEY_DOWN,e)},disable:function(t){t.removeEventListener(i.default.KEY_DOWN,e)},enable:function(t){t.removeEventListener(i.default.KEY_DOWN,e)},deactivate:function(t){t.removeEventListener(i.default.KEY_DOWN,e)},getConfiguration:function(){return t},setConfiguration:function(e){t=e}}};var a,r=n(1),i=(a=r)&&a.__esModule?a:{default:a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){for(var n=0,a=0,r=0,o=0,l=t.top;l<t.top+t.height;l++)for(var s=t.left;s<t.left+t.width;s++){var u={x:s,y:l};(0,i.default)(t,u)&&(n+=e[o],a+=e[o]*e[o],r++),o++}if(0===r)return{count:r,mean:0,variance:0,stdDev:0};var d=n/r,c=a/r-d*d;return{count:r,mean:d,variance:c,stdDev:Math.sqrt(c)}};var a,r=n(41),i=(a=r)&&a.__esModule?a:{default:a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,r,i){var o=Math.atan2(n.y-t.y,n.x-t.x),l={color:r,lineWidth:i};(0,a.drawLine)(e,void 0,t,n,l,"canvas"),l={color:r,lineWidth:i,fillStyle:r};var s=[{x:n.x-10*Math.cos(o-Math.PI/7),y:n.y-10*Math.sin(o-Math.PI/7)},{x:n.x-10*Math.cos(o+Math.PI/7),y:n.y-10*Math.sin(o+Math.PI/7)},n];(0,a.drawJoinedLines)(e,void 0,n,s,l,"canvas")};var a=n(3)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,a,r){if(!e)throw new Error("getLuminance: parameter element must not be undefined");t=Math.round(t),n=Math.round(n);var o=i.default.cornerstone.getEnabledElement(e).image,l=[],s=0,u=o.getPixelData(),d=void 0,c=void 0,f=void 0;if(o.color)for(c=0;c<r;c++)for(f=0;f<a;f++){var h=u[d=4*((c+n)*o.columns+(f+t))],m=u[d+1],v=u[d+2];l[s++]=.2126*h+.7152*m+.0722*v}else for(c=0;c<r;c++)for(f=0;f<a;f++)d=(c+n)*o.columns+(f+t),l[s++]=u[d]*o.slope+o.intercept;return l};var a,r=n(0),i=(a=r)&&a.__esModule?a:{default:a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var n=(0,i.getToolState)(e,"stack");if(n&&n.data&&n.data.length){var u=r.default.cornerstone,d=void 0;if(n.data.length>1){var c=(0,i.getToolState)(e,"stackRenderer");c&&c.data&&c.data.length&&(d=c.data[0])}var f=n.data[0];t<0&&(t+=f.imageIds.length);var h=l.default.getStartLoadHandler(),m=l.default.getEndLoadHandler(),v=l.default.getErrorLoadingHandler();if(t!==f.currentImageIdIndex){h&&h(e);var g={newImageIdIndex:t,direction:t-f.currentImageIdIndex};f.currentImageIdIndex=t;var p=f.imageIds[t];(Boolean(f.preventCache)?u.loadImage(p):u.loadAndCacheImage(p)).then(function(a){if(f.currentImageIdIndex===t){try{u.getEnabledElement(e)}catch(e){return}d?(d.currentImageIdIndex=t,d.render(e,n.data)):u.displayImage(e,a),m&&m(e,a)}},function(n){var a=f.imageIds[t];v&&v(e,a,n)}),o.default.startGrabbing(),(0,s.default)(e,a.default.STACK_SCROLL,g)}}};var a=u(n(1)),r=u(n(0)),i=n(2),o=u(n(44)),l=u(n(13)),s=u(n(6));function u(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=i(n(140)),r=i(n(139));function i(e){return e&&e.__esModule?e:{default:e}}var o={getOrientationString:a.default,invertOrientationString:r.default};t.default=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,s){var u=a.default.cornerstone,d=u.getEnabledElement(n).image,c=u.getEnabledElement(s).image;if(d&&c){var f=u.metaData.get("imagePlaneModule",d.imageId),h=u.metaData.get("imagePlaneModule",c.imageId);if(f&&h&&f.rowCosines&&f.columnCosines&&f.imagePositionPatient&&h.rowCosines&&h.columnCosines&&h.imagePositionPatient&&f.frameOfReferenceUID===h.frameOfReferenceUID){f.rowCosines=(0,o.default)(f.rowCosines),f.columnCosines=(0,o.default)(f.columnCosines),f.imagePositionPatient=(0,o.default)(f.imagePositionPatient),h.rowCosines=(0,o.default)(h.rowCosines),h.columnCosines=(0,o.default)(h.columnCosines),h.imagePositionPatient=(0,o.default)(h.imagePositionPatient);var m=f.rowCosines.clone().cross(f.columnCosines),v=h.rowCosines.clone().cross(h.columnCosines),g=m.angleTo(v);if(!((g=Math.abs(g))<.5)){var p=(0,r.default)(f,h);if(p){var b=i.default.getActiveColor();e.setTransform(1,0,0,1,0,0),(0,l.draw)(e,function(e){(0,l.drawLine)(e,t.element,p.start,p.end,{color:b})})}}}}};var a=s(n(0)),r=s(n(68)),i=s(n(7)),o=s(n(19)),l=n(3);function s(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var n=(0,a.planePlaneIntersection)(e,t);if(n)return{start:(0,a.projectPatientPointToImagePlane)(n.start,e),end:(0,a.projectPatientPointToImagePlane)(n.end,e)}};var a=n(45)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default="2.3.9"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.adaptiveBrush=void 0;var a=s(n(0)),r=n(2),i=s(n(49)),o=s(n(48)),l=n(47);function s(e){return e&&e.__esModule?e:{default:e}}var u="brush",d={draw:1,radius:5,tolerance:5,minRadius:1,maxRadius:20,hoverColor:"rgba(230, 25, 75, 1.0)",dragColor:"rgba(230, 25, 75, 0.8)",active:!1},c=void 0,f=void 0,h=void 0,m=void 0,v=void 0;function g(e){var t=b.getConfiguration(),n=e.element,i=a.default.cornerstone.getLayer(n,t.brushLayerId),s=a.default.cornerstone.getLayers(n)[0],d=i.image,v=d.rows,g=d.columns,p=(0,r.getToolState)(n,u).data[0];m=function(e,t,n,a){for(var r=b.getConfiguration(),i=r.draw,s=Math.round(c.x),u=Math.round(c.y),d=null,m=[],v=r.radius;0!==d&&v>r.minRadius;){d=0,m=(0,o.default)(v,n,a,s,u);for(var g=0;g<m.length;g++){var p=m[g][0],y=e[m[g][1]*a+p];if(y>f||y<h){d++;break}}v--}return 0===d&&(0,l.drawBrushPixels)(m,t,i,a),v}(s.image.getPixelData(),p.pixelData,v,g),i.invalid=!0,a.default.cornerstone.updateImage(n)}function p(e){var t=b.getConfiguration(),n=e.element,i=a.default.cornerstone.getLayer(n,t.brushLayerId),s=i.image,d=s.rows,c=s.columns,f=e.currentPoints.image,h=f.x,m=f.y,v=(0,r.getToolState)(n,u).data[0].pixelData,g=t.draw,p=t.radius;if(!(h<0||h>c||m<0||m>d)){var y=(0,o.default)(p,d,c,h,m);(0,l.drawBrushPixels)(y,v,g,c),i.invalid=!0,a.default.cornerstone.updateImage(n)}}var b=(0,i.default)({onMouseMove:function(e){var t=e.detail;c=t.currentPoints.image,a.default.cornerstone.updateImage(t.element)},onMouseDown:function(e){var t=e.detail,n=t.element,r=b.getConfiguration(),i=a.default.cornerstone.getLayer(n,r.brushLayerId),l=a.default.cornerstone.getLayers(n)[0],s=t.currentPoints.image,u=s.x,d=s.y,m=i.image,y=m.rows,w=m.columns,_=(0,o.default)(r.radius,y,w,u,d);0===r.draw?p(t):(function(e,t,n){var a=b.getConfiguration().tolerance,r=Number.MAX_VALUE,i=-Number.MAX_VALUE;e.forEach(function(e){var a=e[1]*n+e[0],o=t[a];r=Math.min(o,r),i=Math.max(o,i)}),h=r-a,f=i+a}(_,l.image.getPixelData(),w),g(t)),v=!0,c=t.currentPoints.image},onMouseUp:function(e){var t=e.detail;c=t.currentPoints.image;var n=b.getConfiguration();v=!1,m=n.radius,a.default.cornerstone.updateImage(t.element)},onDrag:function(e){var t=e.detail;0===d.draw?p(t):g(t),v=!0,c=t.currentPoints.image},toolType:"adaptiveBrush",onImageRendered:function(e){var t=e.detail;if(c){var n=t.image,a=n.rows,r=n.columns,i=c,s=i.x,u=i.y;if(!(s<0||s>r||u<0||u>a)){var d=b.getConfiguration(),f=t.canvasContext,h=v?d.dragColor:d.hoverColor,g=t.element;if(m=v&&m||d.radius,f.setTransform(1,0,0,1,0,0),d.active){var p=(0,o.default)(m,a,r,s,u);(0,l.drawBrushOnCanvas)(p,f,h,g)}}}}});b.setConfiguration(d),t.adaptiveBrush=b},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.brush=void 0;var a=s(n(0)),r=n(2),i=s(n(49)),o=s(n(48)),l=n(47);function s(e){return e&&e.__esModule?e:{default:e}}var u="brush",d=void 0,c=!1;function f(e){var t=h.getConfiguration(),n=e.element,i=a.default.cornerstone.getLayer(n,t.brushLayerId),s=i.image,d=s.rows,c=s.columns,f=e.currentPoints.image,m=f.x,v=f.y,g=(0,r.getToolState)(n,u).data[0].pixelData,p=t.draw,b=t.radius;if(!(m<0||m>c||v<0||v>d)){var y=(0,o.default)(b,d,c,m,v);(0,l.drawBrushPixels)(y,g,p,c),i.invalid=!0,a.default.cornerstone.updateImage(n)}}var h=(0,i.default)({onMouseMove:function(e){var t=e.detail;d=t.currentPoints.image,a.default.cornerstone.updateImage(t.element)},onMouseDown:function(e){var t=e.detail;f(t),c=!0,d=t.currentPoints.image},onMouseUp:function(e){var t=e.detail;d=t.currentPoints.image,c=!1},onDrag:function(e){var t=e.detail;f(t),c=!0,d=t.currentPoints.image},toolType:"brush",onImageRendered:function(e){var t=e.detail;if(d){var n=t.image,a=n.rows,r=n.columns,i=d,s=i.x,u=i.y;if(!(s<0||s>r||u<0||u>a)){var f=h.getConfiguration(),m=f.radius,v=t.canvasContext,g=c?f.dragColor:f.hoverColor,p=t.element;if(v.setTransform(1,0,0,1,0,0),f.active){var b=(0,o.default)(m,a,r,s,u);(0,l.drawBrushOnCanvas)(b,v,g,p)}}}}});h.setConfiguration({draw:1,radius:5,minRadius:1,maxRadius:20,hoverColor:"rgba(230, 25, 75, 1.0)",dragColor:"rgba(230, 25, 75, 0.8)",active:!1}),t.brush=h},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.zoomTouchDrag=t.zoomTouchPinch=t.zoomWheel=t.zoom=void 0;var a=f(n(1)),r=f(n(0)),i=f(n(14)),o=f(n(5)),l=f(n(29)),s=f(n(50)),u=f(n(18)),d=n(4),c=n(8);function f(e){return e&&e.__esModule?e:{default:e}}var h="zoom",m=void 0;function v(e,t){var n=w.getConfiguration(),a=Math.log(e.scale)/Math.log(1.7)+t,r=Math.pow(1.7,a);return n.maxScale&&r>n.maxScale?e.scale=n.maxScale:n.minScale&&r<n.minScale?e.scale=n.minScale:e.scale=r,e}function g(e,t){if(t.hflip&&(e.x*=-1),t.vflip&&(e.y*=-1),0!==t.rotation){var n=t.rotation*Math.PI/180,a=Math.cos(n),r=Math.sin(n),i=e.x*a-e.y*r,o=e.x*r+e.y*a;e.x=i,e.y=o}return e}function p(e,t){var n=r.default.cornerstone,a=e.element,i=v(e.viewport,t);n.setViewport(a,i);var o=n.pageToPixel(a,e.startPoints.page.x,e.startPoints.page.y),l={x:e.startPoints.image.x-o.x,y:e.startPoints.image.y-o.y};l=g(l,i),i.translation.x-=l.x,i.translation.y-=l.y,n.setViewport(a,i)}function b(e){var t=e.detail.element;t.removeEventListener(a.default.MOUSE_DRAG,y),t.removeEventListener(a.default.MOUSE_UP,b),t.removeEventListener(a.default.MOUSE_CLICK,b)}function y(e){var t=e.detail;if(!t.deltaPoints.page.y)return!1;var n=t.deltaPoints.page.y/100,a=w.getConfiguration();a&&a.invert&&(n*=-1),w.strategy(t,n),e.preventDefault(),e.stopPropagation()}var w=(0,i.default)(function(e){var t=e.detail,n=t.element,r=(0,d.getToolOptions)(h,n);(0,o.default)(t.which,r.mouseButtonMask)&&(m=t.startPoints,n.addEventListener(a.default.MOUSE_DRAG,y),n.addEventListener(a.default.MOUSE_UP,b),n.addEventListener(a.default.MOUSE_CLICK,b),e.preventDefault(),e.stopPropagation())},h);w.strategies={default:p,translate:function(e,t){var n=e.element,a=e.image,i=w.getConfiguration(),o=v(e.viewport,t),l={x:0,y:0};if(t<0)o.scale<3&&(Math.abs(o.translation.x)<.01?o.translation.x=0:l.x=o.translation.x/8,Math.abs(o.translation.y)<.01?o.translation.y=0:l.y=o.translation.y/8);else{i&&i.preventZoomOutsideImage&&(0,c.clipToBox)(m.image,a);var s={x:a.width/2-m.image.x,y:a.height/2-m.image.y};s=g(s,o);var u={x:o.translation.x-s.x,y:o.translation.y-s.y};Math.abs(u.x)<.01?o.translation.x=s.x:l.x=u.x/8,Math.abs(u.y)<.01?o.translation.y=s.y:l.y=u.y/8}o.translation.x-=l.x,o.translation.y-=l.y,r.default.cornerstone.setViewport(n,o)},zoomToCenter:function(e,t){var n=e.element,a=v(e.viewport,t);r.default.cornerstone.setViewport(n,a)}},w.strategy=p;var _=(0,l.default)(function(e){var t=e.detail,n=-t.direction/4,a=w.getConfiguration();a&&a.invert&&(n*=-1);var i=v(t.viewport,n);r.default.cornerstone.setViewport(t.element,i)}),E=(0,s.default)(function(e){var t=e.detail,n=r.default.cornerstone,a=w.getConfiguration(),i=t.viewport,o=t.element;i.scale+=t.scaleChange*i.scale,a.maxScale&&i.scale>a.maxScale?i.scale=a.maxScale:a.minScale&&i.scale<a.minScale&&(i.scale=a.minScale),n.setViewport(o,i);var l=n.pageToPixel(o,t.startPoints.page.x,t.startPoints.page.y),s={x:t.startPoints.image.x-l.x,y:t.startPoints.image.y-l.y};s=g(s,i),i.translation.x-=s.x,i.translation.y-=s.y,n.setViewport(o,i)}),x=(0,u.default)(y,h);t.zoom=w,t.zoomWheel=_,t.zoomTouchPinch=E,t.zoomTouchDrag=x},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.wwwcRegionTouch=t.wwwcRegion=void 0;var a=f(n(1)),r=f(n(0)),i=f(n(7)),o=n(2),l=f(n(64)),s=f(n(5)),u=n(4),d=f(n(8)),c=n(3);function f(e){return e&&e.__esModule?e:{default:e}}var h="wwwcRegion",m={minWindowWidth:10};function v(e){var t=e.detail.element,n=(0,o.getToolState)(t,h);n&&n.data&&(n.data=[]),t.removeEventListener(a.default.MOUSE_MOVE,_),t.removeEventListener(a.default.MOUSE_DRAG,_),t.removeEventListener(a.default.MOUSE_UP,g),t.removeEventListener(a.default.MOUSE_CLICK,g),t.addEventListener(a.default.MOUSE_DOWN,y)}function g(e){var t=e.detail,n=t.element;n.removeEventListener(a.default.MOUSE_MOVE,_),n.removeEventListener(a.default.MOUSE_DRAG,_),n.removeEventListener(a.default.MOUSE_UP,g),n.removeEventListener(a.default.MOUSE_CLICK,g),n.addEventListener(a.default.MOUSE_DOWN,y);var r=(0,o.getToolState)(t.element,h);r&&r.data&&r.data.length&&(r.data[0].endPoint={x:t.currentPoints.image.x,y:t.currentPoints.image.y},p(t))}function p(e){var t=r.default.cornerstone,n=(0,o.getToolState)(e.element,h);if(n&&n.data&&n.data.length){var a=n.data[0].startPoint,i=n.data[0].endPoint,s=Math.abs(a.x-i.x),u=Math.abs(a.y-i.y),c=Math.min(a.x,i.x),f=Math.min(a.y,i.y);c=(0,d.default)(c,0,e.image.width),f=(0,d.default)(f,0,e.image.height),s=Math.floor(Math.min(s,Math.abs(e.image.width-c))),u=Math.floor(Math.min(u,Math.abs(e.image.height-f)));var m=function(e,t,n){var a=e.length;if(a<2)return{min:t,max:n,mean:(t+n)/2};for(var r=n,i=t,o=0,l=0;l<a;l++){var s=e[l];r=Math.min(r,s),i=Math.max(i,s),o+=s}return{min:r,max:i,mean:o/a}}((0,l.default)(e.element,c,f,s,u),e.image.minPixelValue,e.image.maxPixelValue),v=P.getConfiguration(),g=t.getViewport(e.element);void 0===v.minWindowWidth&&(v.minWindowWidth=10),g.voi.windowWidth=Math.max(Math.abs(m.max-m.min),v.minWindowWidth),g.voi.windowCenter=m.mean,t.setViewport(e.element,g),n.data=[],t.updateImage(e.element)}}function b(e){var t=e.detail.element;t.removeEventListener(a.default.MOUSE_MOVE,b),t.removeEventListener(a.default.MOUSE_DRAG,b),t.addEventListener(a.default.MOUSE_MOVE,_),t.addEventListener(a.default.MOUSE_DRAG,_),t.addEventListener(a.default.MOUSE_CLICK,g),e.type===a.default.MOUSE_DRAG&&t.addEventListener(a.default.MOUSE_UP,g)}function y(e){var t=e.detail,n=t.element,r=(0,u.getToolOptions)(h,n);if((0,s.default)(t.which,r.mouseButtonMask))return n.addEventListener(a.default.MOUSE_DRAG,b),n.addEventListener(a.default.MOUSE_MOVE,b),n.removeEventListener(a.default.MOUSE_DOWN,y),w(t),!1}function w(e){var t=(0,o.getToolState)(e.element,h);t&&t.data&&(t.data=[]);var n={startPoint:{x:e.currentPoints.image.x,y:e.currentPoints.image.y}};(0,o.addToolState)(e.element,h,n)}function _(e){var t=e.detail,n=t.element,a=(0,o.getToolState)(n,h);a&&a.data&&a.data.length&&(a.data[0].endPoint={x:t.currentPoints.image.x,y:t.currentPoints.image.y},r.default.cornerstone.updateImage(n))}function E(e){var t=e.detail,n=t.element,a=t.canvasContext,r=(0,o.getToolState)(t.element,h);if(r&&r.data&&r.data.length){var l=r.data[0].startPoint,s=r.data[0].endPoint;if(l&&s){a.setTransform(1,0,0,1,0,0);var u=i.default.getActiveColor(),d=P.getConfiguration();(0,c.draw)(a,function(e){(0,c.setShadow)(e,d),(0,c.drawRect)(e,n,l,s,{color:u})})}}}function x(e){e.removeEventListener(a.default.MOUSE_DOWN,y),e.removeEventListener(a.default.MOUSE_UP,g),e.removeEventListener(a.default.MOUSE_CLICK,g),e.removeEventListener(a.default.MOUSE_DRAG,_),e.removeEventListener(a.default.MOUSE_MOVE,_),e.removeEventListener(a.default.IMAGE_RENDERED,E),e.removeEventListener(a.default.NEW_IMAGE,v),r.default.cornerstone.updateImage(e)}function T(e){e.removeEventListener(a.default.TOUCH_DRAG,_),e.removeEventListener(a.default.TOUCH_START,w),e.removeEventListener(a.default.TOUCH_DRAG_END,p),e.removeEventListener(a.default.IMAGE_RENDERED,E)}var P={activate:function(e,t){(0,u.setToolOptions)(h,e,{mouseButtonMask:t}),(0,o.getToolState)(e,h)||(0,o.addToolState)(e,h,[]),e.removeEventListener(a.default.MOUSE_DOWN,y),e.removeEventListener(a.default.MOUSE_UP,g),e.removeEventListener(a.default.MOUSE_CLICK,g),e.removeEventListener(a.default.MOUSE_DRAG,_),e.removeEventListener(a.default.MOUSE_MOVE,_),e.removeEventListener(a.default.IMAGE_RENDERED,E),e.removeEventListener(a.default.NEW_IMAGE,v),e.addEventListener(a.default.MOUSE_DOWN,y),e.addEventListener(a.default.IMAGE_RENDERED,E),e.addEventListener(a.default.NEW_IMAGE,v),r.default.cornerstone.updateImage(e)},deactivate:x,disable:x,setConfiguration:function(e){m=e},getConfiguration:function(){return m}},O={activate:function(e){(0,o.getToolState)(e,h)||(0,o.addToolState)(e,h,[]),e.removeEventListener(a.default.TOUCH_DRAG,_),e.removeEventListener(a.default.TOUCH_START,w),e.removeEventListener(a.default.TOUCH_DRAG_END,p),e.removeEventListener(a.default.IMAGE_RENDERED,E),e.addEventListener(a.default.TOUCH_DRAG,_),e.addEventListener(a.default.TOUCH_START,w),e.addEventListener(a.default.TOUCH_DRAG_END,p),e.addEventListener(a.default.IMAGE_RENDERED,E)},deactivate:T,disable:T};t.wwwcRegion=P,t.wwwcRegionTouch=O},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.wwwcTouchDrag=t.wwwc=void 0;var a=u(n(1)),r=u(n(0)),i=u(n(14)),o=u(n(18)),l=u(n(5)),s=n(4);function u(e){return e&&e.__esModule?e:{default:e}}var d="wwwc";function c(e){var t=e.detail.element;t.removeEventListener(a.default.MOUSE_DRAG,h),t.removeEventListener(a.default.MOUSE_UP,c),t.removeEventListener(a.default.MOUSE_CLICK,c)}function f(e){var t=(e.image.maxPixelValue*e.image.slope+e.image.intercept-(e.image.minPixelValue*e.image.slope+e.image.intercept))/1024,n=e.deltaPoints.page.x*t,a=e.deltaPoints.page.y*t;e.viewport.voi.windowWidth+=n,e.viewport.voi.windowCenter+=a}function h(e){var t=e.detail;m.strategy(t),r.default.cornerstone.setViewport(t.element,t.viewport)}var m=(0,i.default)(function(e){var t=e.detail,n=t.element,r=(0,s.getToolOptions)(d,n);(0,l.default)(t.which,r.mouseButtonMask)&&(n.addEventListener(a.default.MOUSE_DRAG,h),n.addEventListener(a.default.MOUSE_UP,c),n.addEventListener(a.default.MOUSE_CLICK,c),e.preventDefault(),e.stopPropagation())},d);m.strategies={default:f},m.strategy=f;var v=(0,o.default)(function(e){var t=e.detail;e.stopImmediatePropagation();var n=t,a=(n.image.maxPixelValue*n.image.slope+n.image.intercept-(n.image.minPixelValue*n.image.slope+n.image.intercept))/1024,i=n.deltaPoints.page.x*a,o=n.deltaPoints.page.y*a,l=m.getConfiguration();l.orientation?0===l.orientation?(n.viewport.voi.windowWidth+=i,n.viewport.voi.windowCenter+=o):(n.viewport.voi.windowWidth+=o,n.viewport.voi.windowCenter+=i):(n.viewport.voi.windowWidth+=i,n.viewport.voi.windowCenter+=o),r.default.cornerstone.setViewport(n.element,n.viewport)});t.wwwc=m,t.wwwcTouchDrag=v},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.textMarkerTouch=t.textMarker=void 0;var a=v(n(1)),r=v(n(0)),i=v(n(10)),o=v(n(12)),l=v(n(22)),s=v(n(7)),u=v(n(5)),d=n(11),c=v(d),f=n(2),h=n(4),m=n(3);function v(e){return e&&e.__esModule?e:{default:e}}var g="textMarker";function p(e){var t=w.getConfiguration();if(t.current){var n={visible:!0,active:!0,text:t.current,color:void 0,handles:{end:{x:e.currentPoints.image.x,y:e.currentPoints.image.y,highlight:!0,active:!0,hasBoundingBox:!0}}},a={left:0,top:0,width:e.image.width,height:e.image.height};if(r.default.cornerstoneMath.point.insideRect(n.handles.end,a)){var i=t.markers.indexOf(t.current);return t.ascending?(i+=1)>=t.markers.length&&(t.loop?i-=t.markers.length:i=-1):(i-=1)<0&&(t.loop?i+=t.markers.length:i=-1),t.current=t.markers[i],n}}}function b(e,t,n){if(!1===t.visible)return!1;if(t.handles.end.boundingBox){var a=r.default.cornerstoneMath.rect.distanceToPoint(t.handles.end.boundingBox,n),i=(0,l.default)(t.handles.end,n);return a<10||i}}function y(e){var t=e.detail,n=(0,f.getToolState)(t.element,g);if(n)for(var a=(0,m.getNewContext)(t.canvasContext.canvas),i=w.getConfiguration(),o=function(e){var o=n.data[e];if(!1===o.visible)return"continue";var l=s.default.getColorIfActive(o);(0,m.draw)(a,function(e){(0,m.setShadow)(e,i),o.textWidth=(0,d.textBoxWidth)(e,o.text,5);var n=r.default.cornerstone.pixelToCanvas(t.element,o.handles.end);o.handles.end.boundingBox=(0,c.default)(e,o.text,n.x,n.y-10,l,{centering:{x:!0,y:!0}})})},l=0;l<n.data.length;l++)o(l)}var w=(0,i.default)({createNewMeasurement:p,onImageRendered:y,pointNearTool:b,toolType:g,mouseDoubleClickCallback:function(e){var t=e.detail,n=r.default.cornerstone,i=t.element,o=void 0,l=(0,h.getToolOptions)(g,i);if((0,u.default)(t.which,l.mouseButtonMask)){var s=w.getConfiguration(),d=t.currentPoints.canvas,c=(0,f.getToolState)(i,g);if(c){for(var m=0;m<c.data.length;m++)if(b(0,o=c.data[m],d))return o.active=!0,n.updateImage(i),i.removeEventListener(a.default.MOUSE_MOVE,w.mouseMoveCallback),i.removeEventListener(a.default.MOUSE_DOWN,w.mouseDownCallback),i.removeEventListener(a.default.MOUSE_DOWN_ACTIVATE,w.mouseDownActivateCallback),i.removeEventListener(a.default.MOUSE_DOUBLE_CLICK,w.mouseDoubleClickCallback),s.changeTextCallback(o,t,v),e.stopImmediatePropagation(),e.preventDefault(),void e.stopPropagation();e.preventDefault(),e.stopPropagation()}}function v(e,t,r){!0===r?(0,f.removeToolState)(i,g,e):e.text=t,e.active=!1,n.updateImage(i),i.addEventListener(a.default.MOUSE_MOVE,w.mouseMoveCallback),i.addEventListener(a.default.MOUSE_DOWN,w.mouseDownCallback),i.addEventListener(a.default.MOUSE_DOWN_ACTIVATE,w.mouseDownActivateCallback),i.addEventListener(a.default.MOUSE_DOUBLE_CLICK,w.mouseDoubleClickCallback)}}}),_=(0,o.default)({createNewMeasurement:p,onImageRendered:y,pointNearTool:b,toolType:g,pressCallback:function(e){var t=e.detail,n=r.default.cornerstone,i=t.element,o=void 0;function l(e,t,r){!0===r?(0,f.removeToolState)(i,g,e):e.text=t,e.active=!1,n.updateImage(i),i.addEventListener(a.default.TOUCH_DRAG,_.touchMoveCallback),i.addEventListener(a.default.TOUCH_START_ACTIVE,_.touchDownActivateCallback),i.addEventListener(a.default.TOUCH_START,_.touchStartCallback),i.addEventListener(a.default.TAP,_.tapCallback),i.addEventListener(a.default.TOUCH_PRESS,_.pressCallback)}var s=w.getConfiguration(),u=t.currentPoints.canvas,d=(0,f.getToolState)(i,g);if(!d)return!1;if(t.handlePressed)return t.handlePressed.active=!0,n.updateImage(i),i.removeEventListener(a.default.TOUCH_DRAG,_.touchMoveCallback),i.removeEventListener(a.default.TOUCH_START_ACTIVE,_.touchDownActivateCallback),i.removeEventListener(a.default.TOUCH_START,_.touchStartCallback),i.removeEventListener(a.default.TAP,_.tapCallback),i.removeEventListener(a.default.TOUCH_PRESS,_.pressCallback),s.changeTextCallback(t.handlePressed,t,l),e.stopImmediatePropagation(),e.preventDefault(),void e.stopPropagation();for(var c=0;c<d.data.length;c++)if(b(0,o=d.data[c],u))return o.active=!0,n.updateImage(i),i.removeEventListener(a.default.TOUCH_DRAG,_.touchMoveCallback),i.removeEventListener(a.default.TOUCH_START_ACTIVE,_.touchDownActivateCallback),i.removeEventListener(a.default.TOUCH_START,_.touchStartCallback),i.removeEventListener(a.default.TAP,_.tapCallback),i.removeEventListener(a.default.TOUCH_PRESS,_.pressCallback),s.changeTextCallback(o,t,l),e.stopImmediatePropagation(),e.preventDefault(),void e.stopPropagation();e.preventDefault(),e.stopPropagation()}});t.textMarker=w,t.textMarkerTouch=_},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.simpleAngleTouch=t.simpleAngle=void 0;var a=y(n(1)),r=y(n(0)),i=y(n(10)),o=y(n(42)),l=y(n(17)),s=y(n(15)),u=y(n(7)),d=y(n(16)),c=y(n(30)),f=y(n(28)),h=y(n(9)),m=y(n(12)),v=y(n(27)),g=n(2),p=n(3),b=n(11);function y(e){return e&&e.__esModule?e:{default:e}}var w="simpleAngle";function _(e){return{visible:!0,active:!0,color:void 0,handles:{start:{x:e.currentPoints.image.x,y:e.currentPoints.image.y,highlight:!0,active:!1},middle:{x:e.currentPoints.image.x,y:e.currentPoints.image.y,highlight:!0,active:!0},end:{x:e.currentPoints.image.x,y:e.currentPoints.image.y,highlight:!0,active:!1},textBox:{active:!1,hasMoved:!1,movesIndependently:!1,drawnIndependently:!0,allowedOutsideImage:!0,hasBoundingBox:!0}}}}function E(e,t,n){return!1!==t.visible&&((0,v.default)(e,t.handles.start,t.handles.middle,n)<25||(0,v.default)(e,t.handles.middle,t.handles.end,n)<25)}function x(e){return Math.sqrt(Math.pow(e.x,2)+Math.pow(e.y,2))}function T(e){var t=e.detail,n=(0,g.getToolState)(e.currentTarget,w);if(n)for(var a=r.default.cornerstone,i=t.enabledElement,d=(0,p.getNewContext)(t.canvasContext.canvas),c=s.default.getToolWidth(),f=P.getConfiguration(),m=function(e){var r=n.data[e];if(!1===r.visible)return"continue";(0,p.draw)(d,function(e){(0,p.setShadow)(e,f);var n=u.default.getColorIfActive(r),s=a.pixelToCanvas(t.element,r.handles.start),d=a.pixelToCanvas(t.element,r.handles.middle);(0,p.drawJoinedLines)(e,t.element,r.handles.start,[r.handles.middle,r.handles.end],{color:n});var m={drawHandlesIfActive:f&&f.drawHandlesOnHover};(0,h.default)(e,t,r.handles,n,m);var v=t.image.columnPixelSpacing||1,g=t.image.rowPixelSpacing||1,w={x:(Math.ceil(r.handles.middle.x)-Math.ceil(r.handles.start.x))*v,y:(Math.ceil(r.handles.middle.y)-Math.ceil(r.handles.start.y))*g},_={x:(Math.ceil(r.handles.end.x)-Math.ceil(r.handles.middle.x))*v,y:(Math.ceil(r.handles.end.y)-Math.ceil(r.handles.middle.y))*g},E={x:(Math.ceil(r.handles.end.x)-Math.ceil(r.handles.start.x))*v,y:(Math.ceil(r.handles.end.y)-Math.ceil(r.handles.start.y))*g},T=x(w),P=x(_),O=x(E),S=Math.acos((Math.pow(T,2)+Math.pow(P,2)-Math.pow(O,2))/(2*T*P));if(S*=180/Math.PI,r.rAngle=(0,o.default)(S,2),r.rAngle){var I=function(e,t,n){var a=t&&n?"":" (isotropic)";return e.rAngle.toString()+String.fromCharCode(parseInt("00B0",16))+a}(r,t.image.rowPixelSpacing,t.image.columnPixelSpacing),M=void 0;if(!r.handles.textBox.hasMoved){M={x:d.x,y:d.y};var C=(0,b.textBoxWidth)(e,I,5);d.x<s.x?M.x-=15+C:M.x+=15;var L=a.internal.getTransform(i);L.invert();var D=L.transformPoint(M.x,M.y);r.handles.textBox.x=D.x,r.handles.textBox.y=D.y}(0,l.default)(e,t.element,r.handles.textBox,I,r.handles,y,n,c,0,!0)}})},v=0;v<n.data.length;v++)m(v);function y(e){return[e.start,e.middle,e.end]}}var P=(0,i.default)({createNewMeasurement:_,addNewMeasurement:function(e){var t=r.default.cornerstone,n=_(e),i=e.element;(0,g.addToolState)(i,w,n),i.removeEventListener(a.default.MOUSE_MOVE,P.mouseMoveCallback),i.removeEventListener(a.default.MOUSE_DRAG,P.mouseMoveCallback),i.removeEventListener(a.default.MOUSE_DOWN,P.mouseDownCallback),i.removeEventListener(a.default.MOUSE_DOWN_ACTIVATE,P.mouseDownActivateCallback),t.updateImage(i),(0,c.default)(e,w,n,n.handles.middle,function(){if(n.active=!1,(0,d.default)(e,n.handles))return(0,g.removeToolState)(i,w,n),i.addEventListener(a.default.MOUSE_MOVE,P.mouseMoveCallback),i.addEventListener(a.default.MOUSE_DRAG,P.mouseMoveCallback),i.addEventListener(a.default.MOUSE_DOWN,P.mouseDownCallback),i.addEventListener(a.default.MOUSE_DOWN_ACTIVATE,P.mouseDownActivateCallback),void t.updateImage(i);n.handles.end.active=!0,t.updateImage(i),(0,c.default)(e,w,n,n.handles.end,function(){n.active=!1,(0,d.default)(e,n.handles)&&(0,g.removeToolState)(i,w,n),i.addEventListener(a.default.MOUSE_MOVE,P.mouseMoveCallback),i.addEventListener(a.default.MOUSE_DRAG,P.mouseMoveCallback),i.addEventListener(a.default.MOUSE_DOWN,P.mouseDownCallback),i.addEventListener(a.default.MOUSE_DOWN_ACTIVATE,P.mouseDownActivateCallback),t.updateImage(i)})})},onImageRendered:T,pointNearTool:E,toolType:w}),O=(0,m.default)({createNewMeasurement:_,addNewMeasurement:function(e){var t=r.default.cornerstone,n=_(e),i=e.element;(0,g.addToolState)(i,w,n),i.removeEventListener(a.default.TOUCH_DRAG,O.touchMoveCallback),i.removeEventListener(a.default.TOUCH_START_ACTIVE,O.touchDownActivateCallback),i.removeEventListener(a.default.TOUCH_START,O.touchStartCallback),i.removeEventListener(a.default.TAP,O.tapCallback),t.updateImage(i),(0,f.default)(e,w,n,n.handles.middle,function(){if((0,d.default)(e,n.handles))return(0,g.removeToolState)(i,w,n),i.addEventListener(a.default.TOUCH_DRAG,O.touchMoveCallback),i.addEventListener(a.default.TOUCH_START,O.touchStartCallback),i.addEventListener(a.default.TOUCH_START_ACTIVE,O.touchDownActivateCallback),i.addEventListener(a.default.TAP,O.tapCallback),void t.updateImage(i);(0,f.default)(e,w,n,n.handles.end,function(){(0,d.default)(e,n.handles)&&((0,g.removeToolState)(i,w,n),t.updateImage(i)),i.addEventListener(a.default.TOUCH_DRAG,O.touchMoveCallback),i.addEventListener(a.default.TOUCH_START,O.touchStartCallback),i.addEventListener(a.default.TOUCH_START_ACTIVE,O.touchDownActivateCallback),i.addEventListener(a.default.TAP,O.tapCallback)})})},onImageRendered:T,pointNearTool:E,toolType:w});t.simpleAngle=P,t.simpleAngleTouch=O},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.seedAnnotateTouch=t.seedAnnotate=void 0;var a=w(n(1)),r=w(n(0)),i=w(n(10)),o=w(n(12)),l=w(n(21)),s=w(n(15)),u=w(n(7)),d=w(n(16)),c=w(n(31)),f=w(n(9)),h=w(n(5)),m=w(n(22)),v=w(n(17)),g=n(2),p=n(4),b=n(3),y=n(11);function w(e){return e&&e.__esModule?e:{default:e}}var _="seedAnnotate",E={getTextCallback:function(e){e(prompt("Enter your annotation:"))},changeTextCallback:function(e,t,n){n(prompt("Change your annotation:"))},drawHandles:!1,drawHandlesOnHover:!0,currentLetter:"A",currentNumber:0,showCoordinates:!0,countUp:!0};function x(e){return{visible:!0,active:!0,color:void 0,handles:{end:{x:e.currentPoints.image.x,y:e.currentPoints.image.y,highlight:!0,active:!1},textBox:{active:!1,hasMoved:!1,movesIndependently:!1,drawnIndependently:!0,allowedOutsideImage:!0,hasBoundingBox:!0}}}}function T(e,t,n){if(!1===t.visible)return!1;if(t.handles.end){var a=r.default.cornerstone.pixelToCanvas(e,t.handles.end);return r.default.cornerstoneMath.point.distance(a,n)<25}}function P(e){var t=e.detail,n=(0,g.getToolState)(e.currentTarget,_);if(n)for(var a=r.default.cornerstone,i=t.enabledElement,o=(0,b.getNewContext)(t.canvasContext.canvas),d=t.canvasContext.canvas.width,c=s.default.getToolWidth(),h=O.getConfiguration(),m=function(e){var r=n.data[e];if(!1===r.visible)return"continue";(0,b.draw)(o,function(e){(0,b.setShadow)(e,h);var n=u.default.getColorIfActive(r),o=a.pixelToCanvas(t.element,r.handles.end);(0,b.drawCircle)(e,t.element,r.handles.end,6,{color:n});var s={drawHandlesIfActive:h&&h.drawHandlesOnHover};if(h.drawHandles&&(0,f.default)(e,t,o,n,s),r.text&&""!==r.text){var m=function(e){return h.showCoordinates?e.text+" x: "+Math.round(e.handles.end.x)+" y: "+Math.round(e.handles.end.y):e.text}(r),g=(0,y.textBoxWidth)(e,m,5),p=l.default.getFontSize()+10,_=Math.max(g,p)/2+5;o.x>d/2&&(_=-_);var E=void 0;if(!r.handles.textBox.hasMoved){E={x:o.x-g/2+_,y:o.y-p/2};var x=a.internal.getTransform(i);x.invert();var T=x.transformPoint(E.x,E.y);r.handles.textBox.x=T.x,r.handles.textBox.y=T.y}(0,v.default)(e,t.element,r.handles.textBox,m,r.handles,w,n,c,0,!1)}})},p=0;p<n.data.length;p++)m(p);function w(e){return[e.end]}}var O=(0,i.default)({addNewMeasurement:function(e){var t=r.default.cornerstone,n=e.element,a=O.getConfiguration(),i=x(e);function o(e){null===e?(0,g.removeToolState)(n,_,i):i.text=e,i.active=!1,t.updateImage(n)}(0,g.addToolState)(n,_,i),t.updateImage(n),(0,c.default)(e,_,i,i.handles.end,function(){(0,d.default)(e,i.handles)&&(0,g.removeToolState)(n,_,i),void 0===i.text&&a.getTextCallback(o),t.updateImage(n)})},createNewMeasurement:x,onImageRendered:P,pointNearTool:T,toolType:_,mouseDoubleClickCallback:function(e){var t=e.detail,n=r.default.cornerstone,a=t.element,i=void 0,o=(0,p.getToolOptions)(_,a);if((0,h.default)(t.which,o.mouseButtonMask)){var l=O.getConfiguration(),s=t.currentPoints.canvas,u=(0,g.getToolState)(a,_);if(u){for(var d=0;d<u.data.length;d++)if(i=u.data[d],T(a,i,s)||(0,m.default)(i.handles.textBox,s))return i.active=!0,n.updateImage(a),l.changeTextCallback(i,t,c),e.stopImmediatePropagation(),!1;e.preventDefault(),e.stopPropagation()}}function c(e,t,r){!0===r?(0,g.removeToolState)(a,_,e):e.text=t,e.active=!1,n.updateImage(a)}}});O.setConfiguration(E);var S=(0,o.default)({addNewMeasurement:function(e){var t=r.default.cornerstone,n=e.element,a=O.getConfiguration(),i=x(e);function o(e){null===e?(0,g.removeToolState)(n,_,i):i.text=e,i.active=!1,t.updateImage(n)}(0,g.addToolState)(n,_,i),t.updateImage(n),(0,c.default)(e,_,i,i.handles.end,function(){(0,d.default)(e,i.handles)&&(0,g.removeToolState)(n,_,i),void 0===i.text&&a.getTextCallback(o),t.updateImage(n)})},createNewMeasurement:x,onImageRendered:P,pointNearTool:T,toolType:_,pressCallback:function(e){var t=e.detail,n=r.default.cornerstone,i=t.element,o=void 0;function l(e,t,r){console.log("pressCallback doneChangingTextCallback"),!0===r?(0,g.removeToolState)(i,_,e):e.text=t,e.active=!1,n.updateImage(i),i.addEventListener(a.default.TOUCH_START,S.touchStartCallback),i.addEventListener(a.default.TOUCH_START_ACTIVE,S.touchDownActivateCallback),i.addEventListener(a.default.TAP,S.tapCallback)}var s=O.getConfiguration(),u=t.currentPoints.canvas,d=(0,g.getToolState)(i,_);if(!d)return!1;if(t.handlePressed)return i.removeEventListener(a.default.TOUCH_START,S.touchStartCallback),i.removeEventListener(a.default.TOUCH_START_ACTIVE,S.touchDownActivateCallback),i.removeEventListener(a.default.TAP,S.tapCallback),s.changeTextCallback(t.handlePressed,t,l),e.stopImmediatePropagation(),!1;for(var c=0;c<d.data.length;c++)if(o=d.data[c],T(i,o,u)||(0,m.default)(o.handles.textBox,u))return o.active=!0,n.updateImage(i),i.removeEventListener(a.default.TOUCH_START,S.touchStartCallback),i.removeEventListener(a.default.TOUCH_START_ACTIVE,S.touchDownActivateCallback),i.removeEventListener(a.default.TAP,S.tapCallback),s.changeTextCallback(o,t,l),e.stopImmediatePropagation(),!1;e.preventDefault(),e.stopPropagation()}});t.seedAnnotate=O,t.seedAnnotateTouch=S},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=l(n(24)),r=l(n(1)),i=l(n(0)),o=n(3);function l(e){return e&&e.__esModule?e:{default:e}}function s(e,t,n,a,r){var i={left:0,top:0,width:t.width,height:t.height},o=a*Math.min(1e3,t.width),l=r*Math.min(1e3,t.height);return{topLeft:{x:(i={left:i.left+o,top:i.top+l,width:i.width-2*o,height:i.height-2*l}).left,y:i.top},bottomRight:{x:i.left+i.width,y:i.top+i.height}}}function u(e){var t=e.detail,n=(0,o.getNewContext)(t.canvasContext.canvas),a=t.image,r=t.viewport,l=i.default.cornerstone.metaData.get("imagePlaneModule",a.imageId),u=void 0,c=void 0;if(l?(u=l.rowPixelSpacing||l.rowImagePixelSpacing,c=l.columnPixelSpacing||l.colImagePixelSpacing):(u=a.rowPixelSpacing,c=a.columnPixelSpacing),u&&c){var f={width:n.canvas.width,height:n.canvas.height},h={width:a.width,height:a.height},m=10/u*r.scale,v=10/c*r.scale,g=s(0,f,0,.25,.05),p=s(0,f,0,.05,.15);if(f.width&&f.height&&h.width&&h.height&&g&&p){var b=d.getConfiguration(),y=Object.assign({},{hscaleBounds:g,vscaleBounds:p,verticalMinorTick:m,horizontalMinorTick:v,minorTickLength:12.5,majorTickLength:25,verticalLine:{start:{x:p.bottomRight.x,y:p.topLeft.y},end:{x:p.bottomRight.x,y:p.bottomRight.y}},horizontalLine:{start:{x:g.topLeft.x,y:g.bottomRight.y},end:{x:g.bottomRight.x,y:g.bottomRight.y}}},b),w={color:y.color,lineWidth:y.lineWidth},_=function(e){for(var t=0,n=[];e.verticalLine.start.y+t*e.verticalMinorTick<=e.vscaleBounds.bottomRight.y;){var a={x:e.verticalLine.start.x,y:e.verticalLine.start.y+t*e.verticalMinorTick},r={x:0,y:e.verticalLine.start.y+t*e.verticalMinorTick};r.x=t%5==0?e.verticalLine.start.x-e.majorTickLength:e.verticalLine.start.x-e.minorTickLength,n.push({start:a,end:r}),t++}return n}(y),E=function(e){for(var t=0,n=[];e.horizontalLine.start.x+t*e.horizontalMinorTick<=e.hscaleBounds.bottomRight.x;){var a={x:e.horizontalLine.start.x+t*e.horizontalMinorTick,y:e.horizontalLine.start.y},r={x:e.horizontalLine.start.x+t*e.horizontalMinorTick,y:0};r.y=t%5==0?e.horizontalLine.start.y-e.majorTickLength:e.horizontalLine.start.y-e.minorTickLength,n.push({start:a,end:r}),t++}return n}(y);(0,o.draw)(n,function(e){e.shadowColor=y.shadowColor,e.shadowBlur=y.shadowBlur,(0,o.drawLine)(e,void 0,y.verticalLine.start,y.verticalLine.end,w,"canvas"),(0,o.drawLine)(e,void 0,y.horizontalLine.start,y.horizontalLine.end,w,"canvas"),(0,o.drawLines)(e,void 0,_,w,"canvas"),(0,o.drawLines)(e,void 0,E,w,"canvas")})}}}var d=(0,a.default)(u);d.setConfiguration({color:"white",lineWidth:2,shadowColor:"black",shadowBlur:4}),d.disable=function(e){e.removeEventListener(r.default.IMAGE_RENDERED,u),i.default.cornerstone.updateImage(e)},t.default=d},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"image/png",a=e.querySelector("canvas");if(a.msToBlob){var r=a.msToBlob();return window.navigator.msSaveBlob(r,t)}var i=document.createElement("a");if(i.download=t,i.href=a.toDataURL(n,1),document.createEvent){var o=document.createEvent("MouseEvents");o.initMouseEvent("click",!0,!0,window,0,0,0,0,0,!1,!1,!1,!1,0,null),i.dispatchEvent(o)}else i.fireEvent&&i.fireEvent("onclick")}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=i(n(1)),r=i(n(0));function i(e){return e&&e.__esModule?e:{default:e}}function o(e){var t=e.detail;return t.viewport.rotation+=t.rotation,r.default.cornerstone.setViewport(t.element,t.viewport),!1}var l={activate:function(e){e.removeEventListener(a.default.TOUCH_ROTATE,o),e.addEventListener(a.default.TOUCH_ROTATE,o)},disable:function(e){e.removeEventListener(a.default.TOUCH_ROTATE,o)}};t.default=l},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.rotateTouchDrag=t.rotate=void 0;var a=u(n(1)),r=u(n(0)),i=u(n(14)),o=u(n(56)),l=u(n(5)),s=n(4);function u(e){return e&&e.__esModule?e:{default:e}}var d="rotate";function c(e,t,n){var a=e.element.getBoundingClientRect(e.element),i=e.element.clientWidth,o=e.element.clientHeight,l=e.viewport.scale,s=e.viewport.translation,u={x:a.left+i/2+s.x*l,y:a.top+o/2+s.y*l},d=t,c={x:e.currentPoints.client.x,y:e.currentPoints.client.y},f=Math.sqrt(Math.pow(u.x-d.x,2)+Math.pow(u.y-d.y,2)),h=Math.sqrt(Math.pow(u.x-c.x,2)+Math.pow(u.y-c.y,2)),m=Math.sqrt(Math.pow(d.x-c.x,2)+Math.pow(d.y-c.y,2)),v=180*Math.acos((Math.pow(f,2)+Math.pow(h,2)-Math.pow(m,2))/(2*f*h))/Math.PI;(d.x-u.x)*(c.y-u.y)-(d.y-u.y)*(c.x-u.x)<0&&(v=-v),e.viewport.rotation=n+v,r.default.cornerstone.setViewport(e.element,e.viewport)}function f(e,t,n){var a=n.detail;h.strategy(a,e,t),r.default.cornerstone.setViewport(a.element,a.viewport),n.preventDefault(),n.stopPropagation()}var h=(0,i.default)(function(e){var t=e.detail,n=t.element,r=(0,s.getToolOptions)(d,n),i={x:t.currentPoints.client.x,y:t.currentPoints.client.y},o=t.viewport.rotation;if((0,l.default)(t.which,r.mouseButtonMask)){var u=f.bind({},i,o),c=function e(t){var n=t.detail.element;n.removeEventListener(a.default.MOUSE_DRAG,u),n.removeEventListener(a.default.MOUSE_UP,e),n.removeEventListener(a.default.MOUSE_CLICK,e)};n.addEventListener(a.default.MOUSE_DRAG,u),n.addEventListener(a.default.MOUSE_UP,c),n.addEventListener(a.default.MOUSE_CLICK,c),e.preventDefault(),e.stopPropagation()}},d);h.strategies={default:c,horizontal:function(e){e.viewport.rotation+=e.deltaPoints.page.x/e.viewport.scale,r.default.cornerstone.setViewport(e.element,e.viewport)},vertical:function(e){e.viewport.rotation+=e.deltaPoints.page.y/e.viewport.scale,r.default.cornerstone.setViewport(e.element,e.viewport)}},h.strategy=c;var m=(0,o.default)(function(e){var t=e.detail,n=t.element,r={x:t.currentPoints.client.x,y:t.currentPoints.client.y},i=t.viewport.rotation,o=f.bind({},r,i);n.addEventListener(a.default.TOUCH_DRAG,o),n.addEventListener(a.default.TOUCH_END,function e(t){var n=t.detail.element;n.removeEventListener(a.default.TOUCH_DRAG,o),n.removeEventListener(a.default.TOUCH_END,e)}),e.preventDefault(),e.stopPropagation()},d);t.rotate=h,t.rotateTouchDrag=m},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.rectangleRoiTouch=t.rectangleRoi=void 0;var a=h(n(0)),r=h(n(10)),i=h(n(12)),o=h(n(15)),l=h(n(7)),s=h(n(9)),u=h(n(20)),d=n(2),c=h(n(17)),f=n(3);function h(e){return e&&e.__esModule?e:{default:e}}var m="rectangleRoi";function v(e){return{visible:!0,active:!0,invalidated:!0,color:void 0,handles:{start:{x:e.currentPoints.image.x,y:e.currentPoints.image.y,highlight:!0,active:!1},end:{x:e.currentPoints.image.x,y:e.currentPoints.image.y,highlight:!0,active:!0},textBox:{active:!1,hasMoved:!1,movesIndependently:!1,drawnIndependently:!0,allowedOutsideImage:!0,hasBoundingBox:!0}}}}function g(e,t,n){if(!1===t.visible)return!1;var r=a.default.cornerstone,i=r.pixelToCanvas(e,t.handles.start),o=r.pixelToCanvas(e,t.handles.end),l={left:Math.min(i.x,o.x),top:Math.min(i.y,o.y),width:Math.abs(i.x-o.x),height:Math.abs(i.y-o.y)};return a.default.cornerstoneMath.rect.distanceToPoint(l,n)<5}function p(e){var t=e.toString().split(".");return t[0]=t[0].replace(/\B(?=(\d{3})+(?!\d))/g,","),t.join(".")}function b(e){var t=e.detail,n=(0,d.getToolState)(e.currentTarget,m);if(n){var r=a.default.cornerstone,i=t.image,h=t.element,v=o.default.getToolWidth(),g=y.getConfiguration(),b=r.metaData.get("generalSeriesModule",i.imageId),w=r.metaData.get("imagePlaneModule",i.imageId),_=void 0,E=void 0,x=void 0;w?(E=w.rowPixelSpacing||w.rowImagePixelSpacing,x=w.columnPixelSpacing||w.colImagePixelSpacing):(E=i.rowPixelSpacing,x=i.columnPixelSpacing),b&&(_=b.modality);for(var T=(0,f.getNewContext)(t.canvasContext.canvas),P=function(e){var a=n.data[e];if(!1===a.visible)return"continue";(0,f.draw)(T,function(e){(0,f.setShadow)(e,g);var n=l.default.getColorIfActive(a);(0,f.drawRect)(e,h,a.handles.start,a.handles.end,{color:n}),g&&g.drawHandlesOnHover?!0===a.active?(0,s.default)(e,t,a.handles,n):(0,s.default)(e,t,a.handles,n,{drawHandlesIfActive:!0}):(0,s.default)(e,t,a.handles,n);var o=void 0,d=void 0,m=void 0;if(!1===a.invalidated)d=a.meanStdDev,m=a.meanStdDevSUV,o=a.area;else{var b={left:Math.min(a.handles.start.x,a.handles.end.x),top:Math.min(a.handles.start.y,a.handles.end.y),width:Math.abs(a.handles.start.x-a.handles.end.x),height:Math.abs(a.handles.start.y-a.handles.end.y)};i.color||(d=function(e,t){for(var n=0,a=0,r=0,i=0,o=t.top;o<t.top+t.height;o++)for(var l=t.left;l<t.left+t.width;l++)n+=e[i],a+=e[i]*e[i],r++,i++;if(0===r)return{count:r,mean:0,variance:0,stdDev:0};var s=n/r,u=a/r-s*s;return{count:r,mean:s,variance:u,stdDev:Math.sqrt(u)}}(r.getPixels(h,b.left,b.top,b.width,b.height),b),"PT"===_&&(m={mean:(0,u.default)(i,(d.mean-i.intercept)/i.slope),stdDev:(0,u.default)(i,(d.stdDev-i.intercept)/i.slope)}),d&&!isNaN(d.mean)&&(a.meanStdDev=d,a.meanStdDevSUV=m)),o=b.width*(x||1)*(b.height*(E||1)),isNaN(o)||(a.area=o),a.invalidated=!1}var y=function(e){var t=e.meanStdDev,n=e.meanStdDevSUV,a=e.area,r=[];if(t&&t.mean){var i="";"CT"===_&&(i=" HU");var o="Mean: "+p(t.mean.toFixed(2))+i,l="StdDev: "+p(t.stdDev.toFixed(2))+i;n&&void 0!==n.mean&&(o+=" SUV: "+p(n.mean.toFixed(2)),l+=" SUV: "+p(n.stdDev.toFixed(2))),r.push(o),r.push(l)}if(a){var s=" mm"+String.fromCharCode(178);E&&x||(s=" pixels"+String.fromCharCode(178));var u="Area: "+p(a.toFixed(2))+s;r.push(u)}return r}(a);a.handles.textBox.hasMoved||(a.handles.textBox.x=Math.max(a.handles.start.x,a.handles.end.x),a.handles.textBox.y=(a.handles.start.y+a.handles.end.y)/2),(0,c.default)(e,h,a.handles.textBox,y,a.handles,S,n,v,0,!0)})},O=0;O<n.data.length;O++)P(O)}function S(e){var t=Math.min(e.start.x,e.end.x),n=Math.min(e.start.y,e.end.y),a=Math.abs(e.start.x-e.end.x),r=Math.abs(e.start.y-e.end.y);return[{x:t+a/2,y:n},{x:t,y:n+r/2},{x:t+a/2,y:n+r},{x:t+a,y:n+r/2}]}}var y=(0,r.default)({createNewMeasurement:v,onImageRendered:b,pointNearTool:g,toolType:m}),w=(0,i.default)({createNewMeasurement:v,onImageRendered:b,pointNearTool:g,toolType:m});t.rectangleRoi=y,t.rectangleRoiTouch=w},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.probeTouch=t.probe=void 0;var a=m(n(0)),r=m(n(10)),i=m(n(12)),o=m(n(7)),l=m(n(21)),s=m(n(9)),u=m(n(11)),d=m(n(40)),c=m(n(20)),f=n(2),h=n(3);function m(e){return e&&e.__esModule?e:{default:e}}var v="probe";function g(e){return{visible:!0,active:!0,color:void 0,handles:{end:{x:e.currentPoints.image.x,y:e.currentPoints.image.y,highlight:!0,active:!0}}}}function p(e,t,n){if(!1===t.visible)return!1;var r=a.default.cornerstone.pixelToCanvas(e,t.handles.end);return a.default.cornerstoneMath.point.distance(r,n)<5}function b(e){var t=e.detail,n=(0,f.getToolState)(e.currentTarget,v);if(n)for(var r=a.default.cornerstone,i=(0,h.getNewContext)(t.canvasContext.canvas),m=l.default.getFontSize(),g=function(e){var a=n.data[e];if(!1===a.visible)return"continue";(0,h.draw)(i,function(e){var n=o.default.getColorIfActive(a);(0,s.default)(e,t,a.handles,n);var i=Math.round(a.handles.end.x),l=Math.round(a.handles.end.y),f=void 0,h=void 0,v=void 0;if(i>=0&&l>=0&&i<t.image.columns&&l<t.image.rows){if(t.image.color)h=i+", "+l,v="R: "+(f=(0,d.default)(t.element,i,l,1,1))[0]+" G: "+f[1]+" B: "+f[2];else{var g=(f=r.getStoredPixels(t.element,i,l,1,1))[0],p=g*t.image.slope+t.image.intercept,b=(0,c.default)(t.image,g);h=i+", "+l,v="SP: "+g+" MO: "+parseFloat(p.toFixed(3)),b&&(v+=" SUV: "+parseFloat(b.toFixed(3)))}var y={x:a.handles.end.x+3,y:a.handles.end.y-3},w=r.pixelToCanvas(t.element,y);(0,u.default)(e,v,w.x,w.y+m+5,n),(0,u.default)(e,h,w.x,w.y,n)}})},p=0;p<n.data.length;p++)g(p)}var y=(0,r.default)({createNewMeasurement:g,onImageRendered:b,pointNearTool:p,toolType:v}),w=(0,i.default)({createNewMeasurement:g,onImageRendered:b,pointNearTool:p,toolType:v});t.probe=y,t.probeTouch=w},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=r(n(0));function r(e){return e&&e.__esModule?e:{default:e}}var i=(0,r(n(35)).default)(function(e){var t=e.detail,n=i.getConfiguration();n&&n.testPointers(t)&&(t.viewport.translation.x+=t.deltaPoints.page.x/t.viewport.scale,t.viewport.translation.y+=t.deltaPoints.page.y/t.viewport.scale,a.default.cornerstone.setViewport(t.element,t.viewport),e.preventDefault(),e.stopPropagation())});i.setConfiguration({testPointers:function(e){return e.numPointers>=2}}),t.default=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.panTouchDrag=t.pan=void 0;var a=u(n(1)),r=u(n(0)),i=u(n(14)),o=u(n(18)),l=u(n(5)),s=n(4);function u(e){return e&&e.__esModule?e:{default:e}}var d="pan";function c(e){var t=e.detail.element;t.removeEventListener(a.default.MOUSE_DRAG,f),t.removeEventListener(a.default.MOUSE_UP,c),t.removeEventListener(a.default.MOUSE_CLICK,c)}function f(e){var t=e.detail,n=t.viewport.scale,a=t.viewport.scale;t.image.rowPixelSpacing<t.image.columnPixelSpacing?n*=t.image.columnPixelSpacing/t.image.rowPixelSpacing:t.image.columnPixelSpacing<t.image.rowPixelSpacing&&(a*=t.image.rowPixelSpacing/t.image.columnPixelSpacing),t.viewport.translation.x+=t.deltaPoints.page.x/n,t.viewport.translation.y+=t.deltaPoints.page.y/a,r.default.cornerstone.setViewport(t.element,t.viewport),e.preventDefault(),e.stopPropagation()}var h=(0,i.default)(function(e){var t=e.detail,n=t.element,r=(0,s.getToolOptions)(d,n);(0,l.default)(t.which,r.mouseButtonMask)&&(n.addEventListener(a.default.MOUSE_DRAG,f),n.addEventListener(a.default.MOUSE_UP,c),n.addEventListener(a.default.MOUSE_CLICK,c),e.preventDefault(),e.stopPropagation())},d),m=(0,o.default)(f,d);t.pan=h,t.panTouchDrag=m},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=d(n(0)),r=d(n(66)),i=d(n(24)),o=d(n(7)),l=n(11),s=d(l),u=n(3);function d(e){return e&&e.__esModule?e:{default:e}}var c=(0,i.default)(function(e){var t=e.detail,n=t.element,i=function(e){var t=a.default.cornerstone,n=t.getEnabledElement(e),i=t.metaData.get("imagePlaneModule",n.image.imageId);if(i&&i.rowCosines&&i.columnCosines){var o=r.default.getOrientationString(i.rowCosines),l=r.default.getOrientationString(i.columnCosines),s=r.default.invertOrientationString(o);return{top:r.default.invertOrientationString(l),bottom:l,left:s,right:o}}}(n);if(i){var d=function(e){var t=a.default.cornerstone,n=t.getEnabledElement(e),r=void 0;r={x:n.image.width/2,y:5};var i=t.pixelToCanvas(e,r);r={x:n.image.width/2,y:n.image.height-5};var o=t.pixelToCanvas(e,r);r={x:5,y:n.image.height/2};var l=t.pixelToCanvas(e,r);return r={x:n.image.width-10,y:n.image.height/2},{top:i,bottom:o,left:l,right:t.pixelToCanvas(e,r)}}(n),f=(0,u.getNewContext)(t.canvasContext.canvas),h=o.default.getToolColor(),m=(0,l.textBoxWidth)(f,i.top,0),v=(0,l.textBoxWidth)(f,i.left,0),g=(0,l.textBoxWidth)(f,i.right,0),p=(0,l.textBoxWidth)(f,i.bottom,0);(0,s.default)(f,i.top,d.top.x-m/2,d.top.y,h),(0,s.default)(f,i.left,d.left.x-v/2,d.left.y,h);var b=c.getConfiguration();b&&b.drawAllMarkers&&((0,s.default)(f,i.right,d.right.x-g/2,d.right.y,h),(0,s.default)(f,i.bottom,d.bottom.x-p/2,d.bottom.y,h))}});t.default=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.magnifyTouchDrag=t.magnify=void 0;var a=d(n(1)),r=d(n(0)),i=n(33),o=d(n(5)),l=n(4),s=n(8),u=n(3);function d(e){return e&&e.__esModule?e:{default:e}}var c="magnify",f={magnifySize:300,magnificationLevel:5},h=void 0,m=void 0,v=void 0,g=void 0;function p(e){var t=e.detail,n=t.element;n.removeEventListener(a.default.MOUSE_DRAG,E),n.removeEventListener(a.default.MOUSE_UP,p),n.removeEventListener(a.default.MOUSE_CLICK,p),b(t)}function b(e){e.element.querySelector(".magnifyTool").style.display="none",document.body.style.cursor="default",P()}function y(e){var t=e.detail,n=t.element,i=(0,l.getToolOptions)(c,n);(e.isTouchEvent||(0,o.default)(t.which,i.mouseButtonMask))&&(n.addEventListener(a.default.MOUSE_DRAG,E),n.addEventListener(a.default.TOUCH_DRAG,E),n.addEventListener(a.default.MOUSE_UP,p),n.addEventListener(a.default.TOUCH_END,p),n.addEventListener(a.default.MOUSE_CLICK,p),n.addEventListener(a.default.NEW_IMAGE,w),function(e){P();var t=e.enabledElement;void 0===t&&(t=r.default.cornerstone.getEnabledElement(e.element));var n=S.getConfiguration().magnificationLevel,a=t.canvas,i=t.image;(g=document.createElement("div")).width=a.width*n,g.height=a.height*n,r.default.cornerstone.enable(g);var o=r.default.cornerstone.getEnabledElement(g),l=r.default.cornerstone.getViewport(t.element);(v=o.canvas).width=a.width*n,v.height=a.height*n,o.viewport=Object.assign({},l),l.scale*=n,r.default.cornerstone.displayImage(g,i),r.default.cornerstone.setViewport(g,l)}(t),window.requestAnimationFrame(function(){return x(t)}),e.preventDefault(),e.stopPropagation())}function w(e){var t=e.detail;t.currentPoints=m,x(t)}function _(e){var t=e.detail,n=t.element;n.removeEventListener(a.default.TOUCH_DRAG_END,_),n.removeEventListener(a.default.TOUCH_END,_),n.removeEventListener(a.default.NEW_IMAGE,w),b(t)}function E(e){var t=e.detail,n=t.element;x(t),!0===t.isTouchEvent&&(n.addEventListener(a.default.TOUCH_DRAG_END,_),n.addEventListener(a.default.TOUCH_END,_)),e.preventDefault(),e.stopPropagation()}function x(e){var t=e.element,n=t.querySelector(".magnifyTool");if(n||T(e.element),void 0!==v){var a=S.getConfiguration(),i=a.magnifySize,o=a.magnificationLevel,l=t.querySelector("canvas:not(.magnifyTool)"),d=(0,u.getNewContext)(n),c=i,f=r.default.cornerstone.pixelToCanvas(e.element,e.currentPoints.image);(0,s.clipToBox)(f,l),d.clearRect(0,0,i,i);var m={left:0,top:0,width:i,height:i};(0,u.fillBox)(d,m,"transparent");var g={x:f.x*o-.5*c,y:f.y*o-.5*c};"Safari"===h&&(g.x=Math.max(g.x,0),g.y=Math.max(g.y,0)),g.x=Math.min(g.x,v.width),g.y=Math.min(g.y,v.height),d.drawImage(v,g.x,g.y,c,c,0,0,c,c),n.style.top=f.y-.5*i+"px",n.style.left=f.x-.5*i+"px",e.isTouchEvent&&(n.style.top=f.y-.5*i-120+"px"),n.style.display="block",document.body.style.cursor="none"}}function T(e){if(null===e.querySelector(".magnifyTool")){var t=document.createElement("canvas");t.classList.add("magnifyTool");var n=S.getConfiguration();t.width=n.magnifySize,t.height=n.magnifySize,t.style.position="absolute",t.style.display="none",e.appendChild(t)}}function P(){void 0!==g&&(r.default.cornerstone.disable(g),g=void 0,v=void 0)}function O(e){e.removeEventListener(a.default.MOUSE_DOWN,y),function(e){var t=e.querySelector(".magnifyTool");t&&e.removeChild(t)}(e)}var S={enable:function(e){var t=S.getConfiguration(t);if(!h){var n=(0,i.getBrowserInfo)().split(" ");h=n[0]}T(e)},activate:function(e,t){(0,l.setToolOptions)(c,e,{mouseButtonMask:t}),e.removeEventListener(a.default.MOUSE_DOWN,y),e.addEventListener(a.default.MOUSE_DOWN,y),T(e)},deactivate:O,disable:O,getConfiguration:function(){return f},setConfiguration:function(e){f=e}};function I(e){e.removeEventListener(a.default.TOUCH_START,y),e.addEventListener(a.default.TOUCH_START,y)}function M(e){e.removeEventListener(a.default.TOUCH_START,y)}var C={activate:I,deactivate:M,enable:I,disable:M};t.magnify=S,t.magnifyTouchDrag=C},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.lengthTouch=t.length=void 0;var a=h(n(0)),r=h(n(10)),i=h(n(12)),o=h(n(17)),l=h(n(15)),s=h(n(7)),u=h(n(9)),d=n(2),c=h(n(27)),f=n(3);function h(e){return e&&e.__esModule?e:{default:e}}var m="length";function v(e){return{visible:!0,active:!0,color:void 0,handles:{start:{x:e.currentPoints.image.x,y:e.currentPoints.image.y,highlight:!0,active:!1},end:{x:e.currentPoints.image.x,y:e.currentPoints.image.y,highlight:!0,active:!0},textBox:{active:!1,hasMoved:!1,movesIndependently:!1,drawnIndependently:!0,allowedOutsideImage:!0,hasBoundingBox:!0}}}}function g(e,t,n){return!1!==t.visible&&(0,c.default)(e,t.handles.start,t.handles.end,n)<25}function p(e){var t=e.detail,n=(0,d.getToolState)(e.currentTarget,m);if(n){var r=a.default.cornerstone,i=(0,f.getNewContext)(t.canvasContext.canvas),c=t.image,h=t.element,v=l.default.getToolWidth(),g=b.getConfiguration(),p=r.metaData.get("imagePlaneModule",c.imageId),y=void 0,w=void 0;p?(y=p.rowPixelSpacing||p.rowImagePixelSpacing,w=p.columnPixelSpacing||p.colImagePixelSpacing):(y=c.rowPixelSpacing,w=c.columnPixelSpacing);for(var _=function(e){var a=n.data[e];if(!1===a.visible)return"continue";(0,f.draw)(i,function(e){(0,f.setShadow)(e,g);var n=s.default.getColorIfActive(a);(0,f.drawLine)(e,h,a.handles.start,a.handles.end,{color:n});var r={drawHandlesIfActive:g&&g.drawHandlesOnHover};(0,u.default)(e,t,a.handles,n,r);var i=(a.handles.end.x-a.handles.start.x)*(w||1),l=(a.handles.end.y-a.handles.start.y)*(y||1),d=Math.sqrt(i*i+l*l);if(a.length=d,!a.handles.textBox.hasMoved){var c={x:Math.max(a.handles.start.x,a.handles.end.x)};c.x===a.handles.start.x?c.y=a.handles.start.y:c.y=a.handles.end.y,a.handles.textBox.x=c.x,a.handles.textBox.y=c.y}var m=function(e,t,n){var a=" mm";return a=" pixels",""+e.length.toFixed(2)+a}(a);(0,o.default)(e,h,a.handles.textBox,m,a.handles,x,n,v,10,!0)})},E=0;E<n.data.length;E++)_(E)}function x(e){var t={x:(e.start.x+e.end.x)/2,y:(e.start.y+e.end.y)/2};return[e.start,t,e.end]}}var b=(0,r.default)({createNewMeasurement:v,onImageRendered:p,pointNearTool:g,toolType:m}),y=(0,i.default)({createNewMeasurement:v,onImageRendered:p,pointNearTool:g,toolType:m});t.length=b,t.lengthTouch=y},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=o(n(24)),r=o(n(11)),i=n(3);function o(e){return e&&e.__esModule?e:{default:e}}var l=(0,a.default)(function(e){var t=e.detail,n=t.image.stats,a=(0,i.getNewContext)(t.canvasContext.canvas),o=[];Object.keys(n).forEach(function(e){var t=e+" : "+n[e];o.push(t)}),(0,r.default)(a,o,0,0,"orange"),o.forEach(function(e){console.log(e)})});t.default=l},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.highlightTouch=t.highlight=void 0;var a=d(n(0)),r=d(n(51)),i=d(n(12)),o=d(n(7)),l=d(n(9)),s=n(2),u=n(3);function d(e){return e&&e.__esModule?e:{default:e}}var c="highlight";function f(e){var t=(0,s.getToolState)(e.event.currentTarget,c);if(!(t&&t.data&&t.data.length>0))return{visible:!0,active:!0,color:void 0,handles:{start:{x:e.currentPoints.image.x,y:e.currentPoints.image.y,highlight:!0,active:!1},end:{x:e.currentPoints.image.x,y:e.currentPoints.image.y,highlight:!0,active:!0}}}}function h(e,t,n){var r=a.default.cornerstone,i=r.pixelToCanvas(e,t.handles.start),o=r.pixelToCanvas(e,t.handles.end),l=Math.min(i.x,o.x),s=Math.min(i.y,o.y),u=Math.abs(i.x-o.x),d=Math.abs(i.y-o.y),c=!1;return n.x>=l&&n.x<=l+u&&n.y>=s&&n.y<=s+d&&(c=!0),c}function m(e,t,n){if(!1===t.visible)return!1;var r=a.default.cornerstone,i=r.pixelToCanvas(e,t.handles.start),o=r.pixelToCanvas(e,t.handles.end),l={left:Math.min(i.x,o.x),top:Math.min(i.y,o.y),width:Math.abs(i.x-o.x),height:Math.abs(i.y-o.y)};return a.default.cornerstoneMath.rect.distanceToPoint(l,n)<5}function v(e){var t=e.detail,n=(0,s.getToolState)(e.currentTarget,c);if(void 0!==n){var a=(0,u.getNewContext)(t.canvasContext.canvas),r=n.data[0];!1!==r.visible&&r&&(0,u.draw)(a,function(e){var n={color:"transparent",fillStyle:"rgba(0,0,0,0.7)"};(0,u.fillOutsideRect)(e,t.element,r.handles.start,r.handles.end,n);var a=o.default.getColorIfActive(r);n={color:a,lineDash:[4]},(0,u.drawRect)(e,t.element,r.handles.start,r.handles.end,n),(0,l.default)(e,t,r.handles,a)})}}var g=(0,r.default)({createNewMeasurement:f,onImageRendered:v,pointNearTool:m,pointInsideRect:h,toolType:c},!0),p=(0,i.default)({createNewMeasurement:f,onImageRendered:v,pointNearTool:m,pointInsideRect:h,toolType:c},!0);t.highlight=g,t.highlightTouch=p},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Sculpter=void 0;var a,r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),i=n(0),o=(a=i)&&a.__esModule?a:{default:a},l=n(52),s=n(34),u=n(8);t.Sculpter=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}return r(e,[{key:"sculpt",value:function(e,t){this._setData(e,t),this._pushHandles(),this._insertNewHandles(),this._consolidateHandles()}},{key:"_setData",value:function(e,t){var n=l.freehandSculpter.getConfiguration();this._eventData=e,this._element=e.element,this._image=e.image,this._mousePoint=e.currentPoints.image,this._dataHandles=t,this._toolSize=n.toolSizeImage,this._minSpacing=n.minSpacing,this._maxSpacing=n.maxSpacing}},{key:"_pushHandles",value:function(){for(var e=this._dataHandles,t=this._mousePoint,n=this._toolSize,a=0;a<e.length;a++){var r=o.default.cornerstoneMath.point.distance(e[a],t);r<n&&this._pushOneHandle(a,r)}}},{key:"_pushOneHandle",value:function(t,n){var a=this._dataHandles,r=a[t],i=this._mousePoint,o=this._toolSize,l=(r.x-i.x)/n,s=(r.y-i.y)/n,d={x:i.x+o*l,y:i.y+o*s};(0,u.clipToBox)(d,this._image),r.x=d.x,r.y=d.y;var c=e.getPreviousHandleIndex(t,a.length);a[c].lines.pop(),a[c].lines.push(r)}},{key:"_insertNewHandles",value:function(){for(var e=this._findNewHandleIndicies(),t=0,n=0;n<e.length;n++){var a=e[n]+1+t;this._insertHandleRadially(a),t++}}},{key:"_findNewHandleIndicies",value:function(){for(var t=this._dataHandles,n=[],a=0;a<t.length;a++){var r=o.default.cornerstone.pixelToCanvas(this._element,t[a]),i=e.getNextHandleIndex(a,t.length),l=o.default.cornerstone.pixelToCanvas(this._element,t[i]);o.default.cornerstoneMath.point.distance(r,l)>this._maxSpacing&&n.push(a)}return n}},{key:"_insertHandleRadially",value:function(t){var n=this._dataHandles,a=t-1,r=e.getNextHandleIndexBeforeInsert(t,n.length),i=this._getInsertPosition(t,a,r),o=new s.FreehandHandleData(i);n.splice(t,0,o),n[a].lines.pop(),n[a].lines.push(n[t]),t===n.length-1?n[t].lines.push(n[0]):n[t].lines.push(n[t+1])}},{key:"_getInsertPosition",value:function(e,t,n){var a=this._toolSize,r=this._mousePoint,i=this._dataHandles,l={x:(i[t].x+i[n].x)/2,y:(i[t].y+i[n].y)/2},s=o.default.cornerstoneMath.point.distance(r,l),d=void 0;if(s<a){var c={x:(l.x-r.x)/s,y:(l.y-r.y)/s};d={x:r.x+a*c.x,y:r.y+a*c.y}}else d=l;return(0,u.clipToBox)(d,this._image),d}},{key:"_consolidateHandles",value:function(){if(this._dataHandles.length>3){var e=this._findCloseHandlePairs();this._mergeCloseHandles(e)}}},{key:"_mergeCloseHandles",value:function(t){for(var n=0,a=0;a<t.length;a++){var r=e.getCorrectedPair(t[a],n);this._combineHandles(r),n++}var i=this._findCloseHandlePairs();i.length&&this._mergeCloseHandles(i)}},{key:"_findCloseHandlePairs",value:function(){for(var t=this._dataHandles,n=this._element,a=[],r=t.length,i=0;i<r;i++){var l=o.default.cornerstone.pixelToCanvas(n,t[i]),s=e.getNextHandleIndex(i,t.length),u=o.default.cornerstone.pixelToCanvas(n,t[s]);if(o.default.cornerstoneMath.point.distance(l,u)<this._minSpacing){var d=[i,s];a.push(d),0===i&&(r-=1),i++}}return a}},{key:"_combineHandles",value:function(t){var n=this._dataHandles,a={x:(n[t[0]].x+n[t[1]].x)/2,y:(n[t[0]].y+n[t[1]].y)/2};(0,u.clipToBox)(a,this._image),n[t[0]].x=a.x,n[t[0]].y=a.y;var r=e.getNextHandleIndex(t[1],n.length);n[t[0]].lines.pop(),n[t[0]].lines.push(n[r]),n.splice(t[1],1)}}],[{key:"getNextHandleIndex",value:function(e,t){return e===t-1?0:e+1}},{key:"getNextHandleIndexBeforeInsert",value:function(e,t){return e===t?0:e}},{key:"getPreviousHandleIndex",value:function(e,t){return 0===e?t-1:e-1}},{key:"getCorrectedPair",value:function(e,t){var n=[e[0]-t,e[1]-t];return n[1]<0&&(n[1]=0),n}}]),e}()},function(e,t,n){"use strict";function a(e,t,n){return a=e.y,r=t.y,i=n.y,!(!(r<a&&a<i||i<a&&a<r)||!function(e,t,n){if(t.x>e.x&&n.x>e.x)return!0;if(t.x===n.x)return e.x<t.x;if(t.x>n.x){var a=t;t=n,n=a}var r=function(e,t,n){var a=(n.y-t.y)/(n.x-t.x);return{value:t.x+a*(e.x-t.x),gradient:a}}(e,t,n);return Math.sign(r.gradient)*e.y>r.value}(e,t,n));var a,r,i}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){for(var n=!1,r=e.length-1,i=0;i<e.length;i++)a(t,e[i],e[r])&&(n=!n),r=i;return n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){var a={count:0,mean:0,variance:0,stdDev:0},r=function(e,t,n){for(var a={value:0,squared:0,count:0},r=0,i=t.top;i<t.top+t.height;i++)for(var l=t.left;l<t.left+t.width;l++){var s={x:l,y:i};o(n,s,a,e[r]),r++}return a}(e,t,n);return 0===r.count?a:(a.count=r.count,a.mean=r.value/r.count,a.variance=r.squared/r.count-a.mean*a.mean,a.stdDev=Math.sqrt(a.variance),a)};var a,r=n(92),i=(a=r)&&a.__esModule?a:{default:a};function o(e,t,n,a){(0,i.default)(e,t)&&(n.value+=a,n.squared+=a*a,n.count++)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var n=0,a=e.length-1;t=t||1;for(var r=0;r<e.length;r++)n+=(e[a].x+e[r].x)*(e[a].y-e[r].y),a=r;return Math.abs(n*t/2)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ClickedLineData=function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.toolIndex=t,this.handleIndexArray=n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var n=e.detail;if(t&&null!==t.handleNearby)!function(e,t){var n=(0,o.getToolState)(e.element,u);if(void 0!==n){var a=t.handleIndex,r=t.toolIndex,i=n.data[r];i.handles.length<=3||(a===i.handles.length-1?(i.handles[a-1].lines.pop(),i.handles[a-1].lines.push(i.handles[0])):0===a?(i.handles[i.handles.length-1].lines.pop(),i.handles[i.handles.length-1].lines.push(i.handles[a+1])):(i.handles[a-1].lines.pop(),i.handles[a-1].lines.push(i.handles[a+1])),i.handles.splice(a,1),i.invalidated=!0,i.active=!0,i.highlight=!0,s.default.cornerstone.updateImage(e.element))}}(n,{toolIndex:t.toolIndex,handleIndex:t.handleNearby});else{var a=new r.FreehandLineFinder(n).findLine();a&&function(e,t){var n=(0,o.getToolState)(e.element,u);if(void 0!==n){var a=n.data[t.toolIndex],r=function(e){for(var t=e.handleIndexArray,n=1/0,a=t.includes(0),r=0;r<t.length;r++){var i=t[r];0!==i&&i<n&&(n=i)}return a&&1===n&&(n=0),++n}(t);if(r!==1/0){var l=new i.FreehandHandleData(e.currentPoints.image);a.handles.splice(r,0,l),a.handles[r-1].lines.pop(),a.handles[r-1].lines.push(e.currentPoints.image),r===a.handles.length-1?a.handles[r].lines.push(a.handles[0]):a.handles[r].lines.push(a.handles[r+1]),a.active=!0,a.highlight=!0,a.invalidated=!0,s.default.cornerstone.updateImage(e.element)}}}(n,a)}e.preventDefault(),e.stopPropagation()};var a,r=n(53),i=n(34),o=n(2),l=n(0),s=(a=l)&&a.__esModule?a:{default:a},u="freehand"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){e.detail;var n=a.freehand.getConfiguration();return!0===n.movingTextBox?(function(e,t){var n=a.freehand.getConfiguration();n.movingTextBox=!1,t.data[n.currentTool].invalidated=!0,n.currentHandle=0,n.currentTool=-1}(0,t),"textBox"):n.modifying?(function(e,t){var n=a.freehand.getConfiguration(),r=n.currentTool,i=t.data[r].handles;if(i.invalidHandlePlacement){var o=n.currentHandle,l=i[o],s=void 0;if(0===o){var u=i.length-1;s=i[u]}else s=i[o-1];l.x=n.dragOrigin.x,l.y=n.dragOrigin.y,s.lines[0]=l,i.invalidHandlePlacement=!1}}(0,t),"handle"):null};var a=n(23)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var n=r.freehand.getConfiguration();n.movingTextBox&&function(e){var t=r.freehand.getConfiguration();e.hasMoved=!0,e.x=t.mouseLocation.handles.start.x,e.y=t.mouseLocation.handles.start.y}(e),n.modifying&&function(e,t){var n=r.freehand.getConfiguration();if(t.handles.invalidHandlePlacement=o.default.modify(t.handles,e),t.active=!0,t.highlight=!0,t.handles[e].x=n.mouseLocation.handles.start.x,t.handles[e].y=n.mouseLocation.handles.start.y,e){var a=t.handles[e-1].lines.length-1,i=t.handles[e-1].lines[a];i.x=n.mouseLocation.handles.start.x,i.y=n.mouseLocation.handles.start.y}}(e,t)};var a,r=n(23),i=n(54),o=(a=i)&&a.__esModule?a:{default:a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.eraserTouch=t.eraser=void 0;var a=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(46)),r=l(n(0)),i=l(n(14)),o=l(n(56));function l(e){return e&&e.__esModule?e:{default:e}}function s(e){var t=e.detail.currentPoints.canvas,n=e.detail.element;Object.keys(a).forEach(function(e){var i=a[e],o=a.getToolState(n,e);o&&o.data.forEach(function(o){"function"==typeof i.pointNearTool&&i.pointNearTool(n,o,t)&&(a.removeToolState(n,e,o),r.default.cornerstone.updateImage(n))})})}var u=(0,i.default)(s,"eraser"),d=(0,o.default)(s,"eraser");t.eraser=u,t.eraserTouch=d},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ellipticalRoiTouch=t.ellipticalRoi=void 0;var a=v(n(0)),r=v(n(10)),i=v(n(12)),o=v(n(15)),l=v(n(7)),s=v(n(9)),u=v(n(41)),d=v(n(62)),c=v(n(20)),f=v(n(17)),h=n(2),m=n(3);function v(e){return e&&e.__esModule?e:{default:e}}var g="ellipticalRoi";function p(e){return{visible:!0,active:!0,invalidated:!0,color:void 0,handles:{start:{x:e.currentPoints.image.x,y:e.currentPoints.image.y,highlight:!0,active:!1},end:{x:e.currentPoints.image.x,y:e.currentPoints.image.y,highlight:!0,active:!0},textBox:{active:!1,hasMoved:!1,movesIndependently:!1,drawnIndependently:!0,allowedOutsideImage:!0,hasBoundingBox:!0}}}}function b(e,t,n,r){if(!1===t.visible)return!1;var i=a.default.cornerstone,o=i.pixelToCanvas(e,t.handles.start),l=i.pixelToCanvas(e,t.handles.end),s={left:Math.min(o.x,l.x)+r/2,top:Math.min(o.y,l.y)+r/2,width:Math.abs(o.x-l.x)-r,height:Math.abs(o.y-l.y)-r},d={left:Math.min(o.x,l.x)-r/2,top:Math.min(o.y,l.y)-r/2,width:Math.abs(o.x-l.x)+r,height:Math.abs(o.y-l.y)+r},c=(0,u.default)(s,n);return!(!(0,u.default)(d,n)||c)}function y(e){var t=e.toString().split(".");return t[0]=t[0].replace(/\B(?=(\d{3})+(?!\d))/g,","),t.join(".")}function w(e){var t=e.detail,n=(0,h.getToolState)(e.currentTarget,g);if(n){var r=a.default.cornerstone,i=t.image,u=t.element,v=o.default.getToolWidth(),p=_.getConfiguration(),b=r.metaData.get("generalSeriesModule",i.imageId),w=r.metaData.get("imagePlaneModule",i.imageId),E=void 0,x=void 0,T=void 0;w?(x=w.rowPixelSpacing||w.rowImagePixelSpacing,T=w.columnPixelSpacing||w.colImagePixelSpacing):(x=i.rowPixelSpacing,T=i.columnPixelSpacing),b&&(E=b.modality);for(var P=(0,m.getNewContext)(t.canvasContext.canvas),O=function(e){var a=n.data[e];if(!1===a.visible)return"continue";(0,m.draw)(P,function(e){(0,m.setShadow)(e,p);var n=l.default.getColorIfActive(a);(0,m.drawEllipse)(e,u,a.handles.start,a.handles.end,{color:n}),p&&p.drawHandlesOnHover?!0===a.active?(0,s.default)(e,t,a.handles,n):(0,s.default)(e,t,a.handles,n,{drawHandlesIfActive:!0}):(0,s.default)(e,t,a.handles,n);var o=void 0,h=void 0,g=void 0;if(!1===a.invalidated)h=a.meanStdDev,g=a.meanStdDevSUV,o=a.area;else{var b={left:Math.round(Math.min(a.handles.start.x,a.handles.end.x)),top:Math.round(Math.min(a.handles.start.y,a.handles.end.y)),width:Math.round(Math.abs(a.handles.start.x-a.handles.end.x)),height:Math.round(Math.abs(a.handles.start.y-a.handles.end.y))};if(!i.color){var w=r.getPixels(u,b.left,b.top,b.width,b.height);h=(0,d.default)(w,b),"PT"===E&&(g={mean:(0,c.default)(i,(h.mean-i.intercept)/i.slope),stdDev:(0,c.default)(i,(h.stdDev-i.intercept)/i.slope)}),h&&!isNaN(h.mean)&&(a.meanStdDev=h,a.meanStdDevSUV=g)}o=Math.PI*(b.width*(T||1)/2)*(b.height*(x||1)/2),isNaN(o)||(a.area=o),a.invalidated=!1}a.handles.textBox.hasMoved||(a.handles.textBox.x=Math.max(a.handles.start.x,a.handles.end.x),a.handles.textBox.y=(a.handles.start.y+a.handles.end.y)/2);var _=function(e){var t=e.meanStdDev,n=e.meanStdDevSUV,a=e.area,r=[];if(t&&void 0!==t.mean){var i="";"CT"===E&&(i=" HU");var o="Mean: "+y(t.mean.toFixed(2))+i,l="StdDev: "+y(t.stdDev.toFixed(2))+i;n&&void 0!==n.mean&&(o+=" SUV: "+y(n.mean.toFixed(2)),l+=" SUV: "+y(n.stdDev.toFixed(2))),r.push(o),r.push(l)}if(a){var s=" mm"+String.fromCharCode(178);x&&T||(s=" pixels"+String.fromCharCode(178));var u="Area: "+y(a.toFixed(2))+s;r.push(u)}return r}(a);(0,f.default)(e,u,a.handles.textBox,_,a.handles,I,n,v,0,!0)})},S=0;S<n.data.length;S++)O(S)}function I(e){var t=Math.min(e.start.x,e.end.x),n=Math.min(e.start.y,e.end.y),a=Math.abs(e.start.x-e.end.x),r=Math.abs(e.start.y-e.end.y);return[{x:t+a/2,y:n},{x:t,y:n+r/2},{x:t+a/2,y:n+r},{x:t+a,y:n+r/2}]}}var _=(0,r.default)({createNewMeasurement:p,onImageRendered:w,pointNearTool:function(e,t,n){return b(e,t,n,15)},toolType:g}),E=(0,i.default)({createNewMeasurement:p,onImageRendered:w,pointNearTool:function(e,t,n){return b(e,t,n,25)},toolType:g});t.ellipticalRoi=_,t.ellipticalRoiTouch=E},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.dragProbeTouch=t.dragProbe=void 0;var a=g(n(1)),r=g(n(0)),i=g(n(14)),o=g(n(18)),l=g(n(21)),s=g(n(7)),u=n(11),d=g(u),c=g(n(40)),f=g(n(20)),h=g(n(5)),m=n(4),v=n(3);function g(e){return e&&e.__esModule?e:{default:e}}var p="dragProbe",b=void 0;function y(e){var t=r.default.cornerstone,n=t.getEnabledElement(e.element),a=(0,v.getNewContext)(n.canvas),i=s.default.getActiveColor(),o=l.default.getFontSize(),u=x.getConfiguration(),h=Math.round(e.currentPoints.image.x),m=Math.round(e.currentPoints.image.y);h<0||m<0||h>=e.image.columns||m>=e.image.rows||(0,v.draw)(a,function(n){(0,v.setShadow)(n,u);var a=void 0,r=void 0,l=void 0;if(e.image.color)a=(0,c.default)(e.element,h,m,1,1),r=h+", "+m,l="R: "+a[0]+" G: "+a[1]+" B: "+a[2]+" A: "+a[3];else{var s=(a=t.getStoredPixels(e.element,h,m,1,1))[0],g=s*e.image.slope+e.image.intercept,p=(0,f.default)(e.image,s);r=h+", "+m,l="SP: "+s+" MO: "+parseFloat(g.toFixed(3)),p&&(l+=" SUV: "+parseFloat(p.toFixed(3)))}var b={x:e.currentPoints.image.x+3,y:e.currentPoints.image.y-3},y=t.pixelToCanvas(e.element,b);(0,d.default)(n,l,y.x,y.y+o+5,i),(0,d.default)(n,r,y.x,y.y,i)})}function w(e){var t=e.detail,n=t.element;n.removeEventListener(a.default.IMAGE_RENDERED,_),n.removeEventListener(a.default.MOUSE_DRAG,E),n.removeEventListener(a.default.MOUSE_UP,w),n.removeEventListener(a.default.MOUSE_CLICK,w),r.default.cornerstone.updateImage(t.element)}function _(){b&&(x.strategy(b),b=null)}function E(e){var t=e.detail,n=t.element;b=t,r.default.cornerstone.updateImage(n),e.preventDefault(),e.stopPropagation()}var x=(0,i.default)(function(e){var t=e.detail,n=t.element,r=(0,m.getToolOptions)(p,n);(0,h.default)(t.which,r.mouseButtonMask)&&(n.addEventListener(a.default.IMAGE_RENDERED,_),n.addEventListener(a.default.MOUSE_DRAG,E),n.addEventListener(a.default.MOUSE_UP,w),n.addEventListener(a.default.MOUSE_CLICK,w),x.strategy(t),e.preventDefault(),e.stopPropagation())},p);x.strategies={default:y,minimal:function(e){var t=r.default.cornerstone,n=e.element,a=t.getEnabledElement(n),i=a.image,o=(0,v.getNewContext)(a.canvas),h=s.default.getActiveColor(),m=x.getConfiguration(),g=void 0;(g=!0===e.isTouchEvent?t.pageToPixel(n,e.currentPoints.page.x,e.currentPoints.page.y-4*l.default.getFontSize()):t.pageToPixel(n,e.currentPoints.page.x,e.currentPoints.page.y-l.default.getFontSize()/2)).x<0||g.y<0||g.x>=i.columns||g.y>=i.rows||(0,v.draw)(o,function(a){(0,v.setShadow)(a,m);var r=t.metaData.get("generalSeriesModule",i.imageId),o=void 0;r&&(o=r.modality);var s=void 0,p="";if(i.color)p="R: "+(s=(0,c.default)(n,g.x,g.y,1,1))[0]+" G: "+s[1]+" B: "+s[2];else{var b=(s=t.getStoredPixels(n,g.x,g.y,1,1))[0],y=b*e.image.slope+e.image.intercept,w=parseFloat(y.toFixed(2));if("CT"===o)p+="HU: "+w;else if("PT"===o){p+=w;var _=(0,f.default)(e.image,b);_&&(p+=" SUV: "+parseFloat(_.toFixed(2)))}else p+=w}var E=t.pixelToCanvas(n,g),x=void 0,T=(0,u.textBoxWidth)(a,p,5);x=!0===e.isTouchEvent?{x:-T/2,y:-l.default.getFontSize()-10-12}:{x:12,y:-(l.default.getFontSize()+10)/2},(0,v.drawCircle)(a,n,E,6,{color:h},"canvas"),(0,d.default)(a,p,E.x+x.x,E.y+x.y,h)})}},x.strategy=y;var T={fireOnTouchStart:!0,touchStartCallback:function(e){e.detail.element.addEventListener(a.default.IMAGE_RENDERED,_)},touchEndCallback:function(e){var t=e.detail.element;t.removeEventListener(a.default.IMAGE_RENDERED,_),r.default.cornerstone.updateImage(t)}},P=(0,o.default)(E,p,T);t.dragProbe=x,t.dragProbeTouch=P},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=r(n(0));function r(e){return e&&e.__esModule?e:{default:e}}function i(e){a.default.cornerstone.fitToWindow(e.element)}var o=(0,r(n(57)).default)(function(e){var t=e.detail;o.strategy(t),e.preventDefault(),e.stopPropagation()});o.strategies={default:i},o.strategy=i,t.default=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.crosshairsTouch=t.crosshairs=void 0;var a=c(n(1)),r=c(n(0)),i=c(n(13)),o=n(2),l=c(n(5)),s=n(45),u=c(n(19)),d=n(4);function c(e){return e&&e.__esModule?e:{default:e}}var f="crosshairs";function h(e){var t=e.detail;e.stopImmediatePropagation();var n=(0,o.getToolState)(e.currentTarget,f);if(n){var a=r.default.cornerstone,l=e.currentTarget,d=a.getEnabledElement(l).image.imageId,c=a.metaData.get("imagePlaneModule",d);if(c){var h=t.currentPoints.image,m=(0,s.imagePointToPatientPoint)(h,c);n.data[0].synchronizationContext.getSourceElements().forEach(function(e){if(e!==l){var t=Number.MAX_VALUE,n=-1,r=(0,o.getToolState)(e,"stack");if(void 0!==r){var s=r.data[0];if(s.imageIds.forEach(function(e,r){var i=a.metaData.get("imagePlaneModule",e);if(i&&i.imagePositionPatient&&i.rowCosines&&i.columnCosines){var o=(0,u.default)(i.imagePositionPatient),l=(0,u.default)(i.rowCosines),s=(0,u.default)(i.columnCosines).clone().cross(l.clone()),d=Math.abs(s.clone().dot(o)-s.clone().dot(m));d<t&&(t=d,n=r)}}),n!==s.currentImageIdIndex&&-1!==n&&void 0!==s.imageIds[n]){var d=i.default.getStartLoadHandler(),c=i.default.getEndLoadHandler(),f=i.default.getErrorLoadingHandler();d&&d(e),(!0===s.preventCache?a.loadImage(s.imageIds[n]):a.loadAndCacheImage(s.imageIds[n])).then(function(t){var r=a.getViewport(e);s.currentImageIdIndex=n,a.displayImage(e,t,r),c&&c(e,t)},function(t){var a=s.imageIds[n];f&&f(e,a,t)})}}}})}}}function m(e){var t=e.detail.element;t.removeEventListener(a.default.MOUSE_DRAG,g),t.removeEventListener(a.default.MOUSE_UP,m)}function v(e){var t=e.detail,n=t.element,r=(0,d.getToolOptions)(f,n);(0,l.default)(t.which,r.mouseButtonMask)&&(n.addEventListener(a.default.MOUSE_DRAG,g),n.addEventListener(a.default.MOUSE_UP,m),h(e),e.preventDefault(),e.stopPropagation())}function g(e){h(e),e.preventDefault(),e.stopPropagation()}function p(e,t,n){(0,d.setToolOptions)(f,e,{mouseButtonMask:t}),(0,o.clearToolState)(e,f),(0,o.addToolState)(e,f,{synchronizationContext:n}),e.removeEventListener(a.default.MOUSE_DOWN,v),e.addEventListener(a.default.MOUSE_DOWN,v)}function b(e){e.removeEventListener(a.default.MOUSE_DOWN,v)}var y={activate:p,deactivate:b,enable:p,disable:b};function w(e){var t=e.detail.element;t.removeEventListener(a.default.TOUCH_DRAG,E),t.removeEventListener(a.default.TOUCH_DRAG_END,w)}function _(e){var t=e.detail.element;return t.addEventListener(a.default.TOUCH_DRAG,E),t.addEventListener(a.default.TOUCH_DRAG_END,w),h(e),!1}function E(e){h(e),e.preventDefault(),e.stopPropagation()}function x(e,t){(0,o.clearToolState)(e,f),(0,o.addToolState)(e,f,{synchronizationContext:t}),e.removeEventListener(a.default.TOUCH_START,_),e.addEventListener(a.default.TOUCH_START,_)}function T(e){e.removeEventListener(a.default.TOUCH_START,_)}var P={activate:x,deactivate:T,enable:x,disable:T};t.crosshairs=y,t.crosshairsTouch=P},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,a,r,l){var s=e.length>0?i.default.cornerstoneMath.point.findClosestPoint(e,t):t,u=[{x:n.left+n.width/2,y:n.top},{x:n.left,y:n.top+n.height/2},{x:n.left+n.width/2,y:n.top+n.height},{x:n.left+n.width,y:n.top+n.height/2}],d=i.default.cornerstoneMath.point.findClosestPoint(u,s),c={color:r,lineWidth:l,lineDash:[2,3]};(0,o.drawLine)(a,void 0,s,d,c,"canvas")};var a,r=n(0),i=(a=r)&&a.__esModule?a:{default:a},o=n(3)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.arrowAnnotateTouch=t.arrowAnnotate=void 0;var a=x(n(1)),r=x(n(0)),i=x(n(10)),o=x(n(12)),l=x(n(15)),s=x(n(21)),u=x(n(7)),d=x(n(9)),c=x(n(63)),f=x(n(30)),h=x(n(28)),m=x(n(16)),v=x(n(5)),g=x(n(22)),p=x(n(17)),b=n(2),y=n(4),w=x(n(27)),_=n(3),E=n(11);function x(e){return e&&e.__esModule?e:{default:e}}var T="arrowAnnotate",P={getTextCallback:function(e){e(prompt("Enter your annotation:"))},changeTextCallback:function(e,t,n){n(prompt("Change your annotation:"))},drawHandles:!1,drawHandlesOnHover:!0,arrowFirst:!0};function O(e){return{visible:!0,active:!0,color:void 0,handles:{start:{x:e.currentPoints.image.x,y:e.currentPoints.image.y,highlight:!0,active:!1},end:{x:e.currentPoints.image.x,y:e.currentPoints.image.y,highlight:!0,active:!1},textBox:{active:!1,hasMoved:!1,movesIndependently:!1,drawnIndependently:!0,allowedOutsideImage:!0,hasBoundingBox:!0}}}}function S(e,t,n){return!1!==t.visible&&(0,w.default)(e,t.handles.start,t.handles.end,n)<25}function I(e){var t=e.detail,n=(0,b.getToolState)(e.currentTarget,T);if(n)for(var a=t.enabledElement,i=r.default.cornerstone,o=(0,_.getNewContext)(t.canvasContext.canvas),f=l.default.getToolWidth(),h=M.getConfiguration(),m=function(e){var r=n.data[e];if(!1===r.visible)return"continue";(0,_.draw)(o,function(e){(0,_.setShadow)(e,h);var n=u.default.getColorIfActive(r),o=i.pixelToCanvas(t.element,r.handles.start),l=i.pixelToCanvas(t.element,r.handles.end);h.arrowFirst?(0,c.default)(e,l,o,n,f):(0,c.default)(e,o,l,n,f);var m={drawHandlesIfActive:h&&h.drawHandlesOnHover};h.drawHandles&&(0,d.default)(e,t,r.handles,n,m);var v=function(e){return e.text}(r);if(v&&""!==v){var b=(0,E.textBoxWidth)(e,v,5),y=s.default.getFontSize()+10,w=Math.max(b,y)/2+5;if(l.x<o.x&&(w=-w),!r.handles.textBox.hasMoved){var x=void 0;x=h.arrowFirst?{x:l.x-b/2+w,y:l.y-y/2}:{x:o.x-b/2-w,y:o.y-y/2};var T=i.internal.getTransform(a);T.invert();var P=T.transformPoint(x.x,x.y);r.handles.textBox.x=P.x,r.handles.textBox.y=P.y}(0,p.default)(e,t.element,r.handles.textBox,v,r.handles,g,n,f,0,!1)}})},v=0;v<n.data.length;v++)m(v);function g(e){var t={x:(e.start.x+e.end.x)/2,y:(e.start.y+e.end.y)/2};return[e.start,t,e.end]}}var M=(0,i.default)({addNewMeasurement:function(e){var t=e.element,n=O(e),i=r.default.cornerstone;function o(e){null===e?(0,b.removeToolState)(t,T,n):n.text=e,n.active=!1,i.updateImage(t),t.addEventListener(a.default.MOUSE_MOVE,M.mouseMoveCallback),t.addEventListener(a.default.MOUSE_DOWN,M.mouseDownCallback),t.addEventListener(a.default.MOUSE_DOWN_ACTIVATE,M.mouseDownActivateCallback),t.addEventListener(a.default.MOUSE_DOUBLE_CLICK,M.mouseDoubleClickCallback)}(0,b.addToolState)(t,T,n),t.removeEventListener(a.default.MOUSE_MOVE,M.mouseMoveCallback),t.removeEventListener(a.default.MOUSE_DOWN,M.mouseDownCallback),t.removeEventListener(a.default.MOUSE_DOWN_ACTIVATE,M.mouseDownActivateCallback),t.removeEventListener(a.default.MOUSE_DOUBLE_CLICK,M.mouseDoubleClickCallback),i.updateImage(t),(0,f.default)(e,T,n,n.handles.end,function(){(0,m.default)(e,n.handles)&&(0,b.removeToolState)(t,T,n);var a=M.getConfiguration();void 0===n.text&&a.getTextCallback(o),i.updateImage(t)})},createNewMeasurement:O,onImageRendered:I,pointNearTool:S,toolType:T,mouseDoubleClickCallback:function(e){var t=e.detail,n=t.element,a=r.default.cornerstone,i=(0,y.getToolOptions)(T,n),o=void 0;if((0,v.default)(t.which,i.mouseButtonMask)){var l=M.getConfiguration(),s=t.currentPoints.canvas,u=(0,b.getToolState)(n,T);if(u)for(var d=0;d<u.data.length;d++)if(o=u.data[d],S(n,o,s)||(0,g.default)(o.handles.textBox,s))return o.active=!0,a.updateImage(n),l.changeTextCallback(o,t,c),e.stopImmediatePropagation(),!1}function c(e,t,r){!0===r?(0,b.removeToolState)(n,T,e):e.text=t,e.active=!1,a.updateImage(n)}}});M.setConfiguration(P);var C=(0,o.default)({addNewMeasurement:function(e){var t=e.element,n=O(e),i=r.default.cornerstone;function o(e){null===e?(0,b.removeToolState)(t,T,n):n.text=e,n.active=!1,i.updateImage(t),t.addEventListener(a.default.TOUCH_PRESS,C.pressCallback),t.addEventListener(a.default.TOUCH_START_ACTIVE,C.touchDownActivateCallback),t.addEventListener(a.default.TAP,C.tapCallback)}(0,b.addToolState)(t,T,n),t.removeEventListener(a.default.TOUCH_PRESS,C.pressCallback),t.removeEventListener(a.default.TOUCH_START_ACTIVE,C.touchDownActivateCallback),t.removeEventListener(a.default.TAP,C.tapCallback),i.updateImage(t),(0,h.default)(e,T,n,n.handles.end,function(){i.updateImage(t),(0,m.default)(e,n.handles)&&(0,b.removeToolState)(t,T,n);var a=M.getConfiguration();void 0===n.text&&a.getTextCallback(o)})},createNewMeasurement:O,onImageRendered:I,pointNearTool:S,toolType:T,pressCallback:function(e){var t=e.detail,n=t.element,i=r.default.cornerstone,o=void 0;function l(e,t,r){console.log("pressCallback doneChangingTextCallback"),!0===r?(0,b.removeToolState)(n,T,e):e.text=t,e.active=!1,i.updateImage(n),n.addEventListener(a.default.TOUCH_START,C.touchStartCallback),n.addEventListener(a.default.TOUCH_START_ACTIVE,C.touchDownActivateCallback),n.addEventListener(a.default.TAP,C.tapCallback)}var s=M.getConfiguration(),u=t.currentPoints.canvas,d=(0,b.getToolState)(n,T);if(d){if(t.handlePressed)return n.removeEventListener(a.default.TOUCH_START,C.touchStartCallback),n.removeEventListener(a.default.TOUCH_START_ACTIVE,C.touchDownActivateCallback),n.removeEventListener(a.default.TAP,C.tapCallback),s.changeTextCallback(t.handlePressed,t,l),e.stopImmediatePropagation(),!1;for(var c=0;c<d.data.length;c++)if(o=d.data[c],S(n,o,u)||(0,g.default)(o.handles.textBox,u))return o.active=!0,i.updateImage(n),n.removeEventListener(a.default.TOUCH_START,C.touchStartCallback),n.removeEventListener(a.default.TOUCH_START_ACTIVE,C.touchDownActivateCallback),n.removeEventListener(a.default.TAP,C.tapCallback),s.changeTextCallback(o,t,l),e.stopImmediatePropagation(),!1;e.preventDefault(),e.stopPropagation()}}});t.arrowAnnotate=M,t.arrowAnnotateTouch=C},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.angleTouch=t.angle=void 0;var a=h(n(0)),r=h(n(10)),i=h(n(12)),o=h(n(11)),l=h(n(42)),s=h(n(7)),u=h(n(9)),d=n(2),c=h(n(27)),f=n(3);function h(e){return e&&e.__esModule?e:{default:e}}var m="angle";function v(e){return{visible:!0,active:!0,color:void 0,handles:{start:{x:e.currentPoints.image.x-20,y:e.currentPoints.image.y+10,highlight:!0,active:!1},end:{x:e.currentPoints.image.x,y:e.currentPoints.image.y,highlight:!0,active:!0},start2:{x:e.currentPoints.image.x-20,y:e.currentPoints.image.y+10,highlight:!0,active:!1},end2:{x:e.currentPoints.image.x,y:e.currentPoints.image.y+20,highlight:!0,active:!1}}}}function g(e,t,n){return!1!==t.visible&&((0,c.default)(e,t.handles.start,t.handles.end,n)<5||(0,c.default)(e,t.handles.start2,t.handles.end2,n)<5)}function p(e){var t=e.detail,n=(0,d.getToolState)(e.currentTarget,m);if(void 0!==n)for(var r=(0,f.getNewContext)(t.canvasContext.canvas),i=b.getConfiguration(),c=a.default.cornerstone,h=function(e){var a=n.data[e];if(!1===a.visible)return"continue";(0,f.draw)(r,function(e){(0,f.setShadow)(e,i);var n=s.default.getColorIfActive(a);(0,f.drawJoinedLines)(e,t.element,a.handles.end,[a.handles.start,a.handles.end2],{color:n}),(0,u.default)(e,t,a.handles);var r=(Math.ceil(a.handles.start.x)-Math.ceil(a.handles.end.x))*t.image.columnPixelSpacing,d=(Math.ceil(a.handles.start.y)-Math.ceil(a.handles.end.y))*t.image.rowPixelSpacing,h=(Math.ceil(a.handles.start2.x)-Math.ceil(a.handles.end2.x))*t.image.columnPixelSpacing,m=(Math.ceil(a.handles.start2.y)-Math.ceil(a.handles.end2.y))*t.image.rowPixelSpacing,v=Math.acos(Math.abs((r*h+d*m)/(Math.sqrt(r*r+d*d)*Math.sqrt(h*h+m*m))));v*=180/Math.PI;var g=(0,l.default)(v,2).toString()+String.fromCharCode(parseInt("00B0",16)),p=c.pixelToCanvas(t.element,a.handles.start2),b=c.pixelToCanvas(t.element,a.handles.end2),y=(p.x+b.x)/2,w=(p.y+b.y)/2;(0,o.default)(e,g,y,w,n)})},v=0;v<n.data.length;v++)h(v)}var b=(0,r.default)({createNewMeasurement:v,onImageRendered:p,pointNearTool:g,toolType:m}),y=(0,i.default)({createNewMeasurement:v,onImageRendered:p,pointNearTool:g,toolType:m});t.angle=b,t.angleTouch=y},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=u(n(1)),r=u(n(0)),i=u(n(39)),o=u(n(58)),l=u(n(6)),s=n(4);function u(e){return e&&e.__esModule?e:{default:e}}var d=void 0,c=void 0,f=void 0,h=void 0,m=void 0,v=void 0,g=void 0,p=void 0,b=1,y=0,w=!1,_=!1,E=void 0,x=700,T=5,P="touchInput";function O(e){var t=r.default.cornerstone,n=e.currentTarget||e.srcEvent.currentTarget,o=t.getEnabledElement(n);if(o.image){var s=void 0,u=void 0,P=void 0,O=void 0;switch(e.preventDefault(),(e.pointers&&e.pointers.length>1||e.touches&&e.touches.length>1)&&(_=!1,clearTimeout(g)),e.type){case"tap":_=!1,clearTimeout(g),(c={page:r.default.cornerstoneMath.point.pageToPoint(e.pointers[0]),image:t.pageToPixel(n,e.pointers[0].pageX,e.pointers[0].pageY),client:{x:e.pointers[0].clientX,y:e.pointers[0].clientY}}).canvas=t.pixelToCanvas(n,c.image),s=a.default.TAP,m={event:e,viewport:t.getViewport(n),image:o.image,element:n,currentPoints:c,type:s,isTouchEvent:!0},(0,l.default)(n,s,m);break;case"doubletap":_=!1,clearTimeout(g),(c={page:r.default.cornerstoneMath.point.pageToPoint(e.pointers[0]),image:t.pageToPixel(n,e.pointers[0].pageX,e.pointers[0].pageY),client:{x:e.pointers[0].clientX,y:e.pointers[0].clientY}}).canvas=t.pixelToCanvas(n,c.image),s=a.default.DOUBLE_TAP,m={event:e,viewport:t.getViewport(n),image:o.image,element:n,currentPoints:c,type:s,isTouchEvent:!0},(0,l.default)(n,s,m);break;case"pinchstart":_=!1,clearTimeout(g),b=1;break;case"pinchmove":if(_=!1,clearTimeout(g),!0===w){b=e.scale,w=!1;break}u=(e.scale-b)/b,(d={page:e.center,image:t.pageToPixel(n,e.center.x,e.center.y)}).canvas=t.pixelToCanvas(n,d.image),s=a.default.TOUCH_PINCH,m={event:e,startPoints:d,viewport:t.getViewport(n),image:o.image,element:n,direction:e.scale<1?1:-1,scaleChange:u,type:s,isTouchEvent:!0},(0,l.default)(n,s,m),b=e.scale;break;case"touchstart":b=1,clearTimeout(g),clearTimeout(v),v=setTimeout(function(){(d={page:r.default.cornerstoneMath.point.pageToPoint(e.touches[0]),image:t.pageToPixel(n,e.touches[0].pageX,e.touches[0].pageY),client:{x:e.touches[0].clientX,y:e.touches[0].clientY}}).canvas=t.pixelToCanvas(n,d.image),s=a.default.TOUCH_START,e.touches.length>1&&(s=a.default.MULTI_TOUCH_START),m={event:e,viewport:t.getViewport(n),image:o.image,element:n,startPoints:d,currentPoints:d,type:s,isTouchEvent:!0},!0===(0,l.default)(n,s,m)&&(s=a.default.TOUCH_START_ACTIVE,e.touches.length>1&&(s=a.default.MULTI_TOUCH_START_ACTIVE),m.type=s,(0,l.default)(n,s,m)),f=(0,i.default)(d)},50),_=!0,p=0,g=setTimeout(function(){_&&((c={page:r.default.cornerstoneMath.point.pageToPoint(e.touches[0]),image:t.pageToPixel(n,e.touches[0].pageX,e.touches[0].pageY),client:{x:e.touches[0].clientX,y:e.touches[0].clientY}}).canvas=t.pixelToCanvas(n,d.image),s=a.default.TOUCH_PRESS,m={event:e,viewport:t.getViewport(n),image:o.image,element:n,currentPoints:c,type:s,isTouchEvent:!0},(0,l.default)(n,s,m))},x);break;case"touchend":b=1,_=!1,clearTimeout(g),setTimeout(function(){(d={page:r.default.cornerstoneMath.point.pageToPoint(e.changedTouches[0]),image:t.pageToPixel(n,e.changedTouches[0].pageX,e.changedTouches[0].pageY),client:{x:e.changedTouches[0].clientX,y:e.changedTouches[0].clientY}}).canvas=t.pixelToCanvas(n,d.image),s=a.default.TOUCH_END,m={event:e,viewport:t.getViewport(n),image:o.image,element:n,startPoints:d,currentPoints:d,type:s,isTouchEvent:!0},(0,l.default)(n,s,m)},50);break;case"panmove":P={x:e.deltaX-E.x,y:e.deltaY-E.y},E={x:e.deltaX,y:e.deltaY},(c={page:{x:f.page.x+P.x,y:f.page.y+P.y},image:t.pageToPixel(n,f.page.x+P.x,f.page.y+P.y),client:{x:f.client.x+P.x,y:f.client.y+P.y}}).canvas=t.pixelToCanvas(n,c.image),h={page:r.default.cornerstoneMath.point.subtract(c.page,f.page),image:r.default.cornerstoneMath.point.subtract(c.image,f.image),client:r.default.cornerstoneMath.point.subtract(c.client,f.client),canvas:r.default.cornerstoneMath.point.subtract(c.canvas,f.canvas)},(p+=Math.sqrt(h.page.x*h.page.x+h.page.y*h.page.y))>T&&(_=!1,clearTimeout(g)),s=a.default.TOUCH_DRAG,e.pointers.length>1&&(s=a.default.MULTI_TOUCH_DRAG),m={viewport:t.getViewport(n),image:o.image,element:n,startPoints:d,lastPoints:f,currentPoints:c,deltaPoints:h,numPointers:e.pointers.length,type:s,isTouchEvent:!0},(0,l.default)(n,s,m),f=(0,i.default)(c);break;case"panstart":E={x:e.deltaX,y:e.deltaY},(c={page:r.default.cornerstoneMath.point.pageToPoint(e.pointers[0]),image:t.pageToPixel(n,e.pointers[0].pageX,e.pointers[0].pageY),client:{x:e.pointers[0].clientX,y:e.pointers[0].clientY}}).canvas=t.pixelToCanvas(n,c.image),f=(0,i.default)(c);break;case"panend":if(_=!1,clearTimeout(g),!f)return!1;(c={page:r.default.cornerstoneMath.point.pageToPoint(e.pointers[0]),image:t.pageToPixel(n,e.pointers[0].pageX,e.pointers[0].pageY),client:{x:e.pointers[0].clientX,y:e.pointers[0].clientY}}).canvas=t.pixelToCanvas(n,c.image),h={page:r.default.cornerstoneMath.point.subtract(c.page,f.page),image:r.default.cornerstoneMath.point.subtract(c.image,f.image),client:r.default.cornerstoneMath.point.subtract(c.client,f.client),canvas:r.default.cornerstoneMath.point.subtract(c.canvas,f.canvas)},s=a.default.TOUCH_DRAG_END,m={event:e.srcEvent,viewport:t.getViewport(n),image:o.image,element:n,startPoints:d,lastPoints:f,currentPoints:c,deltaPoints:h,type:s,isTouchEvent:!0},(0,l.default)(n,s,m),2==e.pointers.length-e.changedPointers.length&&(w=!0);break;case"rotatemove":_=!1,clearTimeout(g),O=e.rotation-y,y=e.rotation,s=a.default.TOUCH_ROTATE,m={event:e.srcEvent,viewport:t.getViewport(n),image:o.image,element:n,rotation:O,type:s},(0,l.default)(n,s,m)}return!1}}function S(e){o.default.disable(e),["touchstart","touchend"].forEach(function(t){e.removeEventListener(t,O)});var t=(0,s.getToolOptions)(P,e).hammer;t&&t.off("tap doubletap panstart panmove panend pinchstart pinchmove rotatemove",O)}var I={enable:function(e){S(e);var t=r.default.Hammer,n={inputClass:t.SUPPORT_POINTER_EVENTS?t.PointerEventInput:t.TouchInput},a=new t.Manager(e,n),i={pointers:0,direction:t.DIRECTION_ALL,threshold:0},l=new t.Pan(i),u=new t.Pinch({threshold:0}),d=new t.Rotate({threshold:0});u.recognizeWith(l),u.recognizeWith(d),d.recognizeWith(l);var c=new t.Tap({event:"doubletap",taps:2,interval:1500,threshold:50,posThreshold:50});c.recognizeWith(l),a.add([c,l,d,u]),a.on("tap doubletap panstart panmove panend pinchstart pinchmove rotatemove",O),o.default.enable(e),["touchstart","touchend"].forEach(function(t){e.addEventListener(t,O)});var f=(0,s.getToolOptions)(P,e);f.hammer=a,(0,s.setToolOptions)(P,e,f)},disable:S};t.default=I},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=o(n(1)),r=o(n(0)),i=o(n(6));function o(e){return e&&e.__esModule?e:{default:e}}function l(e){var t=r.default.cornerstone,n=e.currentTarget,o=t.getEnabledElement(n);if(o.image&&!("mousewheel"===e.type&&0===e.wheelDeltaY||"DOMMouseScroll"===e.type&&1===e.axis)){e.preventDefault();var l=void 0,s=void 0;void 0!==e.pageX&&void 0!==e.pageY?(l=e.pageX,s=e.pageY):(l=e.x,s=e.y);var u=t.pageToPixel(n,l,s),d=((e=window.event&&window.event.wheelDelta?window.event:e).wheelDelta?e.wheelDelta:e.deltaY?-e.deltaY:e.detail?-e.detail:e.wheelDelta)<0?-1:1,c={element:n,viewport:t.getViewport(n),image:o.image,direction:d,pageX:l,pageY:s,imageX:u.x,imageY:u.y};(0,i.default)(n,a.default.MOUSE_WHEEL,c)}}var s=["mousewheel","DOMMouseScroll"];function u(e){s.forEach(function(t){e.removeEventListener(t,l)})}var d={enable:function(e){u(e),s.forEach(function(t){e.addEventListener(t,l)})},disable:u};t.default=d},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=l(n(1)),r=l(n(0)),i=l(n(39)),o=l(n(6));function l(e){return e&&e.__esModule?e:{default:e}}var s=!0,u=void 0,d=200;function c(e){return"number"!=typeof e.buttons?e.which:0===e.buttons?0:e.buttons%2==1?1:e.buttons%4==2?3:e.buttons%8==4?2:0}function f(){s=!1}function h(e){var t=r.default.cornerstone,n=e.currentTarget,l=t.getEnabledElement(n);if(l.image){var s=a.default.MOUSE_DOUBLE_CLICK,u={page:r.default.cornerstoneMath.point.pageToPoint(e),image:t.pageToPixel(n,e.pageX,e.pageY),client:{x:e.clientX,y:e.clientY}};u.canvas=t.pixelToCanvas(n,u.image);var d=(0,i.default)(u),c={event:e,which:e.which,viewport:t.getViewport(n),image:l.image,element:n,startPoints:u,lastPoints:d,currentPoints:u,deltaPoints:{x:0,y:0},type:s};(0,o.default)(n,s,c)}}function m(e){var t=r.default.cornerstone,n=e.currentTarget,l=t.getEnabledElement(n);if(l.image){u=setTimeout(f,d);var h=a.default.MOUSE_DOWN;n.removeEventListener("mousemove",v);var m={page:r.default.cornerstoneMath.point.pageToPoint(e),image:t.pageToPixel(n,e.pageX,e.pageY),client:{x:e.clientX,y:e.clientY}};m.canvas=t.pixelToCanvas(n,m.image);var g=(0,i.default)(m),p={event:e,which:c(e),viewport:t.getViewport(n),image:l.image,element:n,startPoints:m,lastPoints:g,currentPoints:m,deltaPoints:{x:0,y:0},type:h};(0,o.default)(p.element,h,p)&&(p.type=a.default.MOUSE_DOWN_ACTIVATE,(0,o.default)(p.element,a.default.MOUSE_DOWN_ACTIVATE,p));var b=c(e);document.addEventListener("mousemove",y),document.addEventListener("mouseup",function e(i){clearTimeout(u);var d=a.default.MOUSE_UP;s&&(d=a.default.MOUSE_CLICK);var c={page:r.default.cornerstoneMath.point.pageToPoint(i),image:t.pageToPixel(n,i.pageX,i.pageY),client:{x:i.clientX,y:i.clientY}};c.canvas=t.pixelToCanvas(n,c.image);var f={page:r.default.cornerstoneMath.point.subtract(c.page,g.page),image:r.default.cornerstoneMath.point.subtract(c.image,g.image),client:r.default.cornerstoneMath.point.subtract(c.client,g.client),canvas:r.default.cornerstoneMath.point.subtract(c.canvas,g.canvas)},h={event:i,which:b,viewport:t.getViewport(n),image:l.image,element:n,startPoints:m,lastPoints:g,currentPoints:c,deltaPoints:f,type:d};(0,o.default)(h.element,d,h),document.removeEventListener("mousemove",y),document.removeEventListener("mouseup",e),n.addEventListener("mousemove",v),s=!0})}function y(e){var s=a.default.MOUSE_DRAG,u={page:r.default.cornerstoneMath.point.pageToPoint(e),image:t.pageToPixel(n,e.pageX,e.pageY),client:{x:e.clientX,y:e.clientY}};u.canvas=t.pixelToCanvas(n,u.image);var d={page:r.default.cornerstoneMath.point.subtract(u.page,g.page),image:r.default.cornerstoneMath.point.subtract(u.image,g.image),client:r.default.cornerstoneMath.point.subtract(u.client,g.client),canvas:r.default.cornerstoneMath.point.subtract(u.canvas,g.canvas)},c={which:b,viewport:t.getViewport(n),image:l.image,element:n,startPoints:m,lastPoints:g,currentPoints:u,deltaPoints:d,type:s,ctrlKey:e.ctrlKey,metaKey:e.metaKey,shiftKey:e.shiftKey};(0,o.default)(c.element,s,c),g=(0,i.default)(u)}}function v(e){var t=r.default.cornerstone,n=e.currentTarget,l=t.getEnabledElement(n);if(l.image){var s=a.default.MOUSE_MOVE,u={page:r.default.cornerstoneMath.point.pageToPoint(e),image:t.pageToPixel(n,e.pageX,e.pageY),client:{x:e.clientX,y:e.clientY}};u.canvas=t.pixelToCanvas(n,u.image);var d=(0,i.default)(u),c={page:r.default.cornerstoneMath.point.pageToPoint(e),image:t.pageToPixel(n,e.pageX,e.pageY),client:{x:e.clientX,y:e.clientY}};c.canvas=t.pixelToCanvas(n,c.image);var f={page:r.default.cornerstoneMath.point.subtract(c.page,d.page),image:r.default.cornerstoneMath.point.subtract(c.image,d.image),client:r.default.cornerstoneMath.point.subtract(c.client,d.client),canvas:r.default.cornerstoneMath.point.subtract(c.canvas,d.canvas)},h={viewport:t.getViewport(n),image:l.image,element:n,startPoints:u,lastPoints:d,currentPoints:c,deltaPoints:f,type:s};(0,o.default)(n,s,h),d=(0,i.default)(c)}}function g(e){e.removeEventListener("mousedown",m),e.removeEventListener("mousemove",v),e.removeEventListener("dblclick",h)}var p={enable:function(e){g(e),e.addEventListener("mousedown",m),e.addEventListener("mousemove",v),e.addEventListener("dblclick",h)},disable:g};t.default=p},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=o(n(1)),r=o(n(0)),i=o(n(6));function o(e){return e&&e.__esModule?e:{default:e}}var l=void 0,s=void 0;function u(e){var t=r.default.cornerstone,n=e.currentTarget,o=t.getEnabledElement(n);if(o.image){var u={event:window.event||e,element:n,viewport:t.getViewport(n),image:o.image,currentPoints:{page:{x:l,y:s},image:t.pageToPixel(n,l,s)},keyCode:e.keyCode,which:e.which};u.currentPoints.canvas=t.pixelToCanvas(n,u.currentPoints.image);var d={keydown:a.default.KEY_DOWN,keypress:a.default.KEY_PRESS,keyup:a.default.KEY_UP};(0,i.default)(n,d[e.type],u)}}function d(e){l=e.pageX,s=e.pageY}var c=["keydown","keypress","keyup"],f={enable:function(e){c.forEach(function(t){e.removeEventListener(t,u),e.addEventListener(t,u)}),e.removeEventListener("mousemove",d),e.addEventListener("mousemove",d)},disable:function(e){c.forEach(function(t){e.removeEventListener(t,u)}),e.removeEventListener("mousemove",d)}};t.default=f},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.stopClip=t.playClip=void 0;var a=s(n(1)),r=s(n(0)),i=s(n(13)),o=n(2),l=s(n(6));function s(e){return e&&e.__esModule?e:{default:e}}var u="playClip";function d(e){var t=e.intervalId;void 0!==t&&(e.intervalId=void 0,e.usingFrameTimeVector?clearTimeout(t):clearInterval(t))}t.playClip=function(e,t){var n=void 0,s=void 0;if(void 0===e)throw new Error("playClip: element must not be undefined");var c=(0,o.getToolState)(e,"stack");if(c&&c.data&&c.data.length){var f=r.default.cornerstone,h=void 0;if(c.data.length>1){var m=(0,o.getToolState)(e,"stackRenderer");m&&m.data&&m.data.length&&(h=m.data[0])}var v=c.data[0],g=(0,o.getToolState)(e,u);g&&g.data&&g.data.length?d(n=g.data[0]):(n={intervalId:void 0,framesPerSecond:30,lastFrameTimeStamp:void 0,frameRate:0,frameTimeVector:void 0,ignoreFrameTimeVector:!1,usingFrameTimeVector:!1,speed:1,reverse:!1,loop:!0},(0,o.addToolState)(e,u,n)),(t<0||t>0)&&(n.framesPerSecond=Number(t),n.reverse=n.framesPerSecond<0,n.ignoreFrameTimeVector=!0),!0!==n.ignoreFrameTimeVector&&n.frameTimeVector&&n.frameTimeVector.length===v.imageIds.length&&(s=function(e,t){var n=void 0,a=void 0,r=void 0,i=0,o=e.length,l=[];for(l.isTimeVarying=!1,("number"!=typeof t||t<=0)&&(t=1),n=1;n<o;n++)r=Number(e[n])/t|0,l.push(r),1===n?a=r:r!==a&&(l.isTimeVarying=!0),i+=r;return l.length>0&&(r=l.isTimeVarying?i/l.length|0:l[0],l.push(r)),l}(n.frameTimeVector,n.speed));var p=function(){var t=void 0,r=void 0,o=void 0,s=v.currentImageIdIndex,u=v.imageIds.length;if(n.reverse?s--:s++,!n.loop&&(s<0||s>=u))return d(n),void function(e){var t={element:e};(0,l.default)(e,a.default.CLIP_STOPPED,t)}(e);s>=u&&(s=0),s<0&&(s=u-1),s!==v.currentImageIdIndex&&(t=i.default.getStartLoadHandler(),r=i.default.getEndLoadHandler(),o=i.default.getErrorLoadingHandler(),t&&t(e),(!0===v.preventCache?f.loadImage(v.imageIds[s]):f.loadAndCacheImage(v.imageIds[s])).then(function(t){try{v.currentImageIdIndex=s,h?(h.currentImageIdIndex=s,h.render(e,c.data)):f.displayImage(e,t),r&&r(e,t)}catch(e){return}},function(t){var n=v.imageIds[s];o&&o(e,n,t)}))};s&&s.length>0&&s.isTimeVarying?(n.usingFrameTimeVector=!0,n.intervalId=setTimeout(function e(){n.intervalId=setTimeout(e,s[v.currentImageIdIndex]),p()},0)):(n.usingFrameTimeVector=!1,n.intervalId=setInterval(p,1e3/Math.abs(n.framesPerSecond)))}},t.stopClip=function(e){var t=(0,o.getToolState)(e,u);t&&t.data&&t.data.length&&d(t.data[0])}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),i=n(0),o=(a=i)&&a.__esModule?a:{default:a},l=n(2),s=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.currentImageIdIndex=0,this.layerIds=[],this.findImageFn=void 0}return r(e,[{key:"render",value:function(e,t){var n=this;if(!Number.isInteger(this.currentImageIdIndex))throw new Error("FusionRenderer: render - Image ID Index is not an integer");if(!this.findImageFn)throw new Error("No findImage function has been defined");t||(t=(0,l.getToolState)(e,"stack").data);var a=o.default.cornerstone,r=t[0],i=r.imageIds[this.currentImageIdIndex],s=t.slice(1,t.length);a.loadAndCacheImage(i).then(function(t){var o=n.layerIds[0];o?a.setLayerImage(e,t,o):(o=a.addLayer(e,t,r.options),n.layerIds.push(o)),a.displayImage(e,t),s.forEach(function(t,r){var l=n.findImageFn(t.imageIds,i),s=r+1,u=n.layerIds[s];u||(u=a.addLayer(e,void 0,t.options),n.layerIds.push(u)),l?a.loadAndCacheImage(l).then(function(t){a.setLayerImage(e,t,u),a.updateImage(e)}):(a.setLayerImage(e,void 0,u),a.setActiveLayer(e,o),a.updateImage(e))})})}}]),e}();t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=n(112),i=(a=r)&&a.__esModule?a:{default:a},o={};o.FusionRenderer=i.default,t.default=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=n(24),i=(a=r)&&a.__esModule?a:{default:a},o=n(2),l=n(3),s=(0,i.default)(function(e){var t=e.detail,n=t.element,a=t.enabledElement.canvas.width,r=t.enabledElement.canvas.height;if(!a||!r)return!1;var i=(0,l.getNewContext)(t.enabledElement.canvas);(0,l.draw)(i,function(e){var t=s.getConfiguration(),i=void 0;i="horizontal"===t.orientation?{left:0,top:r-6,width:a,height:6}:{left:0,top:0,width:6,height:r},(0,l.fillBox)(e,i,t.backgroundColor);var u=(0,o.getToolState)(n,"stack");if(u&&u.data&&u.data.length){var d=u.data[0].imageIds,c=u.data[0].currentImageIdIndex,f=a/d.length,h=r/d.length,m=f*c,v=h*c;i="horizontal"===t.orientation?{left:m,top:r-6,width:f,height:6}:{left:0,top:v,width:6,height:h},(0,l.fillBox)(e,i,t.fillColor)}})});s.setConfiguration({backgroundColor:"rgb(19, 63, 141)",fillColor:"white",orientation:"horizontal"}),t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=u(n(1)),r=u(n(0)),i=u(n(44)),o=u(n(13)),l=n(2),s=n(33);function u(e){return e&&e.__esModule?e:{default:e}}var d="stackPrefetch",c="prefetch",f={maxImagesToPrefetch:1/0},h=void 0,m=10,v=function(e){return Math.max.apply(null,e)},g=function(e){return Math.min.apply(null,e)};function p(e){var t=(0,l.getToolState)(e,"stack");if(t&&t.data&&t.data.length){var n=t.data[0],a=(0,l.getToolState)(e,d);if(a){var s=a.data[0]||{};if(s.indicesToRequest&&s.indicesToRequest.length||(s.enabled=!1),!1!==s.enabled&&(a.data[0].indicesToRequest.sort(function(e,t){return e-t}),s.indicesToRequest.slice().forEach(function(e){var t=n.imageIds[e];t&&r.default.cornerstone.imageCache.getImageLoadObject(t)&&M(e)}),s.indicesToRequest.length)){i.default.clearRequestStack(c);for(var u,h,m,p,b=(u=s.indicesToRequest,h=n.currentImageIdIndex,m=[],p=[],u.forEach(function(e){e<h?m.push(e):e>h&&p.push(e)}),{low:u.indexOf(v(m)),high:u.indexOf(g(p))}),y=void 0,w=void 0,_=o.default.getErrorLoadingHandler(),E=b.low,x=b.high;E>=0||x<s.indicesToRequest.length;){var T=n.currentImageIdIndex,P=T-s.indicesToRequest[E]>f.maxImagesToPrefetch,O=s.indicesToRequest[x]-T>f.maxImagesToPrefetch,S=!P&&E>=0,I=!O&&x<s.indicesToRequest.length;if(!I&&!S)break;S&&(w=s.indicesToRequest[E--],y=n.imageIds[w],i.default.addRequest(e,y,c,!1,C,L)),I&&(w=s.indicesToRequest[x++],y=n.imageIds[w],i.default.addRequest(e,y,c,!1,C,L))}i.default.startGrabbing()}}}function M(e){var t=s.indicesToRequest.indexOf(e);t>-1&&s.indicesToRequest.splice(t,1)}function C(e){M(n.imageIds.indexOf(e.imageId))}function L(t){console.log("prefetch errored: "+t),_&&_(e,y,t,"stackPrefetch")}}function b(e){return function(t){var n=t.detail,a=void 0;try{a=(0,l.getToolState)(e,"stack")}catch(e){return}if(a&&a.data&&a.data.length){var r=a.data[0].imageIds.indexOf(n.imageId);if(!(r<0)){var i=(0,l.getToolState)(e,d);i&&i.data&&i.data.length&&i.data[0].indicesToRequest.push(r)}}}}function y(e){clearTimeout(h),h=setTimeout(function(){var t=e.target;try{p(t)}catch(e){return}},m)}var w={enable:function(e){(0,l.getToolState)(e,d).data=[];var t=(0,l.getToolState)(e,"stack");if(t&&t.data&&t.data.length){var n=t.data[0];if(!0!==n.preventCache){var i={indicesToRequest:function(e,t){e=Math.round(e)||0;var n=[],a=(t=Math.round(t)||0)-e+1;if(a<=0)return n;for(;a--;)n[a]=t--;return n}(0,n.imageIds.length-1),enabled:!0,direction:1},o=i.indicesToRequest.indexOf(n.currentImageIdIndex);i.indicesToRequest.splice(o,1),(0,l.addToolState)(e,d,i),p(e),e.removeEventListener(a.default.NEW_IMAGE,y),e.addEventListener(a.default.NEW_IMAGE,y);var s=b(e);r.default.cornerstone.events.removeEventListener(a.default.IMAGE_CACHE_PROMISE_REMOVED,s),r.default.cornerstone.events.addEventListener(a.default.IMAGE_CACHE_PROMISE_REMOVED,s)}else console.warn("A stack that should not be cached was given the stackPrefetch")}},disable:function(e){clearTimeout(h),e.removeEventListener(a.default.NEW_IMAGE,y);var t=b(e);r.default.cornerstone.events.removeEventListener(a.default.IMAGE_CACHE_PROMISE_REMOVED,t);var n=(0,l.getToolState)(e,d);n&&n.data.length&&(n.data[0].enabled=!1,i.default.clearRequestStack(c))},getConfiguration:function(){return f},setConfiguration:function(e){f=e,e.maxSimultaneousRequests&&(0,s.setMaxSimultaneousRequests)(e.maxSimultaneousRequests)}};t.default=w},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.stackScrollMultiTouch=t.stackScrollTouchDrag=t.stackScrollWheel=t.stackScroll=void 0;var a=f(n(1)),r=f(n(18)),i=f(n(35)),o=f(n(14)),l=f(n(29)),s=f(n(5)),u=f(n(43)),d=n(2),c=n(4);function f(e){return e&&e.__esModule?e:{default:e}}var h="stackScroll";function m(e){var t=e.detail.element;t.removeEventListener(a.default.MOUSE_DRAG,v),t.removeEventListener(a.default.MOUSE_UP,m),t.removeEventListener(a.default.MOUSE_CLICK,m)}function v(e){var t=e.detail,n=t.element,a=(0,d.getToolState)(n,"stack");if(a&&a.data&&a.data.length){var r=a.data[0],i=g.getConfiguration(),o=!0;i&&void 0!==i.allowSkipping&&(o=i.allowSkipping);var l=Math.max(2,n.offsetHeight/Math.max(r.imageIds.length,8));i&&i.stackScrollSpeed&&(l=i.stackScrollSpeed);var s=(0,c.getToolOptions)(h,n),f=s.deltaY||0;if(f+=t.deltaPoints.page.y,Math.abs(f)>=l){var m=Math.round(f/l);(0,u.default)(n,m,!1,o),s.deltaY=f%l}else s.deltaY=f;(0,c.setToolOptions)(h,n,s),e.preventDefault(),e.stopPropagation()}}var g=(0,o.default)(function(e){var t=e.detail,n=t.element,r=(0,c.getToolOptions)(h,n);if((0,s.default)(t.which,r.mouseButtonMask))return r.deltaY=0,(0,c.setToolOptions)(h,n,r),n.addEventListener(a.default.MOUSE_DRAG,v),n.addEventListener(a.default.MOUSE_UP,m),n.addEventListener(a.default.MOUSE_CLICK,m),e.stopImmediatePropagation(),!1},h),p=(0,l.default)(function(e){var t=e.detail,n=-t.direction,a=g.getConfiguration(),r=!1,i=!0;a&&(r=void 0!==a.loop&&a.loop,i=void 0===a.allowSkipping||a.allowSkipping),(0,u.default)(t.element,n,r,i)}),b={eventData:{deltaY:0}},y=(0,r.default)(v,"stackScrollTouchDrag",b),w=(0,i.default)(function(e){var t=e.detail,n=w.getConfiguration();n&&n.testPointers(t)&&v(e)},b);w.setConfiguration({testPointers:function(e){return e.numPointers>=3}}),t.stackScroll=g,t.stackScrollWheel=p,t.stackScrollTouchDrag=y,t.stackScrollMultiTouch=w},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=r(n(43));function r(e){return e&&e.__esModule?e:{default:e}}var i={UP:38,DOWN:40},o=(0,r(n(61)).default)(function(e){var t=e.detail,n=t.keyCode;if(n===i.UP||n===i.DOWN){var r=1;n===i.DOWN&&(r=-1),(0,a.default)(t.element,r)}});t.default=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=n(0),i=(a=r)&&a.__esModule?a:{default:a},o=n(26),l=n(2),s={save:function(e){var t={imageIdToolState:o.globalImageIdSpecificToolStateManager.saveToolState(),elementToolState:{},elementViewport:{}};return e.forEach(function(e){var n=(0,l.getElementToolStateManager)(e);n!==o.globalImageIdSpecificToolStateManager&&(t.elementToolState[e.id]=n.saveToolState(),t.elementViewport[e.id]=i.default.cornerstone.getViewport(e))}),t},restore:function(e){if(e.hasOwnProperty("imageIdToolState")&&e.hasOwnProperty("elementToolState")&&e.hasOwnProperty("elementViewport")){var t=i.default.cornerstone;return o.globalImageIdSpecificToolStateManager.restoreToolState(e.imageIdToolState),Object.keys(e.elementViewport).forEach(function(n){var a=document.getElementById(n);if(a&&e.elementToolState.hasOwnProperty(n)){var r=(0,l.getElementToolStateManager)(a);if(r!==o.globalImageIdSpecificToolStateManager){r.restoreToolState(e.elementToolState[n]);var i=e.elementViewport[n];t.setViewport(a,i),t.updateImage(a)}}}),e}}};t.default=s},function(e,t,n){"use strict";function a(){var e={};return{get:function(t,n){if(!1!==e.hasOwnProperty(t)){var a=e[t];if(!1!==a.hasOwnProperty(n))return a[n]}},add:function(t,n,a){!1===e.hasOwnProperty(t)&&(e[t]={});var r=e[t];!1===r.hasOwnProperty(n)&&(r[n]={data:[]}),r[n].data.push(a)},remove:function(t,n,a){if(!1!==e.hasOwnProperty(t)){var r=e[t];if(!1!==r.hasOwnProperty(n)){for(var i=r[n],o=-1,l=0;l<i.data.length;l++)i.data[l]===a&&(o=l);-1!==o&&i.data.splice(o,1)}}}}}Object.defineProperty(t,"__esModule",{value:!0});var r=a();t.newFrameOfReferenceSpecificToolStateManager=a,t.globalFrameOfReferenceSpecificToolStateManager=r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.addStackStateManager=t.newStackSpecificToolStateManager=t.stackSpecificStateManager=void 0;var a=n(26),r=n(2);function i(e,t){var n={};return{get:function(a,r){return e.indexOf(r)>=0?(!1===n.hasOwnProperty(r)&&(n[r]={data:[]}),n[r]):t.get(a,r)},add:function(a,r,i){if(!(e.indexOf(r)>=0))return t.add(a,r,i);!1===n.hasOwnProperty(r)&&(n[r]={data:[]}),n[r].data.push(i)},saveToolState:function(){return n},restoreToolState:function(e){n=e},toolState:n}}var o=[];function l(e,t){var n=(0,r.getElementToolStateManager)(e);n||(n=a.globalImageIdSpecificToolStateManager);var l=["stack","stackPrefetch","playClip","volume","slab","referenceLines","crosshairs","stackRenderer"];t&&(l=l.concat(t));var s=i(l,n);o.push(s),(0,r.setElementToolStateManager)(e,s)}var s={newStackSpecificToolStateManager:i,addStackStateManager:l};t.stackSpecificStateManager=s,t.newStackSpecificToolStateManager=i,t.addStackStateManager=l},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.newTimeSeriesSpecificToolStateManager=t.addTimeSeriesStateManager=void 0;var a=n(26),r=n(2);function i(e,t){var n={};return{get:function(a,r){return e.indexOf(r)>=0?(!1===n.hasOwnProperty(r)&&(n[r]={data:[]}),n[r]):t.get(a,r)},add:function(a,r,i){if(!(e.indexOf(r)>=0))return t.add(a,r,i);!1===n.hasOwnProperty(r)&&(n[r]={data:[]}),n[r].data.push(i)}}}var o=[];t.addTimeSeriesStateManager=function(e,t){t=t||["timeSeries"];var n=(0,r.getElementToolStateManager)(e);void 0===n&&(n=a.globalImageIdSpecificToolStateManager);var l=i(t,n);o.push(l),(0,r.setElementToolStateManager)(e,l)},t.newTimeSeriesSpecificToolStateManager=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){if(n!==t){var a=i.default.cornerstone,r=a.getViewport(t),o=a.getViewport(n);o.scale===r.scale&&o.translation.x===r.translation.x&&o.translation.y===r.translation.y||(o.scale=r.scale,o.translation.x=r.translation.x,o.translation.y=r.translation.y,e.setViewport(n,o))}};var a,r=n(0),i=(a=r)&&a.__esModule?a:{default:a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){if(n!==t){var l=a.default.cornerstone,s=(0,r.getToolState)(t,"stack").data[0],u=(0,r.getToolState)(n,"stack").data[0],d=s.currentImageIdIndex;if((d=(0,o.default)(d,0,u.imageIds.length-1))!==u.currentImageIdIndex){var c=i.default.getStartLoadHandler(),f=i.default.getEndLoadHandler(),h=i.default.getErrorLoadingHandler();c&&c(n),(!0===u.preventCache?l.loadImage(u.imageIds[d]):l.loadAndCacheImage(u.imageIds[d])).then(function(t){var a=l.getViewport(n);u.currentImageIdIndex=d,e.displayImage(n,t,a),f&&f(n,t)},function(e){var t=u.imageIds[d];h&&h(n,t,e)})}}};var a=l(n(0)),r=n(2),i=l(n(13)),o=l(n(8));function l(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,l,s){if(n!==t){var u=a.default.cornerstone,d=u.getEnabledElement(t),c=u.metaData.get("imagePlaneModule",d.image.imageId);if(void 0!==c&&void 0!==c.imagePositionPatient){var f=(0,o.default)(c.imagePositionPatient),h=(0,r.getToolState)(n,"stack").data[0],m=Number.MAX_VALUE,v=-1;if(s){var g=f.clone().add(s);if(h.imageIds.forEach(function(e,t){var n=u.metaData.get("imagePlaneModule",e);if(void 0!==n&&void 0!==n.imagePositionPatient){var a=(0,o.default)(n.imagePositionPatient),r=g.distanceToSquared(a);r<m&&(m=r,v=t)}}),v!==h.currentImageIdIndex&&-1!==v){var p=i.default.getStartLoadHandler(),b=i.default.getEndLoadHandler(),y=i.default.getErrorLoadingHandler();h.currentImageIdIndex=v;var w=h.imageIds[v];p&&p(n),(!0===h.preventCache?u.loadImage(w):u.loadAndCacheImage(w)).then(function(t){var a=u.getViewport(n);h.currentImageIdIndex===v&&(e.displayImage(n,t,a),b&&b(n,t))},function(e){var t=h.imageIds[v];y&&y(n,t,e)})}}}}};var a=l(n(0)),r=n(2),i=l(n(13)),o=l(n(19));function l(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){if(n!==t){var l=a.default.cornerstone,s=l.getEnabledElement(t).image,u=l.metaData.get("imagePlaneModule",s.imageId);if(void 0!==u&&void 0!==u.imagePositionPatient){var d=(0,o.default)(u.imagePositionPatient),c=(0,r.getToolState)(n,"stack").data[0],f=Number.MAX_VALUE,h=-1;if(c.imageIds.forEach(function(e,t){var n=l.metaData.get("imagePlaneModule",e);if(void 0!==n&&void 0!==n.imagePositionPatient){var a=(0,o.default)(n.imagePositionPatient).distanceToSquared(d);a<f&&(f=a,h=t)}}),h!==c.currentImageIdIndex){var m=i.default.getStartLoadHandler(),v=i.default.getEndLoadHandler(),g=i.default.getErrorLoadingHandler();c.currentImageIdIndex=h;var p=c.imageIds[h];m&&m(n),-1!==h&&(!0===c.preventCache?l.loadImage(p):l.loadAndCacheImage(p)).then(function(t){var a=l.getViewport(n);c.currentImageIdIndex===h&&(e.displayImage(n,t,a),v&&v(n,t))},function(e){var t=c.imageIds[h];g&&g(n,t,e)})}}}};var a=l(n(0)),r=n(2),i=l(n(13)),o=l(n(19));function l(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,l){if(t!==n&&l&&l.direction){var s=a.default.cornerstone,u=(0,r.getToolState)(n,"stack").data[0],d=u.currentImageIdIndex+l.direction;if(d=(0,o.default)(d,0,u.imageIds.length-1),u.currentImageIdIndex!==d){var c=i.default.getStartLoadHandler(),f=i.default.getEndLoadHandler(),h=i.default.getErrorLoadingHandler();u.currentImageIdIndex=d;var m=u.imageIds[d];c&&c(n),(!0===u.preventCache?s.loadImage(m):s.loadAndCacheImage(m)).then(function(t){var a=s.getViewport(n);u.currentImageIdIndex===d&&(e.displayImage(n,t,a),f&&f(n,t))},function(e){var t=u.imageIds[d];h&&h(n,t,e)})}}};var a=l(n(0)),r=n(2),i=l(n(13)),o=l(n(8));function l(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=l(n(1)),r=l(n(0)),i=l(n(19)),o=n(4);function l(e){return e&&e.__esModule?e:{default:e}}function s(e){return e.filter(function(e,t,n){return n.indexOf(e)===t})}t.default=function(e,t){var n=r.default.cornerstone,l=this,u=[],d=[],c=!1,f={},h=t;function m(e,t){l.enabled&&u.length&&d.length&&(c=!0,d.forEach(function(n){var a=d.indexOf(n);if(-1!==a){var r=f.imageIds.targetElements[a],i=u.indexOf(e);if(-1!==i){var o=f.imageIds.sourceElements[i],s=void 0;o===r?s=0:void 0!==f.distances[o]&&(s=f.distances[o][r]),h(l,e,n,t,s)}}}),c=!1)}function v(e){var t=e.detail;!0!==c&&m(e.currentTarget,t)}function g(e){var t=e.detail.element;l.remove(t),(0,o.clearToolOptionsByElement)(t)}this.enabled=!0,this.setHandler=function(e){h=e},this.getHandler=function(){return h},this.getDistances=function(){u.length&&d.length&&(f.distances={},f.imageIds={sourceElements:[],targetElements:[]},u.forEach(function(e){var t=n.getEnabledElement(e);if(t&&t.image){var a=t.image.imageId,r=n.metaData.get("imagePlaneModule",a);if(r&&r.imagePositionPatient){var o=(0,i.default)(r.imagePositionPatient);f.hasOwnProperty(t)||(f.distances[a]={},f.imageIds.sourceElements.push(a),d.forEach(function(t){var r=n.getEnabledElement(t);if(r&&r.image){var l=r.image.imageId;if(f.imageIds.targetElements.push(l),e!==t&&a!==l&&!f.distances[a].hasOwnProperty(l)){var s=n.metaData.get("imagePlaneModule",l);if(s&&s.imagePositionPatient){var u=(0,i.default)(s.imagePositionPatient);f.distances[a][l]=u.clone().sub(o)}}}}),Object.keys(f.distances[a]).length||delete f.distances[a])}}}))},this.addSource=function(t){-1===u.indexOf(t)&&(u.push(t),e.split(" ").forEach(function(e){t.addEventListener(e,v)}),l.getDistances(),l.updateDisableHandlers())},this.addTarget=function(e){-1===d.indexOf(e)&&(d.push(e),l.getDistances(),h(l,e,e,0),l.updateDisableHandlers())},this.add=function(e){l.addSource(e),l.addTarget(e)},this.removeSource=function(t){var n=u.indexOf(t);-1!==n&&(u.splice(n,1),e.split(" ").forEach(function(e){t.removeEventListener(e,v)}),l.getDistances(),m(t),l.updateDisableHandlers())},this.removeTarget=function(e){var t=d.indexOf(e);-1!==t&&(d.splice(t,1),l.getDistances(),h(l,e,e,0),l.updateDisableHandlers())},this.remove=function(e){l.removeTarget(e),l.removeSource(e)},this.getSourceElements=function(){return u},this.getTargetElements=function(){return d},this.displayImage=function(e,t,a){c=!0,n.displayImage(e,t,a),c=!1},this.setViewport=function(e,t){c=!0,n.setViewport(e,t),c=!1},this.updateDisableHandlers=function(){s(u.concat(d)).forEach(function(e){e.removeEventListener(a.default.ELEMENT_DISABLED,g),e.addEventListener(a.default.ELEMENT_DISABLED,g)})},this.destroy=function(){s(u.concat(d)).forEach(function(e){l.remove(e)})}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){n!==t&&i.default.cornerstone.updateImage(n)};var a,r=n(0),i=(a=r)&&a.__esModule?a:{default:a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){if(n!==t){var a=i.default.cornerstone,r=a.getViewport(t),o=a.getViewport(n);o.voi.windowWidth===r.voi.windowWidth&&o.voi.windowCenter===r.voi.windowCenter&&o.invert===r.invert||(o.voi.windowWidth=r.voi.windowWidth,o.voi.windowCenter=r.voi.windowCenter,o.invert=r.invert,e.setViewport(n,o))}};var a,r=n(0),i=(a=r)&&a.__esModule?a:{default:a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.timeSeriesScrollTouchDrag=t.timeSeriesScrollWheel=t.timeSeriesScroll=void 0;var a=c(n(1)),r=c(n(14)),i=c(n(18)),o=c(n(29)),l=c(n(36)),s=c(n(5)),u=n(2),d=n(4);function c(e){return e&&e.__esModule?e:{default:e}}var f="timeSeriesScroll";function h(e){var t=e.detail.element;t.removeEventListener(a.default.MOUSE_DRAG,m),t.removeEventListener(a.default.MOUSE_UP,h),t.removeEventListener(a.default.MOUSE_CLICK,h)}function m(e){var t=e.detail,n=t.element;e.data.deltaY+=t.deltaPoints.page.y;var a=(0,u.getToolState)(t.element,"timeSeries");if(void 0!==a&&void 0!==a.data&&0!==a.data.length){var r=a.data[0],i=n.offsetHeight/r.stacks.length;if(void 0!==e.data.options&&void 0!==e.data.options.timeSeriesScrollSpeed&&(i=e.data.options.timeSeriesScrollSpeed),e.data.deltaY>=i||e.data.deltaY<=-i){var o=Math.round(e.data.deltaY/i),s=e.data.deltaY%i;(0,l.default)(t.element,o),e.data.deltaY=s}return!1}}var v=(0,r.default)(function(e){var t=e.detail,n=t.element,r=(0,d.getToolOptions)(f,n);if((0,s.default)(t.which,r.mouseButtonMask))return r.deltaY=0,(0,d.setToolOptions)(f,n,r),n.addEventListener(a.default.MOUSE_DRAG,m),n.addEventListener(a.default.MOUSE_UP,h),n.addEventListener(a.default.MOUSE_CLICK,h),e.stopImmediatePropagation(),!1},f),g=(0,o.default)(function(e){var t=e.detail,n=-t.direction;(0,l.default)(t.element,n)}),p=(0,i.default)(function(e){var t=e.originalEvent.detail,n={deltaY:0};n.deltaY+=t.deltaPoints.page.y;var a=(0,u.getToolState)(t.element,"stack");if(void 0!==a&&void 0!==a.data&&0!==a.data.length){if(n.deltaY>=3||n.deltaY<=-3){var r=n.deltaY/3,i=n.deltaY%3;(0,l.default)(n.element,r),n.deltaY=i}return!1}});t.timeSeriesScroll=v,t.timeSeriesScrollWheel=g,t.timeSeriesScrollTouchDrag=p},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=n(2),i=n(36),o=(a=i)&&a.__esModule?a:{default:a},l="timeSeriesPlayer",s={start:function(e,t){if(void 0===e)throw new Error("playClip: element must not be undefined");void 0===t&&(t=30);var n=(0,r.getToolState)(e,"timeSeries");if(void 0!==n&&void 0!==n.data&&0!==n.data.length){var a=(0,r.getToolState)(e,l),i=void 0;void 0===a||0===a.data.length?(i={intervalId:void 0,framesPerSecond:t,lastFrameTimeStamp:void 0,frameRate:0},(0,r.addToolState)(e,l,i)):(i=a.data[0]).framesPerSecond=t,void 0===i.intervalId&&(i.intervalId=setInterval(function(){i.framesPerSecond>0?(0,o.default)(e,1,!0):(0,o.default)(e,-1,!0)},1e3/Math.abs(i.framesPerSecond)))}},stop:function(e){var t=(0,r.getToolState)(e,l);if(t&&t.data&&t.data.length){var n=t.data[0];clearInterval(n.intervalId),n.intervalId=void 0}}};t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(){var e=r.default.cornerstone,t=this;t.samples=[],this.set=function(n){t.samples=n,(0,i.default)(e.events,a.default.LINE_SAMPLE_UPDATED)}};var a=o(n(1)),r=o(n(0)),i=o(n(6));function o(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=o(n(1)),r=o(n(0)),i=o(n(6));function o(e){return e&&e.__esModule?e:{default:e}}var l=new function(){var e=r.default.cornerstone,t=this;t.measurements=[],this.add=function(n){var r={index:t.measurements.push(n),measurement:n};(0,i.default)(e.events,a.default.MEASUREMENT_ADDED,r)},this.remove=function(n){var r=t.measurements[n];t.measurements.splice(n,1);var o={index:n,measurement:r};(0,i.default)(e.events,a.default.MEASUREMENT_REMOVED,o)}};t.default=l},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=c(n(0)),r=c(n(10)),i=c(n(9)),o=n(2),l=c(n(133)),s=c(n(132)),u=c(n(11)),d=n(3);function c(e){return e&&e.__esModule?e:{default:e}}var f="probe4D",h=(0,r.default)({createNewMeasurement:function(e){var t=(0,o.getToolState)(e.element,"timeSeries");if(void 0!==t&&void 0!==t.data&&0!==t.data.length){var n=t.data[0],r={timeSeries:n,lineSample:new s.default,imageIdIndex:n.stacks[n.currentStackIndex].currentImageIdIndex,visible:!0,handles:{end:{x:e.currentPoints.image.x,y:e.currentPoints.image.y,highlight:!0,active:!0}}};return function(e){var t=a.default.cornerstone,n=[];e.timeSeries.stacks.forEach(function(a){(!0===a.preventCache?t.loadImage(a.imageIds[e.imageIdIndex]):t.loadAndCacheImage(a.imageIds[e.imageIdIndex])).then(function(t){var a=Math.round(e.handles.end.x)+Math.round(e.handles.end.y)*t.width,r=t.getPixelData()[a];n.push(r)})}),e.lineSample.set(n)}(r),l.default.add(r),r}},onImageRendered:function(e){var t=a.default.cornerstone,n=e.detail,r=(0,o.getToolState)(e.currentTarget,f);if(r){var l=n.canvasContext;l.setTransform(1,0,0,1,0,0);for(var s=function(e){(0,d.draw)(l,function(a){var o=r.data[e];(0,i.default)(a,n,o.handles,"white");var l={x:o.handles.end.x+3,y:o.handles.end.y-3},s=t.pixelToCanvas(n.element,l);(0,u.default)(a,o.handles.end.x+", "+o.handles.end.y,s.x,s.y,"white")})},c=0;c<r.data.length;c++)s(c)}},toolType:f});t.default=h},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,r){var i={color:n,lineWidth:r};(0,a.drawCircle)(e,void 0,t,6,i,"canvas")};var a=n(3)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,r,i){var o={x:t,y:n},l={x:t+r,y:n+i};(0,a.drawEllipse)(e,void 0,o,l,{},"canvas")};var a=n(3)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){e.style.webkitUserSelect="none",e.style.webkitTouchCallout="none",e.style.mozUserSelect="none",e.style.msUserSelect="none",e.style.oUserSelect="none",e.style.khtmlUserSelect="none",e.style.userSelect="none",e.unselectable="on",e.oncontextmenu=function(){return!1},!0===t&&(e.style.pointerEvents="none")}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){return i.default.cornerstone.setToPixelCoordinateSystem(e,t,.1),{fontSize:n/e.viewport.scale/.1,lineHeight:n/e.viewport.scale/.1,fontScale:.1}};var a,r=n(0),i=(a=r)&&a.__esModule?a:{default:a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=e.replace("H","f");return t=(t=(t=(t=(t=(t=t.replace("F","h")).replace("R","l")).replace("L","r")).replace("A","p")).replace("P","a")).toUpperCase()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){for(var t=(0,r.default)(e),n="",i=t.x<0?"R":"L",o=t.y<0?"A":"P",l=t.z<0?"F":"H",s=new a.default.cornerstoneMath.Vector3(Math.abs(t.x),Math.abs(t.y),Math.abs(t.z)),u=0;u<3;u++)if(s.x>1e-4&&s.x>s.y&&s.x>s.z)n+=i,s.x=0;else if(s.y>1e-4&&s.y>s.x&&s.y>s.z)n+=o,s.y=0;else{if(!(s.z>1e-4&&s.z>s.x&&s.z>s.y))break;n+=l,s.z=0}return n};var a=i(n(0)),r=i(n(19));function i(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=l(n(1)),r=l(n(0)),i=n(2),o=l(n(67));function l(e){return e&&e.__esModule?e:{default:e}}var s="referenceLines";function u(e){var t=e.detail,n=(0,i.getToolState)(e.currentTarget,s);if(void 0!==n){var a=n.data[0].synchronizationContext.getSourceElements(),o=n.data[0].renderer,l=t.canvasContext.canvas.getContext("2d");r.default.cornerstone.setToPixelCoordinateSystem(t.enabledElement,l),a.forEach(function(n){n!==e.currentTarget&&o(l,t,e.currentTarget,n)})}}var d={enable:function(e,t,n){n=n||o.default,(0,i.addToolState)(e,s,{synchronizationContext:t,renderer:n}),e.removeEventListener(a.default.IMAGE_RENDERED,u),e.addEventListener(a.default.IMAGE_RENDERED,u),r.default.cornerstone.updateImage(e)},disable:function(e){e.removeEventListener(a.default.IMAGE_RENDERED,u),r.default.cornerstone.updateImage(e)}};t.default=d},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=o(n(68)),r=o(n(141)),i=o(n(67));function o(e){return e&&e.__esModule?e:{default:e}}var l={calculateReferenceLine:a.default,tool:r.default,renderActiveReferenceLine:i.default};t.default=l}])},function(e,t,n){"use strict";n.r(t),n.d(t,"addVolume",function(){return l}),n.d(t,"loadImage",function(){return s});const{getImage:a}=n(5),{loadVolume:r}=n(7),i=n(0),o={};function l(e,t){const{imageIds:n}=t,a={stack:t,volumeId:e,data:{}};return o[e]=a,Promise.all(n.map(i.loadImage)).then(n=>{a.data=r(t,n),console.log(`loaded ${n.length} images`),i.events.dispatchEvent({type:"cornerstonemprvolumeready",data:{volumeId:e}})}).catch(e=>{throw e}),a}function s(e,t){const n=o[e];if(!n)throw new Error("No volume available with that ID. Please add the volume from a stack first.");return{promise:new Promise((r,o)=>{n.data.loadComplete?a(n,t).then(e=>r(e)):i.events.addEventListener("cornerstonemprvolumeready",o=>{if(console.log("volume ready"),o.data.volumeId===e){if(!n.data.loadComplete)return!1;a(n,t).then(e=>r(e)),i.events.removeEventListener("cornerstonemprvolumeready")}})})}}},function(e,t,n){"use strict";n.r(t),n.d(t,"getImage",function(){return r});const{getPlane:a}=n(6);async function r(e,t){const{slice:n,axis:r}=t;console.time("slice");const i=n||0,{gridMapDimensions:o,rows:l,columns:s,numSlices:u,minPixelDimension:d,volumeArray:c}=e.data;let f;const[h,m,v]=o;if("coronal"===r){const e=i*(o[1]/l);f=a([0,e,v-1],[h-1,e,v-1],[0,e,0],[h-1,e,0])}else if("sagittal"===r){const e=i*(o[0]/s);f=a([e,m-1,v-1],[e,0,v-1],[e,m-1,0],[e,0,0])}else if("oblique"===r){o[0];f=a([0,0,190],[0,m-1,2],[h-1,0,190],[h-1,m-1,2])}else{const e=i*(o[2]/u);f=a([0,0,e],[h-1,0,e],[0,m-1,e],[h-1,m-1,e])}const g=function(e,t){const{xPixelWidth:n,yPixelWidth:a,zPixelWidth:r,minPixelDimension:i,volumeArray:o}=e;let l=[];for(let e=0;e<t.length;e++){const s=t[e];for(let e=0;e<s.length;e++){const t=s[e],u=t[0]*i,d=Math.floor(u/n),c=t[1]*i,f=Math.floor(c/a),h=t[2]*i,m=Math.floor(h/r),v=o.get(m,d,f);l.push(v)}}return l}(e.data,f);console.timeEnd("slice");const p=Int16Array.from(g);return{pixelData:p,image:Object.assign(e.data.firstImage,{imageId:Date.now(),rowPixelSpacing:d,columnPixelSpacing:d,rows:f.length,columns:f[0].length,height:f.length,width:f[0].length,getPixelData:()=>p}),volumeShape:c.shape}}},function(e,t){function n(e,t){let[n,a,r]=e,[i,o,l]=t;if([...e,...t].filter(isNaN).length>0)throw new Error("Invalid coordinate");const s=[];s.push([n,a,r]);const u=Math.abs(i-n),d=Math.abs(o-a),c=Math.abs(l-r);let f,h,m;if(f=i>n?1:-1,h=o>a?1:-1,m=l>r?1:-1,u>=d&&u>=c){let e=2*d-u,t=2*c-u;for(;n!==i;)n+=f,e>=0&&(a+=h,e-=2*u),t>=0&&(r+=m,t-=2*u),e+=2*d,t+=2*c,s.push([n,a,r])}else if(d>=u&&d>=c){let e=2*u-d,t=2*c-d;for(;a!==o;)a+=h,e>=0&&(n+=f,e-=2*d),t>=0&&(r+=m,t-=2*d),e+=2*u,t+=2*c,s.push([n,a,r])}else{let e=2*d-c,t=2*u-c;for(;r!==l;)r+=m,e>=0&&(a+=h,e-=2*c),t>=0&&(n+=f,t-=2*c),e+=2*d,t+=2*u,s.push([n,a,r])}return s}e.exports={bresenham3D:n,getPlane:function(e,t,a,r){const i=n(e,a),o=n(t,r);if(i.length!==o.length)throw new Error("Plane not quadrilateral");let l=[];for(let e=0;e<i.length;e++){const t=i[e],a=o[e];l.push(n(t,a))}return l},test:function(){for(let e=0;e<100;e++)console.log(n([-1,1,e],[5,3,-1]))}}},function(e,t,n){"use strict";n.r(t),n.d(t,"loadVolume",function(){return r});n(0);const a=n(8);function r(e,t){const{imageIds:n}=e,r=t;r.forEach(e=>e.imagePositionPatient=function(e){return[e.floatString("x00200032",0),e.floatString("x00200032",1),e.floatString("x00200032",2)]}(e.data)),r.sort((e,t)=>e.imagePositionPatient[2]-t.imagePositionPatient[2]);const i=n.length,o=r[0],l=(r[r.length-1],o.sizeInBytes,o.columnPixelSpacing),s=o.rowPixelSpacing,u=o.data.floatString("x00180050"),d=Math.min(l,s,u);console.log("pixel spacing:",l,s,u),console.timeEnd("load"),console.time("buildvol");const c=r.map(e=>e.getPixelData()),f=c.reduce((e,t)=>e+t.length,0),h=new Int16Array(f);let m=0;for(let e=0;e<c.length;e++)h.set(c[e],m),m+=c[e].length;const v=a(h,[c.length,o.rows,o.columns]),g=v.shape[2],p=v.shape[1],b=[Math.ceil(g*l/d),Math.ceil(p*s/d),Math.ceil(i*u/d)];return console.timeEnd("buildvol"),console.log(v),{volumeArray:v,columns:g,rows:p,numSlices:i,gridMapDimensions:b,xPixelWidth:l,yPixelWidth:s,zPixelWidth:u,minPixelDimension:d,loaded:r.length,loadComplete:!0,firstImage:o}}},function(e,t,n){var a=n(9),r=n(10),i="undefined"!=typeof Float64Array;function o(e,t){return e[0]-t[0]}function l(){var e,t=this.stride,n=new Array(t.length);for(e=0;e<n.length;++e)n[e]=[Math.abs(t[e]),e];n.sort(o);var a=new Array(n.length);for(e=0;e<a.length;++e)a[e]=n[e][1];return a}function s(e,t){var n=["View",t,"d",e].join("");t<0&&(n="View_Nil"+e);var r="generic"===e;if(-1===t){var i="function "+n+"(a){this.data=a;};var proto="+n+".prototype;proto.dtype='"+e+"';proto.index=function(){return -1};proto.size=0;proto.dimension=-1;proto.shape=proto.stride=proto.order=[];proto.lo=proto.hi=proto.transpose=proto.step=function(){return new "+n+"(this.data);};proto.get=proto.set=function(){};proto.pick=function(){return null};return function construct_"+n+"(a){return new "+n+"(a);}";return new Function(i)()}if(0===t){i="function "+n+"(a,d) {this.data = a;this.offset = d};var proto="+n+".prototype;proto.dtype='"+e+"';proto.index=function(){return this.offset};proto.dimension=0;proto.size=1;proto.shape=proto.stride=proto.order=[];proto.lo=proto.hi=proto.transpose=proto.step=function "+n+"_copy() {return new "+n+"(this.data,this.offset)};proto.pick=function "+n+"_pick(){return TrivialArray(this.data);};proto.valueOf=proto.get=function "+n+"_get(){return "+(r?"this.data.get(this.offset)":"this.data[this.offset]")+"};proto.set=function "+n+"_set(v){return "+(r?"this.data.set(this.offset,v)":"this.data[this.offset]=v")+"};return function construct_"+n+"(a,b,c,d){return new "+n+"(a,d)}";return new Function("TrivialArray",i)(u[e][0])}i=["'use strict'"];var o=a(t),s=o.map(function(e){return"i"+e}),d="this.offset+"+o.map(function(e){return"this.stride["+e+"]*i"+e}).join("+"),c=o.map(function(e){return"b"+e}).join(","),f=o.map(function(e){return"c"+e}).join(",");i.push("function "+n+"(a,"+c+","+f+",d){this.data=a","this.shape=["+c+"]","this.stride=["+f+"]","this.offset=d|0}","var proto="+n+".prototype","proto.dtype='"+e+"'","proto.dimension="+t),i.push("Object.defineProperty(proto,'size',{get:function "+n+"_size(){return "+o.map(function(e){return"this.shape["+e+"]"}).join("*"),"}})"),1===t?i.push("proto.order=[0]"):(i.push("Object.defineProperty(proto,'order',{get:"),t<4?(i.push("function "+n+"_order(){"),2===t?i.push("return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})"):3===t&&i.push("var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);if(s0>s1){if(s1>s2){return [2,1,0];}else if(s0>s2){return [1,2,0];}else{return [1,0,2];}}else if(s0>s2){return [2,0,1];}else if(s2>s1){return [0,1,2];}else{return [0,2,1];}}})")):i.push("ORDER})")),i.push("proto.set=function "+n+"_set("+s.join(",")+",v){"),r?i.push("return this.data.set("+d+",v)}"):i.push("return this.data["+d+"]=v}"),i.push("proto.get=function "+n+"_get("+s.join(",")+"){"),r?i.push("return this.data.get("+d+")}"):i.push("return this.data["+d+"]}"),i.push("proto.index=function "+n+"_index(",s.join(),"){return "+d+"}"),i.push("proto.hi=function "+n+"_hi("+s.join(",")+"){return new "+n+"(this.data,"+o.map(function(e){return["(typeof i",e,"!=='number'||i",e,"<0)?this.shape[",e,"]:i",e,"|0"].join("")}).join(",")+","+o.map(function(e){return"this.stride["+e+"]"}).join(",")+",this.offset)}");var h=o.map(function(e){return"a"+e+"=this.shape["+e+"]"}),m=o.map(function(e){return"c"+e+"=this.stride["+e+"]"});i.push("proto.lo=function "+n+"_lo("+s.join(",")+"){var b=this.offset,d=0,"+h.join(",")+","+m.join(","));for(var v=0;v<t;++v)i.push("if(typeof i"+v+"==='number'&&i"+v+">=0){d=i"+v+"|0;b+=c"+v+"*d;a"+v+"-=d}");i.push("return new "+n+"(this.data,"+o.map(function(e){return"a"+e}).join(",")+","+o.map(function(e){return"c"+e}).join(",")+",b)}"),i.push("proto.step=function "+n+"_step("+s.join(",")+"){var "+o.map(function(e){return"a"+e+"=this.shape["+e+"]"}).join(",")+","+o.map(function(e){return"b"+e+"=this.stride["+e+"]"}).join(",")+",c=this.offset,d=0,ceil=Math.ceil");for(v=0;v<t;++v)i.push("if(typeof i"+v+"==='number'){d=i"+v+"|0;if(d<0){c+=b"+v+"*(a"+v+"-1);a"+v+"=ceil(-a"+v+"/d)}else{a"+v+"=ceil(a"+v+"/d)}b"+v+"*=d}");i.push("return new "+n+"(this.data,"+o.map(function(e){return"a"+e}).join(",")+","+o.map(function(e){return"b"+e}).join(",")+",c)}");var g=new Array(t),p=new Array(t);for(v=0;v<t;++v)g[v]="a[i"+v+"]",p[v]="b[i"+v+"]";i.push("proto.transpose=function "+n+"_transpose("+s+"){"+s.map(function(e,t){return e+"=("+e+"===undefined?"+t+":"+e+"|0)"}).join(";"),"var a=this.shape,b=this.stride;return new "+n+"(this.data,"+g.join(",")+","+p.join(",")+",this.offset)}"),i.push("proto.pick=function "+n+"_pick("+s+"){var a=[],b=[],c=this.offset");for(v=0;v<t;++v)i.push("if(typeof i"+v+"==='number'&&i"+v+">=0){c=(c+this.stride["+v+"]*i"+v+")|0}else{a.push(this.shape["+v+"]);b.push(this.stride["+v+"])}");return i.push("var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}"),i.push("return function construct_"+n+"(data,shape,stride,offset){return new "+n+"(data,"+o.map(function(e){return"shape["+e+"]"}).join(",")+","+o.map(function(e){return"stride["+e+"]"}).join(",")+",offset)}"),new Function("CTOR_LIST","ORDER",i.join("\n"))(u[e],l)}var u={float32:[],float64:[],int8:[],int16:[],int32:[],uint8:[],uint16:[],uint32:[],array:[],uint8_clamped:[],buffer:[],generic:[]};e.exports=function(e,t,n,a){if(void 0===e)return(0,u.array[0])([]);"number"==typeof e&&(e=[e]),void 0===t&&(t=[e.length]);var o=t.length;if(void 0===n){n=new Array(o);for(var l=o-1,d=1;l>=0;--l)n[l]=d,d*=t[l]}if(void 0===a)for(a=0,l=0;l<o;++l)n[l]<0&&(a-=(t[l]-1)*n[l]);for(var c=function(e){if(r(e))return"buffer";if(i)switch(Object.prototype.toString.call(e)){case"[object Float64Array]":return"float64";case"[object Float32Array]":return"float32";case"[object Int8Array]":return"int8";case"[object Int16Array]":return"int16";case"[object Int32Array]":return"int32";case"[object Uint8Array]":return"uint8";case"[object Uint16Array]":return"uint16";case"[object Uint32Array]":return"uint32";case"[object Uint8ClampedArray]":return"uint8_clamped"}return Array.isArray(e)?"array":"generic"}(e),f=u[c];f.length<=o+1;)f.push(s(c,f.length-1));return(0,f[o+1])(e,t,n,a)}},function(e,t,n){"use strict";e.exports=function(e){for(var t=new Array(e),n=0;n<e;++n)t[n]=n;return t}},function(e,t){function n(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
e.exports=function(e){return null!=e&&(n(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&n(e.slice(0,0))}(e)||!!e._isBuffer)}},function(e,t,n){
/*! dicom-parser - 1.8.1 - 2018-05-16 | (c) 2017 Chris Hafey | https://github.com/cornerstonejs/dicomParser */
e.exports=function(e){var t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:a})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=79)}([function(e,t){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){"use strict";(function(e){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
var a=n(73),r=n(72),i=n(38);function o(){return s.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function l(e,t){if(o()<t)throw new RangeError("Invalid typed array length");return s.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=s.prototype:(null===e&&(e=new s(t)),e.length=t),e}function s(e,t,n){if(!(s.TYPED_ARRAY_SUPPORT||this instanceof s))return new s(e,t,n);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return c(this,e)}return u(this,e,t,n)}function u(e,t,n,a){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,n,a){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(a||0))throw new RangeError("'length' is out of bounds");return t=void 0===n&&void 0===a?new Uint8Array(t):void 0===a?new Uint8Array(t,n):new Uint8Array(t,n,a),s.TYPED_ARRAY_SUPPORT?(e=t).__proto__=s.prototype:e=f(e,t),e}(e,t,n,a):"string"==typeof t?function(e,t,n){if("string"==typeof n&&""!==n||(n="utf8"),!s.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var a=0|m(t,n),r=(e=l(e,a)).write(t,n);return r!==a&&(e=e.slice(0,r)),e}(e,t,n):function(e,t){if(s.isBuffer(t)){var n=0|h(t.length);return 0===(e=l(e,n)).length?e:(t.copy(e,0,0,n),e)}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(a=t.length)!=a?l(e,0):f(e,t);if("Buffer"===t.type&&i(t.data))return f(e,t.data)}var a;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function d(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function c(e,t){if(d(t),e=l(e,t<0?0:0|h(t)),!s.TYPED_ARRAY_SUPPORT)for(var n=0;n<t;++n)e[n]=0;return e}function f(e,t){var n=t.length<0?0:0|h(t.length);e=l(e,n);for(var a=0;a<n;a+=1)e[a]=255&t[a];return e}function h(e){if(e>=o())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+o().toString(16)+" bytes");return 0|e}function m(e,t){if(s.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var a=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return H(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return F(e).length;default:if(a)return H(e).length;t=(""+t).toLowerCase(),a=!0}}function v(e,t,n){var a=e[t];e[t]=e[n],e[n]=a}function g(e,t,n,a,r){if(0===e.length)return-1;if("string"==typeof n?(a=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=r?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(r)return-1;n=e.length-1}else if(n<0){if(!r)return-1;n=0}if("string"==typeof t&&(t=s.from(t,a)),s.isBuffer(t))return 0===t.length?-1:p(e,t,n,a,r);if("number"==typeof t)return t&=255,s.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?r?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):p(e,[t],n,a,r);throw new TypeError("val must be string, number or Buffer")}function p(e,t,n,a,r){var i,o=1,l=e.length,s=t.length;if(void 0!==a&&("ucs2"===(a=String(a).toLowerCase())||"ucs-2"===a||"utf16le"===a||"utf-16le"===a)){if(e.length<2||t.length<2)return-1;o=2,l/=2,s/=2,n/=2}function u(e,t){return 1===o?e[t]:e.readUInt16BE(t*o)}if(r){var d=-1;for(i=n;i<l;i++)if(u(e,i)===u(t,-1===d?0:i-d)){if(-1===d&&(d=i),i-d+1===s)return d*o}else-1!==d&&(i-=i-d),d=-1}else for(n+s>l&&(n=l-s),i=n;i>=0;i--){for(var c=!0,f=0;f<s;f++)if(u(e,i+f)!==u(t,f)){c=!1;break}if(c)return i}return-1}function b(e,t,n,a){n=Number(n)||0;var r=e.length-n;a?(a=Number(a))>r&&(a=r):a=r;var i=t.length;if(i%2!=0)throw new TypeError("Invalid hex string");a>i/2&&(a=i/2);for(var o=0;o<a;++o){var l=parseInt(t.substr(2*o,2),16);if(isNaN(l))return o;e[n+o]=l}return o}function y(e,t,n,a){return V(H(t,e.length-n),e,n,a)}function w(e,t,n,a){return V(function(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,a)}function _(e,t,n,a){return w(e,t,n,a)}function E(e,t,n,a){return V(F(t),e,n,a)}function x(e,t,n,a){return V(function(e,t){for(var n,a,r,i=[],o=0;o<e.length&&!((t-=2)<0);++o)n=e.charCodeAt(o),a=n>>8,r=n%256,i.push(r),i.push(a);return i}(t,e.length-n),e,n,a)}function T(e,t,n){return 0===t&&n===e.length?a.fromByteArray(e):a.fromByteArray(e.slice(t,n))}function P(e,t,n){n=Math.min(e.length,n);for(var a=[],r=t;r<n;){var i,o,l,s,u=e[r],d=null,c=u>239?4:u>223?3:u>191?2:1;if(r+c<=n)switch(c){case 1:u<128&&(d=u);break;case 2:128==(192&(i=e[r+1]))&&(s=(31&u)<<6|63&i)>127&&(d=s);break;case 3:i=e[r+1],o=e[r+2],128==(192&i)&&128==(192&o)&&(s=(15&u)<<12|(63&i)<<6|63&o)>2047&&(s<55296||s>57343)&&(d=s);break;case 4:i=e[r+1],o=e[r+2],l=e[r+3],128==(192&i)&&128==(192&o)&&128==(192&l)&&(s=(15&u)<<18|(63&i)<<12|(63&o)<<6|63&l)>65535&&s<1114112&&(d=s)}null===d?(d=65533,c=1):d>65535&&(d-=65536,a.push(d>>>10&1023|55296),d=56320|1023&d),a.push(d),r+=c}return function(e){var t=e.length;if(t<=O)return String.fromCharCode.apply(String,e);for(var n="",a=0;a<t;)n+=String.fromCharCode.apply(String,e.slice(a,a+=O));return n}(a)}t.Buffer=s,t.SlowBuffer=function(e){return+e!=e&&(e=0),s.alloc(+e)},t.INSPECT_MAX_BYTES=50,s.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return!1}}(),t.kMaxLength=o(),s.poolSize=8192,s._augment=function(e){return e.__proto__=s.prototype,e},s.from=function(e,t,n){return u(null,e,t,n)},s.TYPED_ARRAY_SUPPORT&&(s.prototype.__proto__=Uint8Array.prototype,s.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&s[Symbol.species]===s&&Object.defineProperty(s,Symbol.species,{value:null,configurable:!0})),s.alloc=function(e,t,n){return function(e,t,n,a){return d(t),t<=0?l(e,t):void 0!==n?"string"==typeof a?l(e,t).fill(n,a):l(e,t).fill(n):l(e,t)}(null,e,t,n)},s.allocUnsafe=function(e){return c(null,e)},s.allocUnsafeSlow=function(e){return c(null,e)},s.isBuffer=function(e){return!(null==e||!e._isBuffer)},s.compare=function(e,t){if(!s.isBuffer(e)||!s.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,a=t.length,r=0,i=Math.min(n,a);r<i;++r)if(e[r]!==t[r]){n=e[r],a=t[r];break}return n<a?-1:a<n?1:0},s.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},s.concat=function(e,t){if(!i(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return s.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var a=s.allocUnsafe(t),r=0;for(n=0;n<e.length;++n){var o=e[n];if(!s.isBuffer(o))throw new TypeError('"list" argument must be an Array of Buffers');o.copy(a,r),r+=o.length}return a},s.byteLength=m,s.prototype._isBuffer=!0,s.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)v(this,t,t+1);return this},s.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)v(this,t,t+3),v(this,t+1,t+2);return this},s.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)v(this,t,t+7),v(this,t+1,t+6),v(this,t+2,t+5),v(this,t+3,t+4);return this},s.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?P(this,0,e):function(e,t,n){var a=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return M(this,t,n);case"utf8":case"utf-8":return P(this,t,n);case"ascii":return S(this,t,n);case"latin1":case"binary":return I(this,t,n);case"base64":return T(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return C(this,t,n);default:if(a)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),a=!0}}.apply(this,arguments)},s.prototype.equals=function(e){if(!s.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===s.compare(this,e)},s.prototype.inspect=function(){var e="",n=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(e+=" ... ")),"<Buffer "+e+">"},s.prototype.compare=function(e,t,n,a,r){if(!s.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===a&&(a=0),void 0===r&&(r=this.length),t<0||n>e.length||a<0||r>this.length)throw new RangeError("out of range index");if(a>=r&&t>=n)return 0;if(a>=r)return-1;if(t>=n)return 1;if(t>>>=0,n>>>=0,a>>>=0,r>>>=0,this===e)return 0;for(var i=r-a,o=n-t,l=Math.min(i,o),u=this.slice(a,r),d=e.slice(t,n),c=0;c<l;++c)if(u[c]!==d[c]){i=u[c],o=d[c];break}return i<o?-1:o<i?1:0},s.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},s.prototype.indexOf=function(e,t,n){return g(this,e,t,n,!0)},s.prototype.lastIndexOf=function(e,t,n){return g(this,e,t,n,!1)},s.prototype.write=function(e,t,n,a){if(void 0===t)a="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)a=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===a&&(a="utf8")):(a=n,n=void 0)}var r=this.length-t;if((void 0===n||n>r)&&(n=r),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");a||(a="utf8");for(var i=!1;;)switch(a){case"hex":return b(this,e,t,n);case"utf8":case"utf-8":return y(this,e,t,n);case"ascii":return w(this,e,t,n);case"latin1":case"binary":return _(this,e,t,n);case"base64":return E(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return x(this,e,t,n);default:if(i)throw new TypeError("Unknown encoding: "+a);a=(""+a).toLowerCase(),i=!0}},s.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var O=4096;function S(e,t,n){var a="";n=Math.min(e.length,n);for(var r=t;r<n;++r)a+=String.fromCharCode(127&e[r]);return a}function I(e,t,n){var a="";n=Math.min(e.length,n);for(var r=t;r<n;++r)a+=String.fromCharCode(e[r]);return a}function M(e,t,n){var a=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>a)&&(n=a);for(var r="",i=t;i<n;++i)r+=B(e[i]);return r}function C(e,t,n){for(var a=e.slice(t,n),r="",i=0;i<a.length;i+=2)r+=String.fromCharCode(a[i]+256*a[i+1]);return r}function L(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function D(e,t,n,a,r,i){if(!s.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>r||t<i)throw new RangeError('"value" argument is out of bounds');if(n+a>e.length)throw new RangeError("Index out of range")}function A(e,t,n,a){t<0&&(t=65535+t+1);for(var r=0,i=Math.min(e.length-n,2);r<i;++r)e[n+r]=(t&255<<8*(a?r:1-r))>>>8*(a?r:1-r)}function j(e,t,n,a){t<0&&(t=4294967295+t+1);for(var r=0,i=Math.min(e.length-n,4);r<i;++r)e[n+r]=t>>>8*(a?r:3-r)&255}function k(e,t,n,a,r,i){if(n+a>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function R(e,t,n,a,i){return i||k(e,0,n,4),r.write(e,t,n,a,23,4),n+4}function U(e,t,n,a,i){return i||k(e,0,n,8),r.write(e,t,n,a,52,8),n+8}s.prototype.slice=function(e,t){var n,a=this.length;if(e=~~e,t=void 0===t?a:~~t,e<0?(e+=a)<0&&(e=0):e>a&&(e=a),t<0?(t+=a)<0&&(t=0):t>a&&(t=a),t<e&&(t=e),s.TYPED_ARRAY_SUPPORT)(n=this.subarray(e,t)).__proto__=s.prototype;else{var r=t-e;n=new s(r,void 0);for(var i=0;i<r;++i)n[i]=this[i+e]}return n},s.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||L(e,t,this.length);for(var a=this[e],r=1,i=0;++i<t&&(r*=256);)a+=this[e+i]*r;return a},s.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||L(e,t,this.length);for(var a=this[e+--t],r=1;t>0&&(r*=256);)a+=this[e+--t]*r;return a},s.prototype.readUInt8=function(e,t){return t||L(e,1,this.length),this[e]},s.prototype.readUInt16LE=function(e,t){return t||L(e,2,this.length),this[e]|this[e+1]<<8},s.prototype.readUInt16BE=function(e,t){return t||L(e,2,this.length),this[e]<<8|this[e+1]},s.prototype.readUInt32LE=function(e,t){return t||L(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},s.prototype.readUInt32BE=function(e,t){return t||L(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},s.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||L(e,t,this.length);for(var a=this[e],r=1,i=0;++i<t&&(r*=256);)a+=this[e+i]*r;return a>=(r*=128)&&(a-=Math.pow(2,8*t)),a},s.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||L(e,t,this.length);for(var a=t,r=1,i=this[e+--a];a>0&&(r*=256);)i+=this[e+--a]*r;return i>=(r*=128)&&(i-=Math.pow(2,8*t)),i},s.prototype.readInt8=function(e,t){return t||L(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},s.prototype.readInt16LE=function(e,t){t||L(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},s.prototype.readInt16BE=function(e,t){t||L(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},s.prototype.readInt32LE=function(e,t){return t||L(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},s.prototype.readInt32BE=function(e,t){return t||L(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},s.prototype.readFloatLE=function(e,t){return t||L(e,4,this.length),r.read(this,e,!0,23,4)},s.prototype.readFloatBE=function(e,t){return t||L(e,4,this.length),r.read(this,e,!1,23,4)},s.prototype.readDoubleLE=function(e,t){return t||L(e,8,this.length),r.read(this,e,!0,52,8)},s.prototype.readDoubleBE=function(e,t){return t||L(e,8,this.length),r.read(this,e,!1,52,8)},s.prototype.writeUIntLE=function(e,t,n,a){e=+e,t|=0,n|=0,a||D(this,e,t,n,Math.pow(2,8*n)-1,0);var r=1,i=0;for(this[t]=255&e;++i<n&&(r*=256);)this[t+i]=e/r&255;return t+n},s.prototype.writeUIntBE=function(e,t,n,a){e=+e,t|=0,n|=0,a||D(this,e,t,n,Math.pow(2,8*n)-1,0);var r=n-1,i=1;for(this[t+r]=255&e;--r>=0&&(i*=256);)this[t+r]=e/i&255;return t+n},s.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||D(this,e,t,1,255,0),s.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},s.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||D(this,e,t,2,65535,0),s.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):A(this,e,t,!0),t+2},s.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||D(this,e,t,2,65535,0),s.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):A(this,e,t,!1),t+2},s.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||D(this,e,t,4,4294967295,0),s.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):j(this,e,t,!0),t+4},s.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||D(this,e,t,4,4294967295,0),s.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):j(this,e,t,!1),t+4},s.prototype.writeIntLE=function(e,t,n,a){if(e=+e,t|=0,!a){var r=Math.pow(2,8*n-1);D(this,e,t,n,r-1,-r)}var i=0,o=1,l=0;for(this[t]=255&e;++i<n&&(o*=256);)e<0&&0===l&&0!==this[t+i-1]&&(l=1),this[t+i]=(e/o>>0)-l&255;return t+n},s.prototype.writeIntBE=function(e,t,n,a){if(e=+e,t|=0,!a){var r=Math.pow(2,8*n-1);D(this,e,t,n,r-1,-r)}var i=n-1,o=1,l=0;for(this[t+i]=255&e;--i>=0&&(o*=256);)e<0&&0===l&&0!==this[t+i+1]&&(l=1),this[t+i]=(e/o>>0)-l&255;return t+n},s.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||D(this,e,t,1,127,-128),s.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},s.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||D(this,e,t,2,32767,-32768),s.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):A(this,e,t,!0),t+2},s.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||D(this,e,t,2,32767,-32768),s.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):A(this,e,t,!1),t+2},s.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||D(this,e,t,4,2147483647,-2147483648),s.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):j(this,e,t,!0),t+4},s.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||D(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),s.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):j(this,e,t,!1),t+4},s.prototype.writeFloatLE=function(e,t,n){return R(this,e,t,!0,n)},s.prototype.writeFloatBE=function(e,t,n){return R(this,e,t,!1,n)},s.prototype.writeDoubleLE=function(e,t,n){return U(this,e,t,!0,n)},s.prototype.writeDoubleBE=function(e,t,n){return U(this,e,t,!1,n)},s.prototype.copy=function(e,t,n,a){if(n||(n=0),a||0===a||(a=this.length),t>=e.length&&(t=e.length),t||(t=0),a>0&&a<n&&(a=n),a===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(a<0)throw new RangeError("sourceEnd out of bounds");a>this.length&&(a=this.length),e.length-t<a-n&&(a=e.length-t+n);var r,i=a-n;if(this===e&&n<t&&t<a)for(r=i-1;r>=0;--r)e[r+t]=this[r+n];else if(i<1e3||!s.TYPED_ARRAY_SUPPORT)for(r=0;r<i;++r)e[r+t]=this[r+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+i),t);return i},s.prototype.fill=function(e,t,n,a){if("string"==typeof e){if("string"==typeof t?(a=t,t=0,n=this.length):"string"==typeof n&&(a=n,n=this.length),1===e.length){var r=e.charCodeAt(0);r<256&&(e=r)}if(void 0!==a&&"string"!=typeof a)throw new TypeError("encoding must be a string");if("string"==typeof a&&!s.isEncoding(a))throw new TypeError("Unknown encoding: "+a)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var i;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(i=t;i<n;++i)this[i]=e;else{var o=s.isBuffer(e)?e:H(new s(e,a).toString()),l=o.length;for(i=0;i<n-t;++i)this[i+t]=o[i%l]}return this};var N=/[^+\/0-9A-Za-z-_]/g;function B(e){return e<16?"0"+e.toString(16):e.toString(16)}function H(e,t){var n;t=t||1/0;for(var a=e.length,r=null,i=[],o=0;o<a;++o){if((n=e.charCodeAt(o))>55295&&n<57344){if(!r){if(n>56319){(t-=3)>-1&&i.push(239,191,189);continue}if(o+1===a){(t-=3)>-1&&i.push(239,191,189);continue}r=n;continue}if(n<56320){(t-=3)>-1&&i.push(239,191,189),r=n;continue}n=65536+(r-55296<<10|n-56320)}else r&&(t-=3)>-1&&i.push(239,191,189);if(r=null,n<128){if((t-=1)<0)break;i.push(n)}else if(n<2048){if((t-=2)<0)break;i.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;i.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;i.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return i}function F(e){return a.toByteArray(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(N,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function V(e,t,n,a){for(var r=0;r<a&&!(r+n>=t.length||r>=e.length);++r)t[r+n]=e[r];return r}}).call(this,n(0))},function(e,t,n){"use strict";var a=n(10),r=Object.keys||function(e){var t=[];for(var n in e)t.push(n);return t};e.exports=c;var i=n(6);i.inherits=n(5);var o=n(35),l=n(18);i.inherits(c,o);for(var s=r(l.prototype),u=0;u<s.length;u++){var d=s[u];c.prototype[d]||(c.prototype[d]=l.prototype[d])}function c(e){if(!(this instanceof c))return new c(e);o.call(this,e),l.call(this,e),e&&!1===e.readable&&(this.readable=!1),e&&!1===e.writable&&(this.writable=!1),this.allowHalfOpen=!0,e&&!1===e.allowHalfOpen&&(this.allowHalfOpen=!1),this.once("end",f)}function f(){this.allowHalfOpen||this._writableState.ended||a.nextTick(h,this)}function h(e){e.end()}Object.defineProperty(c.prototype,"destroyed",{get:function(){return void 0!==this._readableState&&void 0!==this._writableState&&this._readableState.destroyed&&this._writableState.destroyed},set:function(e){void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed=e,this._writableState.destroyed=e)}}),c.prototype._destroy=function(e,t){this.push(null),this.end(),a.nextTick(t,e)}},function(e,t){var n,a,r=e.exports={};function i(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function l(e){if(n===setTimeout)return setTimeout(e,0);if((n===i||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:i}catch(e){n=i}try{a="function"==typeof clearTimeout?clearTimeout:o}catch(e){a=o}}();var s,u=[],d=!1,c=-1;function f(){d&&s&&(d=!1,s.length?u=s.concat(u):c=-1,u.length&&h())}function h(){if(!d){var e=l(f);d=!0;for(var t=u.length;t;){for(s=u,u=[];++c<t;)s&&s[c].run();c=-1,t=u.length}s=null,d=!1,function(e){if(a===clearTimeout)return clearTimeout(e);if((a===o||!a)&&clearTimeout)return a=clearTimeout,clearTimeout(e);try{a(e)}catch(t){try{return a.call(null,e)}catch(t){return a.call(this,e)}}}(e)}}function m(e,t){this.fun=e,this.array=t}function v(){}r.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];u.push(new m(e,t)),1!==u.length||d||l(h)},m.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=v,r.addListener=v,r.once=v,r.off=v,r.removeListener=v,r.removeAllListeners=v,r.emit=v,r.prependListener=v,r.prependOnceListener=v,r.listeners=function(e){return[]},r.binding=function(e){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(e){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){if(void 0===e)throw"dicomParser.readTag: missing required parameter 'byteStream'";var t=256*e.readUint16()*256,n=e.readUint16();return"x"+("00000000"+(t+n).toString(16)).substr(-8)}},function(e,t){"function"==typeof Object.create?e.exports=function(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}:e.exports=function(e,t){e.super_=t;var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e}},function(e,t,n){(function(e){function n(e){return Object.prototype.toString.call(e)}t.isArray=function(e){return Array.isArray?Array.isArray(e):"[object Array]"===n(e)},t.isBoolean=function(e){return"boolean"==typeof e},t.isNull=function(e){return null===e},t.isNullOrUndefined=function(e){return null==e},t.isNumber=function(e){return"number"==typeof e},t.isString=function(e){return"string"==typeof e},t.isSymbol=function(e){return"symbol"==typeof e},t.isUndefined=function(e){return void 0===e},t.isRegExp=function(e){return"[object RegExp]"===n(e)},t.isObject=function(e){return"object"==typeof e&&null!==e},t.isDate=function(e){return"[object Date]"===n(e)},t.isError=function(e){return"[object Error]"===n(e)||e instanceof Error},t.isFunction=function(e){return"function"==typeof e},t.isPrimitive=function(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e||"symbol"==typeof e||void 0===e},t.isBuffer=e.isBuffer}).call(this,n(1).Buffer)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r=n(14);function i(e,t){return void 0!==e.parser?e.parser:t}var o=function(){function e(t,n,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.byteArrayParser=t,this.byteArray=n,this.elements=a}return a(e,[{key:"uint16",value:function(e,t){var n=this.elements[e];if(t=void 0!==t?t:0,n&&0!==n.length)return i(n,this.byteArrayParser).readUint16(this.byteArray,n.dataOffset+2*t)}},{key:"int16",value:function(e,t){var n=this.elements[e];if(t=void 0!==t?t:0,n&&0!==n.length)return i(n,this.byteArrayParser).readInt16(this.byteArray,n.dataOffset+2*t)}},{key:"uint32",value:function(e,t){var n=this.elements[e];if(t=void 0!==t?t:0,n&&0!==n.length)return i(n,this.byteArrayParser).readUint32(this.byteArray,n.dataOffset+4*t)}},{key:"int32",value:function(e,t){var n=this.elements[e];if(t=void 0!==t?t:0,n&&0!==n.length)return i(n,this.byteArrayParser).readInt32(this.byteArray,n.dataOffset+4*t)}},{key:"float",value:function(e,t){var n=this.elements[e];if(t=void 0!==t?t:0,n&&0!==n.length)return i(n,this.byteArrayParser).readFloat(this.byteArray,n.dataOffset+4*t)}},{key:"double",value:function(e,t){var n=this.elements[e];if(t=void 0!==t?t:0,n&&0!==n.length)return i(n,this.byteArrayParser).readDouble(this.byteArray,n.dataOffset+8*t)}},{key:"numStringValues",value:function(e){var t=this.elements[e];if(t&&t.length>0){var n=(0,r.readFixedString)(this.byteArray,t.dataOffset,t.length).match(/\\/g);return null===n?1:n.length+1}}},{key:"string",value:function(e,t){var n=this.elements[e];if(n&&n.length>0){var a=(0,r.readFixedString)(this.byteArray,n.dataOffset,n.length);return t>=0?a.split("\\")[t].trim():a.trim()}}},{key:"text",value:function(e,t){var n=this.elements[e];if(n&&n.length>0){var a=(0,r.readFixedString)(this.byteArray,n.dataOffset,n.length);return t>=0?a.split("\\")[t].replace(/ +$/,""):a.replace(/ +$/,"")}}},{key:"floatString",value:function(e,t){var n=this.elements[e];if(n&&n.length>0){t=void 0!==t?t:0;var a=this.string(e,t);if(void 0!==a)return parseFloat(a)}}},{key:"intString",value:function(e,t){var n=this.elements[e];if(n&&n.length>0){t=void 0!==t?t:0;var a=this.string(e,t);if(void 0!==a)return parseInt(a)}}},{key:"attributeTag",value:function(e){var t=this.elements[e];if(t&&4===t.length){var n=i(t,this.byteArrayParser).readUint16,a=this.byteArray,r=t.dataOffset;return"x"+("00000000"+(256*n(a,r)*256+n(a,r+2)).toString(16)).substr(-8)}}}]),e}();t.default=o},function(e,t,n){"use strict";var a="undefined"!=typeof Uint8Array&&"undefined"!=typeof Uint16Array&&"undefined"!=typeof Int32Array;function r(e,t){return Object.prototype.hasOwnProperty.call(e,t)}t.assign=function(e){for(var t=Array.prototype.slice.call(arguments,1);t.length;){var n=t.shift();if(n){if("object"!=typeof n)throw new TypeError(n+"must be non-object");for(var a in n)r(n,a)&&(e[a]=n[a])}}return e},t.shrinkBuf=function(e,t){return e.length===t?e:e.subarray?e.subarray(0,t):(e.length=t,e)};var i={arraySet:function(e,t,n,a,r){if(t.subarray&&e.subarray)e.set(t.subarray(n,n+a),r);else for(var i=0;i<a;i++)e[r+i]=t[n+i]},flattenChunks:function(e){var t,n,a,r,i,o;for(a=0,t=0,n=e.length;t<n;t++)a+=e[t].length;for(o=new Uint8Array(a),r=0,t=0,n=e.length;t<n;t++)i=e[t],o.set(i,r),r+=i.length;return o}},o={arraySet:function(e,t,n,a,r){for(var i=0;i<a;i++)e[r+i]=t[n+i]},flattenChunks:function(e){return[].concat.apply([],e)}};t.setTyped=function(e){e?(t.Buf8=Uint8Array,t.Buf16=Uint16Array,t.Buf32=Int32Array,t.assign(t,i)):(t.Buf8=Array,t.Buf16=Array,t.Buf32=Array,t.assign(t,o))},t.setTyped(a)},function(e,t,n){var a=n(1),r=a.Buffer;function i(e,t){for(var n in e)t[n]=e[n]}function o(e,t,n){return r(e,t,n)}r.from&&r.alloc&&r.allocUnsafe&&r.allocUnsafeSlow?e.exports=a:(i(a,t),t.Buffer=o),i(r,o),o.from=function(e,t,n){if("number"==typeof e)throw new TypeError("Argument must not be a number");return r(e,t,n)},o.alloc=function(e,t,n){if("number"!=typeof e)throw new TypeError("Argument must be a number");var a=r(e);return void 0!==t?"string"==typeof n?a.fill(t,n):a.fill(t):a.fill(0),a},o.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return r(e)},o.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return a.SlowBuffer(e)}},function(e,t,n){"use strict";(function(t){!t.version||0===t.version.indexOf("v0.")||0===t.version.indexOf("v1.")&&0!==t.version.indexOf("v1.8.")?e.exports={nextTick:function(e,n,a,r){if("function"!=typeof e)throw new TypeError('"callback" argument must be a function');var i,o,l=arguments.length;switch(l){case 0:case 1:return t.nextTick(e);case 2:return t.nextTick(function(){e.call(null,n)});case 3:return t.nextTick(function(){e.call(null,n,a)});case 4:return t.nextTick(function(){e.call(null,n,a,r)});default:for(i=new Array(l-1),o=0;o<i.length;)i[o++]=arguments[o];return t.nextTick(function(){e.apply(null,i)})}}}:e.exports=t}).call(this,n(3))},function(e,t,n){"use strict";(function(e){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(t,n,a){if(void 0!==e&&t instanceof e)return t.slice(n,n+a);if(t instanceof Uint8Array)return new Uint8Array(t.buffer,t.byteOffset+n,a);throw"dicomParser.from: unknown type for byteArray"}}).call(this,n(1).Buffer)},function(e,t,n){"use strict";(function(e){Object.defineProperty(t,"__esModule",{value:!0});var a,r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),i=n(11),o=(a=i)&&a.__esModule?a:{default:a},l=n(14),s=function(){function t(n,a,r){if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),void 0===n)throw"dicomParser.ByteStream: missing required parameter 'byteArrayParser'";if(void 0===a)throw"dicomParser.ByteStream: missing required parameter 'byteArray'";if(a instanceof Uint8Array==0&&a instanceof e==0)throw"dicomParser.ByteStream: parameter byteArray is not of type Uint8Array or Buffer";if(r<0)throw"dicomParser.ByteStream: parameter 'position' cannot be less than 0";if(r>=a.length)throw"dicomParser.ByteStream: parameter 'position' cannot be greater than or equal to 'byteArray' length";this.byteArrayParser=n,this.byteArray=a,this.position=r||0,this.warnings=[]}return r(t,[{key:"seek",value:function(e){if(this.position+e<0)throw"dicomParser.ByteStream.prototype.seek: cannot seek to position < 0";this.position+=e}},{key:"readByteStream",value:function(e){if(this.position+e>this.byteArray.length)throw"dicomParser.ByteStream.prototype.readByteStream: readByteStream - buffer overread";var n=(0,o.default)(this.byteArray,this.position,e);return this.position+=e,new t(this.byteArrayParser,n)}},{key:"readUint16",value:function(){var e=this.byteArrayParser.readUint16(this.byteArray,this.position);return this.position+=2,e}},{key:"readUint32",value:function(){var e=this.byteArrayParser.readUint32(this.byteArray,this.position);return this.position+=4,e}},{key:"readFixedString",value:function(e){var t=(0,l.readFixedString)(this.byteArray,this.position,e);return this.position+=e,t}}]),t}();t.default=s}).call(this,n(1).Buffer)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){if(void 0===e)throw"dicomParser.readSequenceItem: missing required parameter 'byteStream'";var t={tag:(0,i.default)(e),length:e.readUint32(),dataOffset:e.position};if("xfffee000"!==t.tag)throw"dicomParser.readSequenceItem: item tag (FFFE,E000) not found at offset "+e.position;return t};var a,r=n(4),i=(a=r)&&a.__esModule?a:{default:a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.readFixedString=function(e,t,n){if(n<0)throw"dicomParser.readFixedString - length cannot be less than 0";if(t+n>e.length)throw"dicomParser.readFixedString: attempt to read past end of buffer";for(var a,r="",i=0;i<n;i++){if(0===(a=e[t+i]))return t+=n,r;r+=String.fromCharCode(a)}return r}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){if(void 0===e)throw"dicomParser.readDicomElementExplicit: missing required parameter 'byteStream'";var s={tag:(0,o.default)(e),vr:e.readFixedString(2)};return 2===u(s.vr)?(s.length=e.readUint16(),s.dataOffset=e.position):(e.seek(2),s.length=e.readUint32(),s.dataOffset=e.position),4294967295===s.length&&(s.hadUndefinedLength=!0),s.tag===n?s:"SQ"===s.vr?((0,l.default)(e,s,t),s):4294967295===s.length?"x7fe00010"===s.tag?((0,a.default)(e,s,t),s):"UN"===s.vr?((0,r.default)(e,s),s):((0,i.default)(e,s),s):(e.seek(s.length),s)};var a=s(n(42)),r=s(n(41)),i=s(n(24)),o=s(n(4)),l=s(n(40));function s(e){return e&&e.__esModule?e:{default:e}}var u=function(e){return"OB"===e||"OW"===e||"SQ"===e||"OF"===e||"UT"===e||"UN"===e?4:2}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseDicomDataSetExplicit=function(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(n=void 0===n?t.byteArray.length:n,void 0===t)throw"dicomParser.parseDicomDataSetExplicit: missing required parameter 'byteStream'";if(n<t.position||n>t.byteArray.length)throw"dicomParser.parseDicomDataSetExplicit: invalid value for parameter 'maxP osition'";for(var i=e.elements;t.position<n;){var o=(0,a.default)(t,e.warnings,r.untilTag);if(i[o.tag]=o,o.tag===r.untilTag)return}if(t.position>n)throw"dicomParser:parseDicomDataSetExplicit: buffer overrun"},t.parseDicomDataSetImplicit=function(e,t,n){var a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(n=void 0===n?e.byteArray.length:n,void 0===t)throw"dicomParser.parseDicomDataSetImplicit: missing required parameter 'byteStream'";if(n<t.position||n>t.byteArray.length)throw"dicomParser.parseDicomDataSetImplicit: invalid value for parameter 'maxPosition'";for(var i=e.elements;t.position<n;){var o=(0,r.default)(t,a.untilTag,a.vrCallback);if(i[o.tag]=o,o.tag===a.untilTag)return}};var a=i(n(15)),r=i(n(23));function i(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,l,u){if(l=l||1,u=u||t.fragments,void 0===e)throw"dicomParser.readEncapsulatedPixelDataFromFragments: missing required parameter 'dataSet'";if(void 0===t)throw"dicomParser.readEncapsulatedPixelDataFromFragments: missing required parameter 'pixelDataElement'";if(void 0===n)throw"dicomParser.readEncapsulatedPixelDataFromFragments: missing required parameter 'startFragmentIndex'";if(void 0===l)throw"dicomParser.readEncapsulatedPixelDataFromFragments: missing required parameter 'numFragments'";if("x7fe00010"!==t.tag)throw"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'pixelDataElement' refers to non pixel data tag (expected tag = x7fe00010";if(!0!==t.encapsulatedPixelData)throw"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data";if(!0!==t.hadUndefinedLength)throw"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data";if(void 0===t.basicOffsetTable)throw"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data";if(void 0===t.fragments)throw"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data";if(t.fragments.length<=0)throw"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data";if(n<0)throw"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'startFragmentIndex' must be >= 0";if(n>=t.fragments.length)throw"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'startFragmentIndex' must be < number of fragments";if(l<1)throw"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'numFragments' must be > 0";if(n+l>t.fragments.length)throw"dicomParser.readEncapsulatedPixelDataFromFragments: parameter 'startFragment' + 'numFragments' < number of fragments";var d=new r.default(e.byteArrayParser,e.byteArray,t.dataOffset),c=(0,i.default)(d);if("xfffee000"!==c.tag)throw"dicomParser.readEncapsulatedPixelData: missing basic offset table xfffee000";d.seek(c.length);var f=d.position;if(1===l)return(0,o.default)(d.byteArray,f+u[n].offset+8,u[n].length);for(var h=s(u,n,l),m=(0,a.default)(d.byteArray,h),v=0,g=n;g<n+l;g++)for(var p=f+u[g].offset+8,b=0;b<u[g].length;b++)m[v++]=d.byteArray[p++];return m};var a=l(n(22)),r=l(n(12)),i=l(n(13)),o=l(n(11));function l(e){return e&&e.__esModule?e:{default:e}}var s=function(e,t,n){for(var a=0,r=t;r<t+n;r++)a+=e[r].length;return a}},function(e,t,n){"use strict";(function(t,a,r){var i=n(10);function o(e){var t=this;this.next=null,this.entry=null,this.finish=function(){!function(e,t,n){var a=e.entry;for(e.entry=null;a;){var r=a.callback;t.pendingcb--,r(void 0),a=a.next}t.corkedRequestsFree?t.corkedRequestsFree.next=e:t.corkedRequestsFree=e}(t,e)}}e.exports=b;var l,s=!t.browser&&["v0.10","v0.9."].indexOf(t.version.slice(0,5))>-1?a:i.nextTick;b.WritableState=p;var u=n(6);u.inherits=n(5);var d,c={deprecate:n(61)},f=n(34),h=n(9).Buffer,m=r.Uint8Array||function(){},v=n(33);function g(){}function p(e,t){l=l||n(2),e=e||{};var a=t instanceof l;this.objectMode=!!e.objectMode,a&&(this.objectMode=this.objectMode||!!e.writableObjectMode);var r=e.highWaterMark,u=e.writableHighWaterMark,d=this.objectMode?16:16384;this.highWaterMark=r||0===r?r:a&&(u||0===u)?u:d,this.highWaterMark=Math.floor(this.highWaterMark),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var c=!1===e.decodeStrings;this.decodeStrings=!c,this.defaultEncoding=e.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(e){!function(e,t){var n=e._writableState,a=n.sync,r=n.writecb;if(function(e){e.writing=!1,e.writecb=null,e.length-=e.writelen,e.writelen=0}(n),t)!function(e,t,n,a,r){--t.pendingcb,n?(i.nextTick(r,a),i.nextTick(T,e,t),e._writableState.errorEmitted=!0,e.emit("error",a)):(r(a),e._writableState.errorEmitted=!0,e.emit("error",a),T(e,t))}(e,n,a,t,r);else{var o=E(n);o||n.corked||n.bufferProcessing||!n.bufferedRequest||_(e,n),a?s(w,e,n,o,r):w(e,n,o,r)}}(t,e)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.bufferedRequestCount=0,this.corkedRequestsFree=new o(this)}function b(e){if(l=l||n(2),!(d.call(b,this)||this instanceof l))return new b(e);this._writableState=new p(e,this),this.writable=!0,e&&("function"==typeof e.write&&(this._write=e.write),"function"==typeof e.writev&&(this._writev=e.writev),"function"==typeof e.destroy&&(this._destroy=e.destroy),"function"==typeof e.final&&(this._final=e.final)),f.call(this)}function y(e,t,n,a,r,i,o){t.writelen=a,t.writecb=o,t.writing=!0,t.sync=!0,n?e._writev(r,t.onwrite):e._write(r,i,t.onwrite),t.sync=!1}function w(e,t,n,a){n||function(e,t){0===t.length&&t.needDrain&&(t.needDrain=!1,e.emit("drain"))}(e,t),t.pendingcb--,a(),T(e,t)}function _(e,t){t.bufferProcessing=!0;var n=t.bufferedRequest;if(e._writev&&n&&n.next){var a=t.bufferedRequestCount,r=new Array(a),i=t.corkedRequestsFree;i.entry=n;for(var l=0,s=!0;n;)r[l]=n,n.isBuf||(s=!1),n=n.next,l+=1;r.allBuffers=s,y(e,t,!0,t.length,r,"",i.finish),t.pendingcb++,t.lastBufferedRequest=null,i.next?(t.corkedRequestsFree=i.next,i.next=null):t.corkedRequestsFree=new o(t),t.bufferedRequestCount=0}else{for(;n;){var u=n.chunk,d=n.encoding,c=n.callback;if(y(e,t,!1,t.objectMode?1:u.length,u,d,c),n=n.next,t.bufferedRequestCount--,t.writing)break}null===n&&(t.lastBufferedRequest=null)}t.bufferedRequest=n,t.bufferProcessing=!1}function E(e){return e.ending&&0===e.length&&null===e.bufferedRequest&&!e.finished&&!e.writing}function x(e,t){e._final(function(n){t.pendingcb--,n&&e.emit("error",n),t.prefinished=!0,e.emit("prefinish"),T(e,t)})}function T(e,t){var n=E(t);return n&&(function(e,t){t.prefinished||t.finalCalled||("function"==typeof e._final?(t.pendingcb++,t.finalCalled=!0,i.nextTick(x,e,t)):(t.prefinished=!0,e.emit("prefinish")))}(e,t),0===t.pendingcb&&(t.finished=!0,e.emit("finish"))),n}u.inherits(b,f),p.prototype.getBuffer=function(){for(var e=this.bufferedRequest,t=[];e;)t.push(e),e=e.next;return t},function(){try{Object.defineProperty(p.prototype,"buffer",{get:c.deprecate(function(){return this.getBuffer()},"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.","DEP0003")})}catch(e){}}(),"function"==typeof Symbol&&Symbol.hasInstance&&"function"==typeof Function.prototype[Symbol.hasInstance]?(d=Function.prototype[Symbol.hasInstance],Object.defineProperty(b,Symbol.hasInstance,{value:function(e){return!!d.call(this,e)||this===b&&e&&e._writableState instanceof p}})):d=function(e){return e instanceof this},b.prototype.pipe=function(){this.emit("error",new Error("Cannot pipe, not readable"))},b.prototype.write=function(e,t,n){var a,r=this._writableState,o=!1,l=!r.objectMode&&(a=e,h.isBuffer(a)||a instanceof m);return l&&!h.isBuffer(e)&&(e=function(e){return h.from(e)}(e)),"function"==typeof t&&(n=t,t=null),l?t="buffer":t||(t=r.defaultEncoding),"function"!=typeof n&&(n=g),r.ended?function(e,t){var n=new Error("write after end");e.emit("error",n),i.nextTick(t,n)}(this,n):(l||function(e,t,n,a){var r=!0,o=!1;return null===n?o=new TypeError("May not write null values to stream"):"string"==typeof n||void 0===n||t.objectMode||(o=new TypeError("Invalid non-string/buffer chunk")),o&&(e.emit("error",o),i.nextTick(a,o),r=!1),r}(this,r,e,n))&&(r.pendingcb++,o=function(e,t,n,a,r,i){if(!n){var o=function(e,t,n){return e.objectMode||!1===e.decodeStrings||"string"!=typeof t||(t=h.from(t,n)),t}(t,a,r);a!==o&&(n=!0,r="buffer",a=o)}var l=t.objectMode?1:a.length;t.length+=l;var s=t.length<t.highWaterMark;if(s||(t.needDrain=!0),t.writing||t.corked){var u=t.lastBufferedRequest;t.lastBufferedRequest={chunk:a,encoding:r,isBuf:n,callback:i,next:null},u?u.next=t.lastBufferedRequest:t.bufferedRequest=t.lastBufferedRequest,t.bufferedRequestCount+=1}else y(e,t,!1,l,a,r,i);return s}(this,r,l,e,t,n)),o},b.prototype.cork=function(){this._writableState.corked++},b.prototype.uncork=function(){var e=this._writableState;e.corked&&(e.corked--,e.writing||e.corked||e.finished||e.bufferProcessing||!e.bufferedRequest||_(this,e))},b.prototype.setDefaultEncoding=function(e){if("string"==typeof e&&(e=e.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((e+"").toLowerCase())>-1))throw new TypeError("Unknown encoding: "+e);return this._writableState.defaultEncoding=e,this},b.prototype._write=function(e,t,n){n(new Error("_write() is not implemented"))},b.prototype._writev=null,b.prototype.end=function(e,t,n){var a=this._writableState;"function"==typeof e?(n=e,e=null,t=null):"function"==typeof t&&(n=t,t=null),null!==e&&void 0!==e&&this.write(e,t),a.corked&&(a.corked=1,this.uncork()),a.ending||a.finished||function(e,t,n){t.ending=!0,T(e,t),n&&(t.finished?i.nextTick(n):e.once("finish",n)),t.ended=!0,e.writable=!1}(this,a,n)},Object.defineProperty(b.prototype,"destroyed",{get:function(){return void 0!==this._writableState&&this._writableState.destroyed},set:function(e){this._writableState&&(this._writableState.destroyed=e)}}),b.prototype.destroy=v.destroy,b.prototype._undestroy=v.undestroy,b.prototype._destroy=function(e,t){this.end(),t(e)}}).call(this,n(3),n(63).setImmediate,n(0))},function(e,t,n){(t=e.exports=n(35)).Stream=t,t.Readable=t,t.Writable=n(18),t.Duplex=n(2),t.Transform=n(31),t.PassThrough=n(60)},function(e,t){function n(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function a(e){return"function"==typeof e}function r(e){return"object"==typeof e&&null!==e}function i(e){return void 0===e}e.exports=n,n.EventEmitter=n,n.prototype._events=void 0,n.prototype._maxListeners=void 0,n.defaultMaxListeners=10,n.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||isNaN(e))throw TypeError("n must be a positive number");return this._maxListeners=e,this},n.prototype.emit=function(e){var t,n,o,l,s,u;if(this._events||(this._events={}),"error"===e&&(!this._events.error||r(this._events.error)&&!this._events.error.length)){if((t=arguments[1])instanceof Error)throw t;var d=new Error('Uncaught, unspecified "error" event. ('+t+")");throw d.context=t,d}if(i(n=this._events[e]))return!1;if(a(n))switch(arguments.length){case 1:n.call(this);break;case 2:n.call(this,arguments[1]);break;case 3:n.call(this,arguments[1],arguments[2]);break;default:l=Array.prototype.slice.call(arguments,1),n.apply(this,l)}else if(r(n))for(l=Array.prototype.slice.call(arguments,1),o=(u=n.slice()).length,s=0;s<o;s++)u[s].apply(this,l);return!0},n.prototype.addListener=function(e,t){var o;if(!a(t))throw TypeError("listener must be a function");return this._events||(this._events={}),this._events.newListener&&this.emit("newListener",e,a(t.listener)?t.listener:t),this._events[e]?r(this._events[e])?this._events[e].push(t):this._events[e]=[this._events[e],t]:this._events[e]=t,r(this._events[e])&&!this._events[e].warned&&(o=i(this._maxListeners)?n.defaultMaxListeners:this._maxListeners)&&o>0&&this._events[e].length>o&&(this._events[e].warned=!0,console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[e].length),"function"==typeof console.trace&&console.trace()),this},n.prototype.on=n.prototype.addListener,n.prototype.once=function(e,t){if(!a(t))throw TypeError("listener must be a function");var n=!1;function r(){this.removeListener(e,r),n||(n=!0,t.apply(this,arguments))}return r.listener=t,this.on(e,r),this},n.prototype.removeListener=function(e,t){var n,i,o,l;if(!a(t))throw TypeError("listener must be a function");if(!this._events||!this._events[e])return this;if(o=(n=this._events[e]).length,i=-1,n===t||a(n.listener)&&n.listener===t)delete this._events[e],this._events.removeListener&&this.emit("removeListener",e,t);else if(r(n)){for(l=o;l-- >0;)if(n[l]===t||n[l].listener&&n[l].listener===t){i=l;break}if(i<0)return this;1===n.length?(n.length=0,delete this._events[e]):n.splice(i,1),this._events.removeListener&&this.emit("removeListener",e,t)}return this},n.prototype.removeAllListeners=function(e){var t,n;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[e]&&delete this._events[e],this;if(0===arguments.length){for(t in this._events)"removeListener"!==t&&this.removeAllListeners(t);return this.removeAllListeners("removeListener"),this._events={},this}if(a(n=this._events[e]))this.removeListener(e,n);else if(n)for(;n.length;)this.removeListener(e,n[n.length-1]);return delete this._events[e],this},n.prototype.listeners=function(e){return this._events&&this._events[e]?a(this._events[e])?[this._events[e]]:this._events[e].slice():[]},n.prototype.listenerCount=function(e){if(this._events){var t=this._events[e];if(a(t))return 1;if(t)return t.length}return 0},n.listenerCount=function(e,t){return e.listenerCount(t)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={readUint16:function(e,t){if(t<0)throw"littleEndianByteArrayParser.readUint16: position cannot be less than 0";if(t+2>e.length)throw"littleEndianByteArrayParser.readUint16: attempt to read past end of buffer";return e[t]+256*e[t+1]},readInt16:function(e,t){if(t<0)throw"littleEndianByteArrayParser.readInt16: position cannot be less than 0";if(t+2>e.length)throw"littleEndianByteArrayParser.readInt16: attempt to read past end of buffer";var n=e[t]+(e[t+1]<<8);return 32768&n&&(n=n-65535-1),n},readUint32:function(e,t){if(t<0)throw"littleEndianByteArrayParser.readUint32: position cannot be less than 0";if(t+4>e.length)throw"littleEndianByteArrayParser.readUint32: attempt to read past end of buffer";return e[t]+256*e[t+1]+256*e[t+2]*256+256*e[t+3]*256*256},readInt32:function(e,t){if(t<0)throw"littleEndianByteArrayParser.readInt32: position cannot be less than 0";if(t+4>e.length)throw"littleEndianByteArrayParser.readInt32: attempt to read past end of buffer";return e[t]+(e[t+1]<<8)+(e[t+2]<<16)+(e[t+3]<<24)},readFloat:function(e,t){if(t<0)throw"littleEndianByteArrayParser.readFloat: position cannot be less than 0";if(t+4>e.length)throw"littleEndianByteArrayParser.readFloat: attempt to read past end of buffer";var n=new Uint8Array(4);return n[0]=e[t],n[1]=e[t+1],n[2]=e[t+2],n[3]=e[t+3],new Float32Array(n.buffer)[0]},readDouble:function(e,t){if(t<0)throw"littleEndianByteArrayParser.readDouble: position cannot be less than 0";if(t+8>e.length)throw"littleEndianByteArrayParser.readDouble: attempt to read past end of buffer";var n=new Uint8Array(8);return n[0]=e[t],n[1]=e[t+1],n[2]=e[t+2],n[3]=e[t+3],n[4]=e[t+4],n[5]=e[t+5],n[6]=e[t+6],n[7]=e[t+7],new Float64Array(n.buffer)[0]}}},function(e,t,n){"use strict";(function(e){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(t,n){if(void 0!==e&&t instanceof e)return e.alloc(n);if(t instanceof Uint8Array)return new Uint8Array(n);throw"dicomParser.alloc: unknown type for byteArray"}}).call(this,n(1).Buffer)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){if(void 0===e)throw"dicomParser.readDicomElementImplicit: missing required parameter 'byteStream'";var o={tag:(0,i.default)(e),length:e.readUint32(),dataOffset:e.position};return 4294967295===o.length&&(o.hadUndefinedLength=!0),o.tag===t?o:l(o,e,n)?((0,r.default)(e,o),o):o.hadUndefinedLength?((0,a.default)(e,o),o):(e.seek(o.length),o)};var a=o(n(24)),r=o(n(39)),i=o(n(4));function o(e){return e&&e.__esModule?e:{default:e}}var l=function(e,t,n){if(void 0!==n)return"SQ"===n(e.tag);if(t.position+4<=t.byteArray.length){var a=(0,i.default)(t);return t.seek(-4),"xfffee000"===a||"xfffee0dd"===a}return t.warnings.push("eof encountered before finding sequence item tag or sequence delimiter tag in peeking to determine VR"),!1}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(void 0===e)throw"dicomParser.readDicomElementImplicit: missing required parameter 'byteStream'";for(var n=e.byteArray.length-8;e.position<=n;){var a=e.readUint16();if(65534===a){var r=e.readUint16();if(57357===r){var i=e.readUint32();return 0!==i&&e.warnings("encountered non zero length following item delimiter at position "+(e.position-4)+" while reading element of undefined length with tag "+t.tag),void(t.length=e.position-t.dataOffset)}}}t.length=e.byteArray.length-t.dataOffset,e.seek(e.byteArray.length-e.position)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a={AE:!0,AS:!0,AT:!1,CS:!0,DA:!0,DS:!0,DT:!0,FL:!1,FD:!1,IS:!0,LO:!0,LT:!0,OB:!1,OD:!1,OF:!1,OW:!1,PN:!0,SH:!0,SL:!1,SQ:!1,SS:!1,ST:!0,TM:!0,UI:!0,UL:!1,UN:void 0,UR:!0,US:!1,UT:!0};t.isStringVr=function(e){return a[e]},t.isPrivateTag=function(e){return parseInt(e[4],10)%2==1},t.parsePN=function(e){if(void 0!==e){var t=e.split("^");return{familyName:t[0],givenName:t[1],middleName:t[2],prefix:t[3],suffix:t[4]}}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,a,r){if(a=a||t.basicOffsetTable,r=r||t.fragments,void 0===e)throw"dicomParser.readEncapsulatedImageFrame: missing required parameter 'dataSet'";if(void 0===t)throw"dicomParser.readEncapsulatedImageFrame: missing required parameter 'pixelDataElement'";if(void 0===n)throw"dicomParser.readEncapsulatedImageFrame: missing required parameter 'frameIndex'";if(void 0===a)throw"dicomParser.readEncapsulatedImageFrame: parameter 'pixelDataElement' does not have basicOffsetTable";if("x7fe00010"!==t.tag)throw"dicomParser.readEncapsulatedImageFrame: parameter 'pixelDataElement' refers to non pixel data tag (expected tag = x7fe00010)";if(!0!==t.encapsulatedPixelData)throw"dicomParser.readEncapsulatedImageFrame: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data";if(!0!==t.hadUndefinedLength)throw"dicomParser.readEncapsulatedImageFrame: parameter 'pixelDataElement' refers to pixel data element that does not have undefined length";if(void 0===t.fragments)throw"dicomParser.readEncapsulatedImageFrame: parameter 'pixelDataElement' refers to pixel data element that does not have fragments";if(0===a.length)throw"dicomParser.readEncapsulatedImageFrame: basicOffsetTable has zero entries";if(n<0)throw"dicomParser.readEncapsulatedImageFrame: parameter 'frameIndex' must be >= 0";if(n>=a.length)throw"dicomParser.readEncapsulatedImageFrame: parameter 'frameIndex' must be < basicOffsetTable.length";var s=a[n],u=o(r,s);if(void 0===u)throw"dicomParser.readEncapsulatedImageFrame: unable to find fragment that matches basic offset table entry";var d=l(n,a,r,u);return(0,i.default)(e,t,u,d,r)};var a,r=n(17),i=(a=r)&&a.__esModule?a:{default:a},o=function(e,t){for(var n=0;n<e.length;n++)if(e[n].offset===t)return n},l=function(e,t,n,a){if(e===t.length-1)return n.length-a;for(var r=t[e+1],i=a+1;i<n.length;i++)if(n[i].offset===r)return i-a;throw"dicomParser.calculateNumberOfFragmentsForFrame: could not find fragment with offset matching basic offset table"}},function(e,t,n){"use strict";var a=function(){for(var e,t=[],n=0;n<256;n++){e=n;for(var a=0;a<8;a++)e=1&e?3988292384^e>>>1:e>>>1;t[n]=e}return t}();e.exports=function(e,t,n,r){var i=a,o=r+n;e^=-1;for(var l=r;l<o;l++)e=e>>>8^i[255&(e^t[l])];return-1^e}},function(e,t,n){"use strict";e.exports=function(e,t,n,a){for(var r=65535&e|0,i=e>>>16&65535|0,o=0;0!==n;){n-=o=n>2e3?2e3:n;do{i=i+(r=r+t[a++]|0)|0}while(--o);r%=65521,i%=65521}return r|i<<16|0}},function(e,t,n){(function(e,a){var r=/%[sdj%]/g;t.format=function(e){if(!p(e)){for(var t=[],n=0;n<arguments.length;n++)t.push(l(arguments[n]));return t.join(" ")}n=1;for(var a=arguments,i=a.length,o=String(e).replace(r,function(e){if("%%"===e)return"%";if(n>=i)return e;switch(e){case"%s":return String(a[n++]);case"%d":return Number(a[n++]);case"%j":try{return JSON.stringify(a[n++])}catch(e){return"[Circular]"}default:return e}}),s=a[n];n<i;s=a[++n])v(s)||!w(s)?o+=" "+s:o+=" "+l(s);return o},t.deprecate=function(n,r){if(b(e.process))return function(){return t.deprecate(n,r).apply(this,arguments)};if(!0===a.noDeprecation)return n;var i=!1;return function(){if(!i){if(a.throwDeprecation)throw new Error(r);a.traceDeprecation?console.trace(r):console.error(r),i=!0}return n.apply(this,arguments)}};var i,o={};function l(e,n){var a={seen:[],stylize:u};return arguments.length>=3&&(a.depth=arguments[2]),arguments.length>=4&&(a.colors=arguments[3]),m(n)?a.showHidden=n:n&&t._extend(a,n),b(a.showHidden)&&(a.showHidden=!1),b(a.depth)&&(a.depth=2),b(a.colors)&&(a.colors=!1),b(a.customInspect)&&(a.customInspect=!0),a.colors&&(a.stylize=s),d(a,e,a.depth)}function s(e,t){var n=l.styles[t];return n?"["+l.colors[n][0]+"m"+e+"["+l.colors[n][1]+"m":e}function u(e,t){return e}function d(e,n,a){if(e.customInspect&&n&&x(n.inspect)&&n.inspect!==t.inspect&&(!n.constructor||n.constructor.prototype!==n)){var r=n.inspect(a,e);return p(r)||(r=d(e,r,a)),r}var i=function(e,t){if(b(t))return e.stylize("undefined","undefined");if(p(t)){var n="'"+JSON.stringify(t).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(n,"string")}return g(t)?e.stylize(""+t,"number"):m(t)?e.stylize(""+t,"boolean"):v(t)?e.stylize("null","null"):void 0}(e,n);if(i)return i;var o=Object.keys(n),l=function(e){var t={};return e.forEach(function(e,n){t[e]=!0}),t}(o);if(e.showHidden&&(o=Object.getOwnPropertyNames(n)),E(n)&&(o.indexOf("message")>=0||o.indexOf("description")>=0))return c(n);if(0===o.length){if(x(n)){var s=n.name?": "+n.name:"";return e.stylize("[Function"+s+"]","special")}if(y(n))return e.stylize(RegExp.prototype.toString.call(n),"regexp");if(_(n))return e.stylize(Date.prototype.toString.call(n),"date");if(E(n))return c(n)}var u,w="",T=!1,P=["{","}"];return h(n)&&(T=!0,P=["[","]"]),x(n)&&(w=" [Function"+(n.name?": "+n.name:"")+"]"),y(n)&&(w=" "+RegExp.prototype.toString.call(n)),_(n)&&(w=" "+Date.prototype.toUTCString.call(n)),E(n)&&(w=" "+c(n)),0!==o.length||T&&0!=n.length?a<0?y(n)?e.stylize(RegExp.prototype.toString.call(n),"regexp"):e.stylize("[Object]","special"):(e.seen.push(n),u=T?function(e,t,n,a,r){for(var i=[],o=0,l=t.length;o<l;++o)S(t,String(o))?i.push(f(e,t,n,a,String(o),!0)):i.push("");return r.forEach(function(r){r.match(/^\d+$/)||i.push(f(e,t,n,a,r,!0))}),i}(e,n,a,l,o):o.map(function(t){return f(e,n,a,l,t,T)}),e.seen.pop(),function(e,t,n){return e.reduce(function(e,t){return t.indexOf("\n"),e+t.replace(/\u001b\[\d\d?m/g,"").length+1},0)>60?n[0]+(""===t?"":t+"\n ")+" "+e.join(",\n  ")+" "+n[1]:n[0]+t+" "+e.join(", ")+" "+n[1]}(u,w,P)):P[0]+w+P[1]}function c(e){return"["+Error.prototype.toString.call(e)+"]"}function f(e,t,n,a,r,i){var o,l,s;if((s=Object.getOwnPropertyDescriptor(t,r)||{value:t[r]}).get?l=s.set?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):s.set&&(l=e.stylize("[Setter]","special")),S(a,r)||(o="["+r+"]"),l||(e.seen.indexOf(s.value)<0?(l=v(n)?d(e,s.value,null):d(e,s.value,n-1)).indexOf("\n")>-1&&(l=i?l.split("\n").map(function(e){return"  "+e}).join("\n").substr(2):"\n"+l.split("\n").map(function(e){return"   "+e}).join("\n")):l=e.stylize("[Circular]","special")),b(o)){if(i&&r.match(/^\d+$/))return l;(o=JSON.stringify(""+r)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(o=o.substr(1,o.length-2),o=e.stylize(o,"name")):(o=o.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),o=e.stylize(o,"string"))}return o+": "+l}function h(e){return Array.isArray(e)}function m(e){return"boolean"==typeof e}function v(e){return null===e}function g(e){return"number"==typeof e}function p(e){return"string"==typeof e}function b(e){return void 0===e}function y(e){return w(e)&&"[object RegExp]"===T(e)}function w(e){return"object"==typeof e&&null!==e}function _(e){return w(e)&&"[object Date]"===T(e)}function E(e){return w(e)&&("[object Error]"===T(e)||e instanceof Error)}function x(e){return"function"==typeof e}function T(e){return Object.prototype.toString.call(e)}function P(e){return e<10?"0"+e.toString(10):e.toString(10)}t.debuglog=function(e){if(b(i)&&(i=a.env.NODE_DEBUG||""),e=e.toUpperCase(),!o[e])if(new RegExp("\\b"+e+"\\b","i").test(i)){var n=a.pid;o[e]=function(){var a=t.format.apply(t,arguments);console.error("%s %d: %s",e,n,a)}}else o[e]=function(){};return o[e]},t.inspect=l,l.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},l.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},t.isArray=h,t.isBoolean=m,t.isNull=v,t.isNullOrUndefined=function(e){return null==e},t.isNumber=g,t.isString=p,t.isSymbol=function(e){return"symbol"==typeof e},t.isUndefined=b,t.isRegExp=y,t.isObject=w,t.isDate=_,t.isError=E,t.isFunction=x,t.isPrimitive=function(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e||"symbol"==typeof e||void 0===e},t.isBuffer=n(54);var O=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function S(e,t){return Object.prototype.hasOwnProperty.call(e,t)}t.log=function(){var e,n;console.log("%s - %s",(e=new Date,n=[P(e.getHours()),P(e.getMinutes()),P(e.getSeconds())].join(":"),[e.getDate(),O[e.getMonth()],n].join(" ")),t.format.apply(t,arguments))},t.inherits=n(53),t._extend=function(e,t){if(!t||!w(t))return e;for(var n=Object.keys(t),a=n.length;a--;)e[n[a]]=t[n[a]];return e}}).call(this,n(0),n(3))},function(e,t,n){"use strict";(function(t){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
function a(e,t){if(e===t)return 0;for(var n=e.length,a=t.length,r=0,i=Math.min(n,a);r<i;++r)if(e[r]!==t[r]){n=e[r],a=t[r];break}return n<a?-1:a<n?1:0}function r(e){return t.Buffer&&"function"==typeof t.Buffer.isBuffer?t.Buffer.isBuffer(e):!(null==e||!e._isBuffer)}var i=n(29),o=Object.prototype.hasOwnProperty,l=Array.prototype.slice,s="foo"===function(){}.name;function u(e){return Object.prototype.toString.call(e)}function d(e){return!r(e)&&"function"==typeof t.ArrayBuffer&&("function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(e):!!e&&(e instanceof DataView||!!(e.buffer&&e.buffer instanceof ArrayBuffer)))}var c=e.exports=p,f=/\s*function\s+([^\(\s]*)\s*/;function h(e){if(i.isFunction(e)){if(s)return e.name;var t=e.toString().match(f);return t&&t[1]}}function m(e,t){return"string"==typeof e?e.length<t?e:e.slice(0,t):e}function v(e){if(s||!i.isFunction(e))return i.inspect(e);var t=h(e);return"[Function"+(t?": "+t:"")+"]"}function g(e,t,n,a,r){throw new c.AssertionError({message:n,actual:e,expected:t,operator:a,stackStartFunction:r})}function p(e,t){e||g(e,!0,t,"==",c.ok)}function b(e,t,n,o){if(e===t)return!0;if(r(e)&&r(t))return 0===a(e,t);if(i.isDate(e)&&i.isDate(t))return e.getTime()===t.getTime();if(i.isRegExp(e)&&i.isRegExp(t))return e.source===t.source&&e.global===t.global&&e.multiline===t.multiline&&e.lastIndex===t.lastIndex&&e.ignoreCase===t.ignoreCase;if(null!==e&&"object"==typeof e||null!==t&&"object"==typeof t){if(d(e)&&d(t)&&u(e)===u(t)&&!(e instanceof Float32Array||e instanceof Float64Array))return 0===a(new Uint8Array(e.buffer),new Uint8Array(t.buffer));if(r(e)!==r(t))return!1;var s=(o=o||{actual:[],expected:[]}).actual.indexOf(e);return-1!==s&&s===o.expected.indexOf(t)||(o.actual.push(e),o.expected.push(t),function(e,t,n,a){if(null===e||void 0===e||null===t||void 0===t)return!1;if(i.isPrimitive(e)||i.isPrimitive(t))return e===t;if(n&&Object.getPrototypeOf(e)!==Object.getPrototypeOf(t))return!1;var r=y(e),o=y(t);if(r&&!o||!r&&o)return!1;if(r)return e=l.call(e),t=l.call(t),b(e,t,n);var s,u,d=E(e),c=E(t);if(d.length!==c.length)return!1;for(d.sort(),c.sort(),u=d.length-1;u>=0;u--)if(d[u]!==c[u])return!1;for(u=d.length-1;u>=0;u--)if(s=d[u],!b(e[s],t[s],n,a))return!1;return!0}(e,t,n,o))}return n?e===t:e==t}function y(e){return"[object Arguments]"==Object.prototype.toString.call(e)}function w(e,t){if(!e||!t)return!1;if("[object RegExp]"==Object.prototype.toString.call(t))return t.test(e);try{if(e instanceof t)return!0}catch(e){}return!Error.isPrototypeOf(t)&&!0===t.call({},e)}function _(e,t,n,a){var r;if("function"!=typeof t)throw new TypeError('"block" argument must be a function');"string"==typeof n&&(a=n,n=null),r=function(e){var t;try{e()}catch(e){t=e}return t}(t),a=(n&&n.name?" ("+n.name+").":".")+(a?" "+a:"."),e&&!r&&g(r,n,"Missing expected exception"+a);var o="string"==typeof a,l=!e&&i.isError(r),s=!e&&r&&!n;if((l&&o&&w(r,n)||s)&&g(r,n,"Got unwanted exception"+a),e&&r&&n&&!w(r,n)||!e&&r)throw r}c.AssertionError=function(e){var t;this.name="AssertionError",this.actual=e.actual,this.expected=e.expected,this.operator=e.operator,e.message?(this.message=e.message,this.generatedMessage=!1):(this.message=m(v((t=this).actual),128)+" "+t.operator+" "+m(v(t.expected),128),this.generatedMessage=!0);var n=e.stackStartFunction||g;if(Error.captureStackTrace)Error.captureStackTrace(this,n);else{var a=new Error;if(a.stack){var r=a.stack,i=h(n),o=r.indexOf("\n"+i);if(o>=0){var l=r.indexOf("\n",o+1);r=r.substring(l+1)}this.stack=r}}},i.inherits(c.AssertionError,Error),c.fail=g,c.ok=p,c.equal=function(e,t,n){e!=t&&g(e,t,n,"==",c.equal)},c.notEqual=function(e,t,n){e==t&&g(e,t,n,"!=",c.notEqual)},c.deepEqual=function(e,t,n){b(e,t,!1)||g(e,t,n,"deepEqual",c.deepEqual)},c.deepStrictEqual=function(e,t,n){b(e,t,!0)||g(e,t,n,"deepStrictEqual",c.deepStrictEqual)},c.notDeepEqual=function(e,t,n){b(e,t,!1)&&g(e,t,n,"notDeepEqual",c.notDeepEqual)},c.notDeepStrictEqual=function e(t,n,a){b(t,n,!0)&&g(t,n,a,"notDeepStrictEqual",e)},c.strictEqual=function(e,t,n){e!==t&&g(e,t,n,"===",c.strictEqual)},c.notStrictEqual=function(e,t,n){e===t&&g(e,t,n,"!==",c.notStrictEqual)},c.throws=function(e,t,n){_(!0,e,t,n)},c.doesNotThrow=function(e,t,n){_(!1,e,t,n)},c.ifError=function(e){if(e)throw e};var E=Object.keys||function(e){var t=[];for(var n in e)o.call(e,n)&&t.push(n);return t}}).call(this,n(0))},function(e,t,n){"use strict";e.exports=i;var a=n(2),r=n(6);function i(e){if(!(this instanceof i))return new i(e);a.call(this,e),this._transformState={afterTransform:function(e,t){var n=this._transformState;n.transforming=!1;var a=n.writecb;if(!a)return this.emit("error",new Error("write callback called multiple times"));n.writechunk=null,n.writecb=null,null!=t&&this.push(t),a(e);var r=this._readableState;r.reading=!1,(r.needReadable||r.length<r.highWaterMark)&&this._read(r.highWaterMark)}.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,e&&("function"==typeof e.transform&&(this._transform=e.transform),"function"==typeof e.flush&&(this._flush=e.flush)),this.on("prefinish",o)}function o(){var e=this;"function"==typeof this._flush?this._flush(function(t,n){l(e,t,n)}):l(this,null,null)}function l(e,t,n){if(t)return e.emit("error",t);if(null!=n&&e.push(n),e._writableState.length)throw new Error("Calling transform done when ws.length != 0");if(e._transformState.transforming)throw new Error("Calling transform done when still transforming");return e.push(null)}r.inherits=n(5),r.inherits(i,a),i.prototype.push=function(e,t){return this._transformState.needTransform=!1,a.prototype.push.call(this,e,t)},i.prototype._transform=function(e,t,n){throw new Error("_transform() is not implemented")},i.prototype._write=function(e,t,n){var a=this._transformState;if(a.writecb=n,a.writechunk=e,a.writeencoding=t,!a.transforming){var r=this._readableState;(a.needTransform||r.needReadable||r.length<r.highWaterMark)&&this._read(r.highWaterMark)}},i.prototype._read=function(e){var t=this._transformState;null!==t.writechunk&&t.writecb&&!t.transforming?(t.transforming=!0,this._transform(t.writechunk,t.writeencoding,t.afterTransform)):t.needTransform=!0},i.prototype._destroy=function(e,t){var n=this;a.prototype._destroy.call(this,e,function(e){t(e),n.emit("close")})}},function(e,t,n){"use strict";var a=n(9).Buffer,r=a.isEncoding||function(e){switch((e=""+e)&&e.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function i(e){var t;switch(this.encoding=function(e){var t=function(e){if(!e)return"utf8";for(var t;;)switch(e){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return e;default:if(t)return;e=(""+e).toLowerCase(),t=!0}}(e);if("string"!=typeof t&&(a.isEncoding===r||!r(e)))throw new Error("Unknown encoding: "+e);return t||e}(e),this.encoding){case"utf16le":this.text=s,this.end=u,t=4;break;case"utf8":this.fillLast=l,t=4;break;case"base64":this.text=d,this.end=c,t=3;break;default:return this.write=f,void(this.end=h)}this.lastNeed=0,this.lastTotal=0,this.lastChar=a.allocUnsafe(t)}function o(e){return e<=127?0:e>>5==6?2:e>>4==14?3:e>>3==30?4:-1}function l(e){var t=this.lastTotal-this.lastNeed,n=function(e,t,n){if(128!=(192&t[0]))return e.lastNeed=0,"�".repeat(n);if(e.lastNeed>1&&t.length>1){if(128!=(192&t[1]))return e.lastNeed=1,"�".repeat(n+1);if(e.lastNeed>2&&t.length>2&&128!=(192&t[2]))return e.lastNeed=2,"�".repeat(n+2)}}(this,e,t);return void 0!==n?n:this.lastNeed<=e.length?(e.copy(this.lastChar,t,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(e.copy(this.lastChar,t,0,e.length),void(this.lastNeed-=e.length))}function s(e,t){if((e.length-t)%2==0){var n=e.toString("utf16le",t);if(n){var a=n.charCodeAt(n.length-1);if(a>=55296&&a<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1],n.slice(0,-1)}return n}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=e[e.length-1],e.toString("utf16le",t,e.length-1)}function u(e){var t=e&&e.length?this.write(e):"";if(this.lastNeed){var n=this.lastTotal-this.lastNeed;return t+this.lastChar.toString("utf16le",0,n)}return t}function d(e,t){var n=(e.length-t)%3;return 0===n?e.toString("base64",t):(this.lastNeed=3-n,this.lastTotal=3,1===n?this.lastChar[0]=e[e.length-1]:(this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1]),e.toString("base64",t,e.length-n))}function c(e){var t=e&&e.length?this.write(e):"";return this.lastNeed?t+this.lastChar.toString("base64",0,3-this.lastNeed):t}function f(e){return e.toString(this.encoding)}function h(e){return e&&e.length?this.write(e):""}t.StringDecoder=i,i.prototype.write=function(e){if(0===e.length)return"";var t,n;if(this.lastNeed){if(void 0===(t=this.fillLast(e)))return"";n=this.lastNeed,this.lastNeed=0}else n=0;return n<e.length?t?t+this.text(e,n):this.text(e,n):t||""},i.prototype.end=function(e){var t=e&&e.length?this.write(e):"";return this.lastNeed?t+"�".repeat(this.lastTotal-this.lastNeed):t},i.prototype.text=function(e,t){var n=function(e,t,n){var a=t.length-1;if(a<n)return 0;var r=o(t[a]);return r>=0?(r>0&&(e.lastNeed=r-1),r):--a<n?0:(r=o(t[a]))>=0?(r>0&&(e.lastNeed=r-2),r):--a<n?0:(r=o(t[a]))>=0?(r>0&&(2===r?r=0:e.lastNeed=r-3),r):0}(this,e,t);if(!this.lastNeed)return e.toString("utf8",t);this.lastTotal=n;var a=e.length-(n-this.lastNeed);return e.copy(this.lastChar,0,a),e.toString("utf8",t,a)},i.prototype.fillLast=function(e){if(this.lastNeed<=e.length)return e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,e.length),this.lastNeed-=e.length}},function(e,t,n){"use strict";var a=n(10);function r(e,t){e.emit("error",t)}e.exports={destroy:function(e,t){var n=this,i=this._readableState&&this._readableState.destroyed,o=this._writableState&&this._writableState.destroyed;return i||o?(t?t(e):!e||this._writableState&&this._writableState.errorEmitted||a.nextTick(r,this,e),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(e||null,function(e){!t&&e?(a.nextTick(r,n,e),n._writableState&&(n._writableState.errorEmitted=!0)):t&&t(e)}),this)},undestroy:function(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)}}},function(e,t,n){e.exports=n(20).EventEmitter},function(e,t,n){"use strict";(function(t,a){var r=n(10);e.exports=y;var i,o=n(38);y.ReadableState=b,n(20).EventEmitter;var l=function(e,t){return e.listeners(t).length},s=n(34),u=n(9).Buffer,d=t.Uint8Array||function(){},c=n(6);c.inherits=n(5);var f=n(66),h=void 0;h=f&&f.debuglog?f.debuglog("stream"):function(){};var m,v=n(65),g=n(33);c.inherits(y,s);var p=["error","close","destroy","pause","resume"];function b(e,t){i=i||n(2),e=e||{};var a=t instanceof i;this.objectMode=!!e.objectMode,a&&(this.objectMode=this.objectMode||!!e.readableObjectMode);var r=e.highWaterMark,o=e.readableHighWaterMark,l=this.objectMode?16:16384;this.highWaterMark=r||0===r?r:a&&(o||0===o)?o:l,this.highWaterMark=Math.floor(this.highWaterMark),this.buffer=new v,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.destroyed=!1,this.defaultEncoding=e.defaultEncoding||"utf8",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,e.encoding&&(m||(m=n(32).StringDecoder),this.decoder=new m(e.encoding),this.encoding=e.encoding)}function y(e){if(i=i||n(2),!(this instanceof y))return new y(e);this._readableState=new b(e,this),this.readable=!0,e&&("function"==typeof e.read&&(this._read=e.read),"function"==typeof e.destroy&&(this._destroy=e.destroy)),s.call(this)}function w(e,t,n,a,r){var i,o=e._readableState;return null===t?(o.reading=!1,function(e,t){if(!t.ended){if(t.decoder){var n=t.decoder.end();n&&n.length&&(t.buffer.push(n),t.length+=t.objectMode?1:n.length)}t.ended=!0,T(e)}}(e,o)):(r||(i=function(e,t){var n,a;return a=t,u.isBuffer(a)||a instanceof d||"string"==typeof t||void 0===t||e.objectMode||(n=new TypeError("Invalid non-string/buffer chunk")),n}(o,t)),i?e.emit("error",i):o.objectMode||t&&t.length>0?("string"==typeof t||o.objectMode||Object.getPrototypeOf(t)===u.prototype||(t=function(e){return u.from(e)}(t)),a?o.endEmitted?e.emit("error",new Error("stream.unshift() after end event")):_(e,o,t,!0):o.ended?e.emit("error",new Error("stream.push() after EOF")):(o.reading=!1,o.decoder&&!n?(t=o.decoder.write(t),o.objectMode||0!==t.length?_(e,o,t,!1):O(e,o)):_(e,o,t,!1))):a||(o.reading=!1)),function(e){return!e.ended&&(e.needReadable||e.length<e.highWaterMark||0===e.length)}(o)}function _(e,t,n,a){t.flowing&&0===t.length&&!t.sync?(e.emit("data",n),e.read(0)):(t.length+=t.objectMode?1:n.length,a?t.buffer.unshift(n):t.buffer.push(n),t.needReadable&&T(e)),O(e,t)}Object.defineProperty(y.prototype,"destroyed",{get:function(){return void 0!==this._readableState&&this._readableState.destroyed},set:function(e){this._readableState&&(this._readableState.destroyed=e)}}),y.prototype.destroy=g.destroy,y.prototype._undestroy=g.undestroy,y.prototype._destroy=function(e,t){this.push(null),t(e)},y.prototype.push=function(e,t){var n,a=this._readableState;return a.objectMode?n=!0:"string"==typeof e&&((t=t||a.defaultEncoding)!==a.encoding&&(e=u.from(e,t),t=""),n=!0),w(this,e,t,!1,n)},y.prototype.unshift=function(e){return w(this,e,null,!0,!1)},y.prototype.isPaused=function(){return!1===this._readableState.flowing},y.prototype.setEncoding=function(e){return m||(m=n(32).StringDecoder),this._readableState.decoder=new m(e),this._readableState.encoding=e,this};var E=8388608;function x(e,t){return e<=0||0===t.length&&t.ended?0:t.objectMode?1:e!=e?t.flowing&&t.length?t.buffer.head.data.length:t.length:(e>t.highWaterMark&&(t.highWaterMark=function(e){return e>=E?e=E:(e--,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,e|=e>>>16,e++),e}(e)),e<=t.length?e:t.ended?t.length:(t.needReadable=!0,0))}function T(e){var t=e._readableState;t.needReadable=!1,t.emittedReadable||(h("emitReadable",t.flowing),t.emittedReadable=!0,t.sync?r.nextTick(P,e):P(e))}function P(e){h("emit readable"),e.emit("readable"),C(e)}function O(e,t){t.readingMore||(t.readingMore=!0,r.nextTick(S,e,t))}function S(e,t){for(var n=t.length;!t.reading&&!t.flowing&&!t.ended&&t.length<t.highWaterMark&&(h("maybeReadMore read 0"),e.read(0),n!==t.length);)n=t.length;t.readingMore=!1}function I(e){h("readable nexttick read 0"),e.read(0)}function M(e,t){t.reading||(h("resume read 0"),e.read(0)),t.resumeScheduled=!1,t.awaitDrain=0,e.emit("resume"),C(e),t.flowing&&!t.reading&&e.read(0)}function C(e){var t=e._readableState;for(h("flow",t.flowing);t.flowing&&null!==e.read(););}function L(e,t){return 0===t.length?null:(t.objectMode?n=t.buffer.shift():!e||e>=t.length?(n=t.decoder?t.buffer.join(""):1===t.buffer.length?t.buffer.head.data:t.buffer.concat(t.length),t.buffer.clear()):n=function(e,t,n){var a;return e<t.head.data.length?(a=t.head.data.slice(0,e),t.head.data=t.head.data.slice(e)):a=e===t.head.data.length?t.shift():n?function(e,t){var n=t.head,a=1,r=n.data;for(e-=r.length;n=n.next;){var i=n.data,o=e>i.length?i.length:e;if(o===i.length?r+=i:r+=i.slice(0,e),0==(e-=o)){o===i.length?(++a,n.next?t.head=n.next:t.head=t.tail=null):(t.head=n,n.data=i.slice(o));break}++a}return t.length-=a,r}(e,t):function(e,t){var n=u.allocUnsafe(e),a=t.head,r=1;for(a.data.copy(n),e-=a.data.length;a=a.next;){var i=a.data,o=e>i.length?i.length:e;if(i.copy(n,n.length-e,0,o),0==(e-=o)){o===i.length?(++r,a.next?t.head=a.next:t.head=t.tail=null):(t.head=a,a.data=i.slice(o));break}++r}return t.length-=r,n}(e,t),a}(e,t.buffer,t.decoder),n);var n}function D(e){var t=e._readableState;if(t.length>0)throw new Error('"endReadable()" called on non-empty stream');t.endEmitted||(t.ended=!0,r.nextTick(A,t,e))}function A(e,t){e.endEmitted||0!==e.length||(e.endEmitted=!0,t.readable=!1,t.emit("end"))}function j(e,t){for(var n=0,a=e.length;n<a;n++)if(e[n]===t)return n;return-1}y.prototype.read=function(e){h("read",e),e=parseInt(e,10);var t=this._readableState,n=e;if(0!==e&&(t.emittedReadable=!1),0===e&&t.needReadable&&(t.length>=t.highWaterMark||t.ended))return h("read: emitReadable",t.length,t.ended),0===t.length&&t.ended?D(this):T(this),null;if(0===(e=x(e,t))&&t.ended)return 0===t.length&&D(this),null;var a,r=t.needReadable;return h("need readable",r),(0===t.length||t.length-e<t.highWaterMark)&&h("length less than watermark",r=!0),t.ended||t.reading?h("reading or ended",r=!1):r&&(h("do read"),t.reading=!0,t.sync=!0,0===t.length&&(t.needReadable=!0),this._read(t.highWaterMark),t.sync=!1,t.reading||(e=x(n,t))),null===(a=e>0?L(e,t):null)?(t.needReadable=!0,e=0):t.length-=e,0===t.length&&(t.ended||(t.needReadable=!0),n!==e&&t.ended&&D(this)),null!==a&&this.emit("data",a),a},y.prototype._read=function(e){this.emit("error",new Error("_read() is not implemented"))},y.prototype.pipe=function(e,t){var n=this,i=this._readableState;switch(i.pipesCount){case 0:i.pipes=e;break;case 1:i.pipes=[i.pipes,e];break;default:i.pipes.push(e)}i.pipesCount+=1,h("pipe count=%d opts=%j",i.pipesCount,t);var s=t&&!1===t.end||e===a.stdout||e===a.stderr?b:u;function u(){h("onend"),e.end()}i.endEmitted?r.nextTick(s):n.once("end",s),e.on("unpipe",function t(a,r){h("onunpipe"),a===n&&r&&!1===r.hasUnpiped&&(r.hasUnpiped=!0,h("cleanup"),e.removeListener("close",g),e.removeListener("finish",p),e.removeListener("drain",d),e.removeListener("error",v),e.removeListener("unpipe",t),n.removeListener("end",u),n.removeListener("end",b),n.removeListener("data",m),c=!0,!i.awaitDrain||e._writableState&&!e._writableState.needDrain||d())});var d=function(e){return function(){var t=e._readableState;h("pipeOnDrain",t.awaitDrain),t.awaitDrain&&t.awaitDrain--,0===t.awaitDrain&&l(e,"data")&&(t.flowing=!0,C(e))}}(n);e.on("drain",d);var c=!1,f=!1;function m(t){h("ondata"),f=!1,!1!==e.write(t)||f||((1===i.pipesCount&&i.pipes===e||i.pipesCount>1&&-1!==j(i.pipes,e))&&!c&&(h("false write response, pause",n._readableState.awaitDrain),n._readableState.awaitDrain++,f=!0),n.pause())}function v(t){h("onerror",t),b(),e.removeListener("error",v),0===l(e,"error")&&e.emit("error",t)}function g(){e.removeListener("finish",p),b()}function p(){h("onfinish"),e.removeListener("close",g),b()}function b(){h("unpipe"),n.unpipe(e)}return n.on("data",m),function(e,t,n){if("function"==typeof e.prependListener)return e.prependListener(t,n);e._events&&e._events[t]?o(e._events[t])?e._events[t].unshift(n):e._events[t]=[n,e._events[t]]:e.on(t,n)}(e,"error",v),e.once("close",g),e.once("finish",p),e.emit("pipe",n),i.flowing||(h("pipe resume"),n.resume()),e},y.prototype.unpipe=function(e){var t=this._readableState,n={hasUnpiped:!1};if(0===t.pipesCount)return this;if(1===t.pipesCount)return e&&e!==t.pipes?this:(e||(e=t.pipes),t.pipes=null,t.pipesCount=0,t.flowing=!1,e&&e.emit("unpipe",this,n),this);if(!e){var a=t.pipes,r=t.pipesCount;t.pipes=null,t.pipesCount=0,t.flowing=!1;for(var i=0;i<r;i++)a[i].emit("unpipe",this,n);return this}var o=j(t.pipes,e);return-1===o?this:(t.pipes.splice(o,1),t.pipesCount-=1,1===t.pipesCount&&(t.pipes=t.pipes[0]),e.emit("unpipe",this,n),this)},y.prototype.on=function(e,t){var n=s.prototype.on.call(this,e,t);if("data"===e)!1!==this._readableState.flowing&&this.resume();else if("readable"===e){var a=this._readableState;a.endEmitted||a.readableListening||(a.readableListening=a.needReadable=!0,a.emittedReadable=!1,a.reading?a.length&&T(this):r.nextTick(I,this))}return n},y.prototype.addListener=y.prototype.on,y.prototype.resume=function(){var e=this._readableState;return e.flowing||(h("resume"),e.flowing=!0,function(e,t){t.resumeScheduled||(t.resumeScheduled=!0,r.nextTick(M,e,t))}(this,e)),this},y.prototype.pause=function(){return h("call pause flowing=%j",this._readableState.flowing),!1!==this._readableState.flowing&&(h("pause"),this._readableState.flowing=!1,this.emit("pause")),this},y.prototype.wrap=function(e){var t=this,n=this._readableState,a=!1;for(var r in e.on("end",function(){if(h("wrapped end"),n.decoder&&!n.ended){var e=n.decoder.end();e&&e.length&&t.push(e)}t.push(null)}),e.on("data",function(r){h("wrapped data"),n.decoder&&(r=n.decoder.write(r)),(!n.objectMode||null!==r&&void 0!==r)&&(n.objectMode||r&&r.length)&&(t.push(r)||(a=!0,e.pause()))}),e)void 0===this[r]&&"function"==typeof e[r]&&(this[r]=function(t){return function(){return e[t].apply(e,arguments)}}(r));for(var i=0;i<p.length;i++)e.on(p[i],this.emit.bind(this,p[i]));return this._read=function(t){h("wrapped _read",t),a&&(a=!1,e.resume())},this},y._fromList=L}).call(this,n(0),n(3))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(void 0===e)throw"dicomParser.readPart10Header: missing required parameter 'byteArray'";var n=new a.default(i.default,e);return function(){!function(){if(n.seek(128),"DICM"!==n.readFixedString(4))throw"dicomParser.readPart10Header: DICM prefix not found at location 132 - this is not a valid DICOM P10 file."}();for(var e=[],t={};n.position<n.byteArray.length;){var a=n.position,l=(0,o.default)(n,e);if(l.tag>"x0002ffff"){n.position=a;break}l.parser=i.default,t[l.tag]=l}var s=new r.default(n.byteArrayParser,n.byteArray,t);return s.warnings=n.warnings,s.position=n.position,s}()};var a=l(n(12)),r=l(n(7)),i=l(n(21)),o=l(n(15));function l(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={readUint16:function(e,t){if(t<0)throw"bigEndianByteArrayParser.readUint16: position cannot be less than 0";if(t+2>e.length)throw"bigEndianByteArrayParser.readUint16: attempt to read past end of buffer";return(e[t]<<8)+e[t+1]},readInt16:function(e,t){if(t<0)throw"bigEndianByteArrayParser.readInt16: position cannot be less than 0";if(t+2>e.length)throw"bigEndianByteArrayParser.readInt16: attempt to read past end of buffer";var n=(e[t]<<8)+e[t+1];return 32768&n&&(n=n-65535-1),n},readUint32:function(e,t){if(t<0)throw"bigEndianByteArrayParser.readUint32: position cannot be less than 0";if(t+4>e.length)throw"bigEndianByteArrayParser.readUint32: attempt to read past end of buffer";return 256*(256*(256*e[t]+e[t+1])+e[t+2])+e[t+3]},readInt32:function(e,t){if(t<0)throw"bigEndianByteArrayParser.readInt32: position cannot be less than 0";if(t+4>e.length)throw"bigEndianByteArrayParser.readInt32: attempt to read past end of buffer";return(e[t]<<24)+(e[t+1]<<16)+(e[t+2]<<8)+e[t+3]},readFloat:function(e,t){if(t<0)throw"bigEndianByteArrayParser.readFloat: position cannot be less than 0";if(t+4>e.length)throw"bigEndianByteArrayParser.readFloat: attempt to read past end of buffer";var n=new Uint8Array(4);return n[3]=e[t],n[2]=e[t+1],n[1]=e[t+2],n[0]=e[t+3],new Float32Array(n.buffer)[0]},readDouble:function(e,t){if(t<0)throw"bigEndianByteArrayParser.readDouble: position cannot be less than 0";if(t+8>e.length)throw"bigEndianByteArrayParser.readDouble: attempt to read past end of buffer";var n=new Uint8Array(8);return n[7]=e[t],n[6]=e[t+1],n[5]=e[t+2],n[4]=e[t+3],n[3]=e[t+4],n[2]=e[t+5],n[1]=e[t+6],n[0]=e[t+7],new Float64Array(n.buffer)[0]}}},function(e,t){var n={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==n.call(e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){if(void 0===e)throw"dicomParser.readSequenceItemsImplicit: missing required parameter 'byteStream'";if(void 0===t)throw"dicomParser.readSequenceItemsImplicit: missing required parameter 'element'";t.items=[],4294967295===t.length?function(e,t,n){for(;e.position+4<=e.byteArray.length;){var a=(0,o.default)(e);if(e.seek(-4),"xfffee0dd"===a)return t.length=e.position-t.dataOffset,e.seek(8),t;var r=u(e,n);t.items.push(r)}e.warnings.push("eof encountered before finding sequence delimiter in sequence of undefined length"),t.length=e.byteArray.length-t.dataOffset}(e,t,n):function(e,t,n){for(var a=t.dataOffset+t.length;e.position<a;){var r=u(e,n);t.items.push(r)}}(e,t,n)};var a=s(n(7)),r=s(n(23)),i=s(n(13)),o=s(n(4)),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(16));function s(e){return e&&e.__esModule?e:{default:e}}function u(e,t){var n=(0,i.default)(e);return 4294967295===n.length?(n.hadUndefinedLength=!0,n.dataSet=function(e,t){for(var n={};e.position<e.byteArray.length;){var i=(0,r.default)(e,void 0,t);if(n[i.tag]=i,"xfffee00d"===i.tag)return new a.default(e.byteArrayParser,e.byteArray,n)}return e.warnings.push("eof encountered before finding sequence item delimiter in sequence item of undefined length"),new a.default(e.byteArrayParser,e.byteArray,n)}(e,t),n.length=e.position-n.dataOffset):(n.dataSet=new a.default(e.byteArrayParser,e.byteArray,{}),l.parseDicomDataSetImplicit(n.dataSet,e,e.position+n.length,{vrCallback:t})),n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){if(void 0===e)throw"dicomParser.readSequenceItemsExplicit: missing required parameter 'byteStream'";if(void 0===t)throw"dicomParser.readSequenceItemsExplicit: missing required parameter 'element'";t.items=[],4294967295===t.length?function(e,t,n){for(;e.position+4<=e.byteArray.length;){var a=(0,o.default)(e);if(e.seek(-4),"xfffee0dd"===a)return t.length=e.position-t.dataOffset,e.seek(8),t;var r=u(e,n);t.items.push(r)}n.push("eof encountered before finding sequence delimitation tag while reading sequence of undefined length"),t.length=e.position-t.dataOffset}(e,t,n):function(e,t,n){for(var a=t.dataOffset+t.length;e.position<a;){var r=u(e,n);t.items.push(r)}}(e,t,n)};var a=s(n(7)),r=s(n(15)),i=s(n(13)),o=s(n(4)),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(16));function s(e){return e&&e.__esModule?e:{default:e}}function u(e,t){var n=(0,i.default)(e);return 4294967295===n.length?(n.hadUndefinedLength=!0,n.dataSet=function(e,t){for(var n={};e.position<e.byteArray.length;){var i=(0,r.default)(e,t);if(n[i.tag]=i,"xfffee00d"===i.tag)return new a.default(e.byteArrayParser,e.byteArray,n)}return t.push("eof encountered before finding item delimiter tag while reading sequence item of undefined length"),new a.default(e.byteArrayParser,e.byteArray,n)}(e,t),n.length=e.position-n.dataOffset):(n.dataSet=new a.default(e.byteArrayParser,e.byteArray,{}),l.parseDicomDataSetExplicit(n.dataSet,e,e.position+n.length)),n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(void 0===e)throw"dicomParser.findAndSetUNElementLength: missing required parameter 'byteStream'";for(var n=e.byteArray.length-8;e.position<=n;){var a=e.readUint16();if(65534===a){var r=e.readUint16();if(57565===r){var i=e.readUint32();return 0!==i&&e.warnings("encountered non zero length following item delimiter at position "+(e.position-4)+" while reading element of undefined length with tag "+t.tag),void(t.length=e.position-t.dataOffset)}}}t.length=e.byteArray.length-t.dataOffset,e.seek(e.byteArray.length-e.position)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){if(void 0===e)throw"dicomParser.findEndOfEncapsulatedElement: missing required parameter 'byteStream'";if(void 0===t)throw"dicomParser.findEndOfEncapsulatedElement: missing required parameter 'element'";if(t.encapsulatedPixelData=!0,t.basicOffsetTable=[],t.fragments=[],"xfffee000"!==(0,i.default)(e))throw"dicomParser.findEndOfEncapsulatedElement: basic offset table not found";for(var a=e.readUint32()/4,r=0;r<a;r++){var o=e.readUint32();t.basicOffsetTable.push(o)}for(var l=e.position;e.position<e.byteArray.length;){var s=(0,i.default)(e),u=e.readUint32();if("xfffee0dd"===s)return e.seek(u),void(t.length=e.position-t.dataOffset);if("xfffee000"!==s)return n&&n.push("unexpected tag "+s+" while searching for end of pixel data element with undefined length"),u>e.byteArray.length-e.position&&(u=e.byteArray.length-e.position),t.fragments.push({offset:e.position-l-8,position:e.position,length:u}),e.seek(u),void(t.length=e.position-t.dataOffset);t.fragments.push({offset:e.position-l-8,position:e.position,length:u}),e.seek(u)}n&&n.push("pixel data element "+t.tag+" missing sequence delimiter tag xfffee0dd")};var a,r=n(4),i=(a=r)&&a.__esModule?a:{default:a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(void 0===e||void 0===t)throw"dicomParser.explicitElementToString: missing required parameters";if(void 0===t.vr)throw"dicomParser.explicitElementToString: cannot convert implicit element to string";var n,r=t.vr,i=t.tag;function o(t,n){for(var a="",r=0;r<t;r++)0!==r&&(a+="/"),a+=n.call(e,i,r).toString();return a}if(!0===a.isStringVr(r))n=e.string(i);else{if("AT"===r){var l=e.uint32(i);if(void 0===l)return;return l<0&&(l=4294967295+l+1),"x"+l.toString(16).toUpperCase()}"US"===r?n=o(t.length/2,e.uint16):"SS"===r?n=o(t.length/2,e.int16):"UL"===r?n=o(t.length/4,e.uint32):"SL"===r?n=o(t.length/4,e.int32):"FD"===r?n=o(t.length/8,e.double):"FL"===r&&(n=o(t.length/4,e.float))}return n};var a=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(25))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){if(o||(o=!0,console&&console.log&&console.log("WARNING: dicomParser.readEncapsulatedPixelData() has been deprecated")),void 0===e)throw"dicomParser.readEncapsulatedPixelData: missing required parameter 'dataSet'";if(void 0===t)throw"dicomParser.readEncapsulatedPixelData: missing required parameter 'element'";if(void 0===n)throw"dicomParser.readEncapsulatedPixelData: missing required parameter 'frame'";if("x7fe00010"!==t.tag)throw"dicomParser.readEncapsulatedPixelData: parameter 'element' refers to non pixel data tag (expected tag = x7fe00010)";if(!0!==t.encapsulatedPixelData)throw"dicomParser.readEncapsulatedPixelData: parameter 'element' refers to pixel data element that does not have encapsulated pixel data";if(!0!==t.hadUndefinedLength)throw"dicomParser.readEncapsulatedPixelData: parameter 'element' refers to pixel data element that does not have encapsulated pixel data";if(void 0===t.basicOffsetTable)throw"dicomParser.readEncapsulatedPixelData: parameter 'element' refers to pixel data element that does not have encapsulated pixel data";if(void 0===t.fragments)throw"dicomParser.readEncapsulatedPixelData: parameter 'element' refers to pixel data element that does not have encapsulated pixel data";if(n<0)throw"dicomParser.readEncapsulatedPixelData: parameter 'frame' must be >= 0";return 0!==t.basicOffsetTable.length?(0,a.default)(e,t,n):(0,r.default)(e,t,0,t.fragments.length)};var a=i(n(26)),r=i(n(17));function i(e){return e&&e.__esModule?e:{default:e}}var o=!1},function(e,t,n){"use strict";e.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},function(e,t,n){"use strict";var a=n(8),r=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],i=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],o=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],l=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];e.exports=function(e,t,n,s,u,d,c,f){var h,m,v,g,p,b,y,w,_,E=f.bits,x=0,T=0,P=0,O=0,S=0,I=0,M=0,C=0,L=0,D=0,A=null,j=0,k=new a.Buf16(16),R=new a.Buf16(16),U=null,N=0;for(x=0;x<=15;x++)k[x]=0;for(T=0;T<s;T++)k[t[n+T]]++;for(S=E,O=15;O>=1&&0===k[O];O--);if(S>O&&(S=O),0===O)return u[d++]=20971520,u[d++]=20971520,f.bits=1,0;for(P=1;P<O&&0===k[P];P++);for(S<P&&(S=P),C=1,x=1;x<=15;x++)if(C<<=1,(C-=k[x])<0)return-1;if(C>0&&(0===e||1!==O))return-1;for(R[1]=0,x=1;x<15;x++)R[x+1]=R[x]+k[x];for(T=0;T<s;T++)0!==t[n+T]&&(c[R[t[n+T]]++]=T);if(0===e?(A=U=c,b=19):1===e?(A=r,j-=257,U=i,N-=257,b=256):(A=o,U=l,b=-1),D=0,T=0,x=P,p=d,I=S,M=0,v=-1,g=(L=1<<S)-1,1===e&&L>852||2===e&&L>592)return 1;for(;;){y=x-M,c[T]<b?(w=0,_=c[T]):c[T]>b?(w=U[N+c[T]],_=A[j+c[T]]):(w=96,_=0),h=1<<x-M,P=m=1<<I;do{u[p+(D>>M)+(m-=h)]=y<<24|w<<16|_|0}while(0!==m);for(h=1<<x-1;D&h;)h>>=1;if(0!==h?(D&=h-1,D+=h):D=0,T++,0==--k[x]){if(x===O)break;x=t[n+c[T]]}if(x>S&&(D&g)!==v){for(0===M&&(M=S),p+=P,C=1<<(I=x-M);I+M<O&&!((C-=k[I+M])<=0);)I++,C<<=1;if(L+=1<<I,1===e&&L>852||2===e&&L>592)return 1;u[v=D&g]=S<<24|I<<16|p-d|0}}return 0!==D&&(u[p+D]=x-M<<24|64<<16|0),f.bits=S,0}},function(e,t,n){"use strict";e.exports=function(e,t){var n,a,r,i,o,l,s,u,d,c,f,h,m,v,g,p,b,y,w,_,E,x,T,P,O;n=e.state,a=e.next_in,P=e.input,r=a+(e.avail_in-5),i=e.next_out,O=e.output,o=i-(t-e.avail_out),l=i+(e.avail_out-257),s=n.dmax,u=n.wsize,d=n.whave,c=n.wnext,f=n.window,h=n.hold,m=n.bits,v=n.lencode,g=n.distcode,p=(1<<n.lenbits)-1,b=(1<<n.distbits)-1;e:do{m<15&&(h+=P[a++]<<m,m+=8,h+=P[a++]<<m,m+=8),y=v[h&p];t:for(;;){if(h>>>=w=y>>>24,m-=w,0==(w=y>>>16&255))O[i++]=65535&y;else{if(!(16&w)){if(0==(64&w)){y=v[(65535&y)+(h&(1<<w)-1)];continue t}if(32&w){n.mode=12;break e}e.msg="invalid literal/length code",n.mode=30;break e}_=65535&y,(w&=15)&&(m<w&&(h+=P[a++]<<m,m+=8),_+=h&(1<<w)-1,h>>>=w,m-=w),m<15&&(h+=P[a++]<<m,m+=8,h+=P[a++]<<m,m+=8),y=g[h&b];n:for(;;){if(h>>>=w=y>>>24,m-=w,!(16&(w=y>>>16&255))){if(0==(64&w)){y=g[(65535&y)+(h&(1<<w)-1)];continue n}e.msg="invalid distance code",n.mode=30;break e}if(E=65535&y,m<(w&=15)&&(h+=P[a++]<<m,(m+=8)<w&&(h+=P[a++]<<m,m+=8)),(E+=h&(1<<w)-1)>s){e.msg="invalid distance too far back",n.mode=30;break e}if(h>>>=w,m-=w,E>(w=i-o)){if((w=E-w)>d&&n.sane){e.msg="invalid distance too far back",n.mode=30;break e}if(x=0,T=f,0===c){if(x+=u-w,w<_){_-=w;do{O[i++]=f[x++]}while(--w);x=i-E,T=O}}else if(c<w){if(x+=u+c-w,(w-=c)<_){_-=w;do{O[i++]=f[x++]}while(--w);if(x=0,c<_){_-=w=c;do{O[i++]=f[x++]}while(--w);x=i-E,T=O}}}else if(x+=c-w,w<_){_-=w;do{O[i++]=f[x++]}while(--w);x=i-E,T=O}for(;_>2;)O[i++]=T[x++],O[i++]=T[x++],O[i++]=T[x++],_-=3;_&&(O[i++]=T[x++],_>1&&(O[i++]=T[x++]))}else{x=i-E;do{O[i++]=O[x++],O[i++]=O[x++],O[i++]=O[x++],_-=3}while(_>2);_&&(O[i++]=O[x++],_>1&&(O[i++]=O[x++]))}break}}break}}while(a<r&&i<l);a-=_=m>>3,h&=(1<<(m-=_<<3))-1,e.next_in=a,e.next_out=i,e.avail_in=a<r?r-a+5:5-(a-r),e.avail_out=i<l?l-i+257:257-(i-l),n.hold=h,n.bits=m}},function(e,t,n){"use strict";var a=n(8),r=n(28),i=n(27),o=n(47),l=n(46),s=1,u=2,d=0,c=-2,f=1,h=12,m=30,v=852,g=592;function p(e){return(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24)}function b(e){var t;return e&&e.state?(t=e.state,e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=1&t.wrap),t.mode=f,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new a.Buf32(v),t.distcode=t.distdyn=new a.Buf32(g),t.sane=1,t.back=-1,d):c}function y(e){var t;return e&&e.state?((t=e.state).wsize=0,t.whave=0,t.wnext=0,b(e)):c}function w(e,t){var n,a;return e&&e.state?(a=e.state,t<0?(n=0,t=-t):(n=1+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?c:(null!==a.window&&a.wbits!==t&&(a.window=null),a.wrap=n,a.wbits=t,y(e))):c}function _(e,t){var n,r;return e?(r=new function(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new a.Buf16(320),this.work=new a.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0},e.state=r,r.window=null,(n=w(e,t))!==d&&(e.state=null),n):c}var E,x,T=!0;function P(e){if(T){var t;for(E=new a.Buf32(512),x=new a.Buf32(32),t=0;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(l(s,e.lens,0,288,E,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;l(u,e.lens,0,32,x,0,e.work,{bits:5}),T=!1}e.lencode=E,e.lenbits=9,e.distcode=x,e.distbits=5}function O(e,t,n,r){var i,o=e.state;return null===o.window&&(o.wsize=1<<o.wbits,o.wnext=0,o.whave=0,o.window=new a.Buf8(o.wsize)),r>=o.wsize?(a.arraySet(o.window,t,n-o.wsize,o.wsize,0),o.wnext=0,o.whave=o.wsize):((i=o.wsize-o.wnext)>r&&(i=r),a.arraySet(o.window,t,n-r,i,o.wnext),(r-=i)?(a.arraySet(o.window,t,n-r,r,0),o.wnext=r,o.whave=o.wsize):(o.wnext+=i,o.wnext===o.wsize&&(o.wnext=0),o.whave<o.wsize&&(o.whave+=i))),0}t.inflateReset=y,t.inflateReset2=w,t.inflateResetKeep=b,t.inflateInit=function(e){return _(e,15)},t.inflateInit2=_,t.inflate=function(e,t){var n,v,g,b,y,w,_,E,x,T,S,I,M,C,L,D,A,j,k,R,U,N,B,H,F=0,V=new a.Buf8(4),z=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!e||!e.state||!e.output||!e.input&&0!==e.avail_in)return c;(n=e.state).mode===h&&(n.mode=13),y=e.next_out,g=e.output,_=e.avail_out,b=e.next_in,v=e.input,w=e.avail_in,E=n.hold,x=n.bits,T=w,S=_,N=d;e:for(;;)switch(n.mode){case f:if(0===n.wrap){n.mode=13;break}for(;x<16;){if(0===w)break e;w--,E+=v[b++]<<x,x+=8}if(2&n.wrap&&35615===E){n.check=0,V[0]=255&E,V[1]=E>>>8&255,n.check=i(n.check,V,2,0),E=0,x=0,n.mode=2;break}if(n.flags=0,n.head&&(n.head.done=!1),!(1&n.wrap)||(((255&E)<<8)+(E>>8))%31){e.msg="incorrect header check",n.mode=m;break}if(8!=(15&E)){e.msg="unknown compression method",n.mode=m;break}if(x-=4,U=8+(15&(E>>>=4)),0===n.wbits)n.wbits=U;else if(U>n.wbits){e.msg="invalid window size",n.mode=m;break}n.dmax=1<<U,e.adler=n.check=1,n.mode=512&E?10:h,E=0,x=0;break;case 2:for(;x<16;){if(0===w)break e;w--,E+=v[b++]<<x,x+=8}if(n.flags=E,8!=(255&n.flags)){e.msg="unknown compression method",n.mode=m;break}if(57344&n.flags){e.msg="unknown header flags set",n.mode=m;break}n.head&&(n.head.text=E>>8&1),512&n.flags&&(V[0]=255&E,V[1]=E>>>8&255,n.check=i(n.check,V,2,0)),E=0,x=0,n.mode=3;case 3:for(;x<32;){if(0===w)break e;w--,E+=v[b++]<<x,x+=8}n.head&&(n.head.time=E),512&n.flags&&(V[0]=255&E,V[1]=E>>>8&255,V[2]=E>>>16&255,V[3]=E>>>24&255,n.check=i(n.check,V,4,0)),E=0,x=0,n.mode=4;case 4:for(;x<16;){if(0===w)break e;w--,E+=v[b++]<<x,x+=8}n.head&&(n.head.xflags=255&E,n.head.os=E>>8),512&n.flags&&(V[0]=255&E,V[1]=E>>>8&255,n.check=i(n.check,V,2,0)),E=0,x=0,n.mode=5;case 5:if(1024&n.flags){for(;x<16;){if(0===w)break e;w--,E+=v[b++]<<x,x+=8}n.length=E,n.head&&(n.head.extra_len=E),512&n.flags&&(V[0]=255&E,V[1]=E>>>8&255,n.check=i(n.check,V,2,0)),E=0,x=0}else n.head&&(n.head.extra=null);n.mode=6;case 6:if(1024&n.flags&&((I=n.length)>w&&(I=w),I&&(n.head&&(U=n.head.extra_len-n.length,n.head.extra||(n.head.extra=new Array(n.head.extra_len)),a.arraySet(n.head.extra,v,b,I,U)),512&n.flags&&(n.check=i(n.check,v,I,b)),w-=I,b+=I,n.length-=I),n.length))break e;n.length=0,n.mode=7;case 7:if(2048&n.flags){if(0===w)break e;I=0;do{U=v[b+I++],n.head&&U&&n.length<65536&&(n.head.name+=String.fromCharCode(U))}while(U&&I<w);if(512&n.flags&&(n.check=i(n.check,v,I,b)),w-=I,b+=I,U)break e}else n.head&&(n.head.name=null);n.length=0,n.mode=8;case 8:if(4096&n.flags){if(0===w)break e;I=0;do{U=v[b+I++],n.head&&U&&n.length<65536&&(n.head.comment+=String.fromCharCode(U))}while(U&&I<w);if(512&n.flags&&(n.check=i(n.check,v,I,b)),w-=I,b+=I,U)break e}else n.head&&(n.head.comment=null);n.mode=9;case 9:if(512&n.flags){for(;x<16;){if(0===w)break e;w--,E+=v[b++]<<x,x+=8}if(E!==(65535&n.check)){e.msg="header crc mismatch",n.mode=m;break}E=0,x=0}n.head&&(n.head.hcrc=n.flags>>9&1,n.head.done=!0),e.adler=n.check=0,n.mode=h;break;case 10:for(;x<32;){if(0===w)break e;w--,E+=v[b++]<<x,x+=8}e.adler=n.check=p(E),E=0,x=0,n.mode=11;case 11:if(0===n.havedict)return e.next_out=y,e.avail_out=_,e.next_in=b,e.avail_in=w,n.hold=E,n.bits=x,2;e.adler=n.check=1,n.mode=h;case h:if(5===t||6===t)break e;case 13:if(n.last){E>>>=7&x,x-=7&x,n.mode=27;break}for(;x<3;){if(0===w)break e;w--,E+=v[b++]<<x,x+=8}switch(n.last=1&E,x-=1,3&(E>>>=1)){case 0:n.mode=14;break;case 1:if(P(n),n.mode=20,6===t){E>>>=2,x-=2;break e}break;case 2:n.mode=17;break;case 3:e.msg="invalid block type",n.mode=m}E>>>=2,x-=2;break;case 14:for(E>>>=7&x,x-=7&x;x<32;){if(0===w)break e;w--,E+=v[b++]<<x,x+=8}if((65535&E)!=(E>>>16^65535)){e.msg="invalid stored block lengths",n.mode=m;break}if(n.length=65535&E,E=0,x=0,n.mode=15,6===t)break e;case 15:n.mode=16;case 16:if(I=n.length){if(I>w&&(I=w),I>_&&(I=_),0===I)break e;a.arraySet(g,v,b,I,y),w-=I,b+=I,_-=I,y+=I,n.length-=I;break}n.mode=h;break;case 17:for(;x<14;){if(0===w)break e;w--,E+=v[b++]<<x,x+=8}if(n.nlen=257+(31&E),E>>>=5,x-=5,n.ndist=1+(31&E),E>>>=5,x-=5,n.ncode=4+(15&E),E>>>=4,x-=4,n.nlen>286||n.ndist>30){e.msg="too many length or distance symbols",n.mode=m;break}n.have=0,n.mode=18;case 18:for(;n.have<n.ncode;){for(;x<3;){if(0===w)break e;w--,E+=v[b++]<<x,x+=8}n.lens[z[n.have++]]=7&E,E>>>=3,x-=3}for(;n.have<19;)n.lens[z[n.have++]]=0;if(n.lencode=n.lendyn,n.lenbits=7,B={bits:n.lenbits},N=l(0,n.lens,0,19,n.lencode,0,n.work,B),n.lenbits=B.bits,N){e.msg="invalid code lengths set",n.mode=m;break}n.have=0,n.mode=19;case 19:for(;n.have<n.nlen+n.ndist;){for(;D=(F=n.lencode[E&(1<<n.lenbits)-1])>>>16&255,A=65535&F,!((L=F>>>24)<=x);){if(0===w)break e;w--,E+=v[b++]<<x,x+=8}if(A<16)E>>>=L,x-=L,n.lens[n.have++]=A;else{if(16===A){for(H=L+2;x<H;){if(0===w)break e;w--,E+=v[b++]<<x,x+=8}if(E>>>=L,x-=L,0===n.have){e.msg="invalid bit length repeat",n.mode=m;break}U=n.lens[n.have-1],I=3+(3&E),E>>>=2,x-=2}else if(17===A){for(H=L+3;x<H;){if(0===w)break e;w--,E+=v[b++]<<x,x+=8}x-=L,U=0,I=3+(7&(E>>>=L)),E>>>=3,x-=3}else{for(H=L+7;x<H;){if(0===w)break e;w--,E+=v[b++]<<x,x+=8}x-=L,U=0,I=11+(127&(E>>>=L)),E>>>=7,x-=7}if(n.have+I>n.nlen+n.ndist){e.msg="invalid bit length repeat",n.mode=m;break}for(;I--;)n.lens[n.have++]=U}}if(n.mode===m)break;if(0===n.lens[256]){e.msg="invalid code -- missing end-of-block",n.mode=m;break}if(n.lenbits=9,B={bits:n.lenbits},N=l(s,n.lens,0,n.nlen,n.lencode,0,n.work,B),n.lenbits=B.bits,N){e.msg="invalid literal/lengths set",n.mode=m;break}if(n.distbits=6,n.distcode=n.distdyn,B={bits:n.distbits},N=l(u,n.lens,n.nlen,n.ndist,n.distcode,0,n.work,B),n.distbits=B.bits,N){e.msg="invalid distances set",n.mode=m;break}if(n.mode=20,6===t)break e;case 20:n.mode=21;case 21:if(w>=6&&_>=258){e.next_out=y,e.avail_out=_,e.next_in=b,e.avail_in=w,n.hold=E,n.bits=x,o(e,S),y=e.next_out,g=e.output,_=e.avail_out,b=e.next_in,v=e.input,w=e.avail_in,E=n.hold,x=n.bits,n.mode===h&&(n.back=-1);break}for(n.back=0;D=(F=n.lencode[E&(1<<n.lenbits)-1])>>>16&255,A=65535&F,!((L=F>>>24)<=x);){if(0===w)break e;w--,E+=v[b++]<<x,x+=8}if(D&&0==(240&D)){for(j=L,k=D,R=A;D=(F=n.lencode[R+((E&(1<<j+k)-1)>>j)])>>>16&255,A=65535&F,!(j+(L=F>>>24)<=x);){if(0===w)break e;w--,E+=v[b++]<<x,x+=8}E>>>=j,x-=j,n.back+=j}if(E>>>=L,x-=L,n.back+=L,n.length=A,0===D){n.mode=26;break}if(32&D){n.back=-1,n.mode=h;break}if(64&D){e.msg="invalid literal/length code",n.mode=m;break}n.extra=15&D,n.mode=22;case 22:if(n.extra){for(H=n.extra;x<H;){if(0===w)break e;w--,E+=v[b++]<<x,x+=8}n.length+=E&(1<<n.extra)-1,E>>>=n.extra,x-=n.extra,n.back+=n.extra}n.was=n.length,n.mode=23;case 23:for(;D=(F=n.distcode[E&(1<<n.distbits)-1])>>>16&255,A=65535&F,!((L=F>>>24)<=x);){if(0===w)break e;w--,E+=v[b++]<<x,x+=8}if(0==(240&D)){for(j=L,k=D,R=A;D=(F=n.distcode[R+((E&(1<<j+k)-1)>>j)])>>>16&255,A=65535&F,!(j+(L=F>>>24)<=x);){if(0===w)break e;w--,E+=v[b++]<<x,x+=8}E>>>=j,x-=j,n.back+=j}if(E>>>=L,x-=L,n.back+=L,64&D){e.msg="invalid distance code",n.mode=m;break}n.offset=A,n.extra=15&D,n.mode=24;case 24:if(n.extra){for(H=n.extra;x<H;){if(0===w)break e;w--,E+=v[b++]<<x,x+=8}n.offset+=E&(1<<n.extra)-1,E>>>=n.extra,x-=n.extra,n.back+=n.extra}if(n.offset>n.dmax){e.msg="invalid distance too far back",n.mode=m;break}n.mode=25;case 25:if(0===_)break e;if(I=S-_,n.offset>I){if((I=n.offset-I)>n.whave&&n.sane){e.msg="invalid distance too far back",n.mode=m;break}I>n.wnext?(I-=n.wnext,M=n.wsize-I):M=n.wnext-I,I>n.length&&(I=n.length),C=n.window}else C=g,M=y-n.offset,I=n.length;I>_&&(I=_),_-=I,n.length-=I;do{g[y++]=C[M++]}while(--I);0===n.length&&(n.mode=21);break;case 26:if(0===_)break e;g[y++]=n.length,_--,n.mode=21;break;case 27:if(n.wrap){for(;x<32;){if(0===w)break e;w--,E|=v[b++]<<x,x+=8}if(S-=_,e.total_out+=S,n.total+=S,S&&(e.adler=n.check=n.flags?i(n.check,g,S,y-S):r(n.check,g,S,y-S)),S=_,(n.flags?E:p(E))!==n.check){e.msg="incorrect data check",n.mode=m;break}E=0,x=0}n.mode=28;case 28:if(n.wrap&&n.flags){for(;x<32;){if(0===w)break e;w--,E+=v[b++]<<x,x+=8}if(E!==(4294967295&n.total)){e.msg="incorrect length check",n.mode=m;break}E=0,x=0}n.mode=29;case 29:N=1;break e;case m:N=-3;break e;case 31:return-4;case 32:default:return c}return e.next_out=y,e.avail_out=_,e.next_in=b,e.avail_in=w,n.hold=E,n.bits=x,(n.wsize||S!==e.avail_out&&n.mode<m&&(n.mode<27||4!==t))&&O(e,e.output,e.next_out,S-e.avail_out)?(n.mode=31,-4):(T-=e.avail_in,S-=e.avail_out,e.total_in+=T,e.total_out+=S,n.total+=S,n.wrap&&S&&(e.adler=n.check=n.flags?i(n.check,g,S,e.next_out-S):r(n.check,g,S,e.next_out-S)),e.data_type=n.bits+(n.last?64:0)+(n.mode===h?128:0)+(20===n.mode||15===n.mode?256:0),(0===T&&0===S||4===t)&&N===d&&(N=-5),N)},t.inflateEnd=function(e){if(!e||!e.state)return c;var t=e.state;return t.window&&(t.window=null),e.state=null,d},t.inflateGetHeader=function(e,t){var n;return e&&e.state?0==(2&(n=e.state).wrap)?c:(n.head=t,t.done=!1,d):c},t.inflateSetDictionary=function(e,t){var n,a=t.length;return e&&e.state?0!==(n=e.state).wrap&&11!==n.mode?c:11===n.mode&&r(1,t,a,0)!==n.check?-3:O(e,t,a,a)?(n.mode=31,-4):(n.havedict=1,d):c},t.inflateInfo="pako inflate (from Nodeca project)"},function(e,t,n){"use strict";e.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},function(e,t,n){"use strict";var a=n(8);function r(e){for(var t=e.length;--t>=0;)e[t]=0}var i=0,o=256,l=o+1+29,s=30,u=19,d=2*l+1,c=15,f=16,h=256,m=16,v=17,g=18,p=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],b=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],y=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],w=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],_=new Array(2*(l+2));r(_);var E=new Array(2*s);r(E);var x=new Array(512);r(x);var T=new Array(256);r(T);var P=new Array(29);r(P);var O,S,I,M=new Array(s);function C(e,t,n,a,r){this.static_tree=e,this.extra_bits=t,this.extra_base=n,this.elems=a,this.max_length=r,this.has_stree=e&&e.length}function L(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}function D(e){return e<256?x[e]:x[256+(e>>>7)]}function A(e,t){e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255}function j(e,t,n){e.bi_valid>f-n?(e.bi_buf|=t<<e.bi_valid&65535,A(e,e.bi_buf),e.bi_buf=t>>f-e.bi_valid,e.bi_valid+=n-f):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=n)}function k(e,t,n){j(e,n[2*t],n[2*t+1])}function R(e,t){var n=0;do{n|=1&e,e>>>=1,n<<=1}while(--t>0);return n>>>1}function U(e,t,n){var a,r,i=new Array(c+1),o=0;for(a=1;a<=c;a++)i[a]=o=o+n[a-1]<<1;for(r=0;r<=t;r++){var l=e[2*r+1];0!==l&&(e[2*r]=R(i[l]++,l))}}function N(e){var t;for(t=0;t<l;t++)e.dyn_ltree[2*t]=0;for(t=0;t<s;t++)e.dyn_dtree[2*t]=0;for(t=0;t<u;t++)e.bl_tree[2*t]=0;e.dyn_ltree[2*h]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0}function B(e){e.bi_valid>8?A(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0}function H(e,t,n,a){var r=2*t,i=2*n;return e[r]<e[i]||e[r]===e[i]&&a[t]<=a[n]}function F(e,t,n){for(var a=e.heap[n],r=n<<1;r<=e.heap_len&&(r<e.heap_len&&H(t,e.heap[r+1],e.heap[r],e.depth)&&r++,!H(t,a,e.heap[r],e.depth));)e.heap[n]=e.heap[r],n=r,r<<=1;e.heap[n]=a}function V(e,t,n){var a,r,i,l,s=0;if(0!==e.last_lit)do{a=e.pending_buf[e.d_buf+2*s]<<8|e.pending_buf[e.d_buf+2*s+1],r=e.pending_buf[e.l_buf+s],s++,0===a?k(e,r,t):(k(e,(i=T[r])+o+1,t),0!==(l=p[i])&&j(e,r-=P[i],l),k(e,i=D(--a),n),0!==(l=b[i])&&j(e,a-=M[i],l))}while(s<e.last_lit);k(e,h,t)}function z(e,t){var n,a,r,i=t.dyn_tree,o=t.stat_desc.static_tree,l=t.stat_desc.has_stree,s=t.stat_desc.elems,u=-1;for(e.heap_len=0,e.heap_max=d,n=0;n<s;n++)0!==i[2*n]?(e.heap[++e.heap_len]=u=n,e.depth[n]=0):i[2*n+1]=0;for(;e.heap_len<2;)i[2*(r=e.heap[++e.heap_len]=u<2?++u:0)]=1,e.depth[r]=0,e.opt_len--,l&&(e.static_len-=o[2*r+1]);for(t.max_code=u,n=e.heap_len>>1;n>=1;n--)F(e,i,n);r=s;do{n=e.heap[1],e.heap[1]=e.heap[e.heap_len--],F(e,i,1),a=e.heap[1],e.heap[--e.heap_max]=n,e.heap[--e.heap_max]=a,i[2*r]=i[2*n]+i[2*a],e.depth[r]=(e.depth[n]>=e.depth[a]?e.depth[n]:e.depth[a])+1,i[2*n+1]=i[2*a+1]=r,e.heap[1]=r++,F(e,i,1)}while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],function(e,t){var n,a,r,i,o,l,s=t.dyn_tree,u=t.max_code,f=t.stat_desc.static_tree,h=t.stat_desc.has_stree,m=t.stat_desc.extra_bits,v=t.stat_desc.extra_base,g=t.stat_desc.max_length,p=0;for(i=0;i<=c;i++)e.bl_count[i]=0;for(s[2*e.heap[e.heap_max]+1]=0,n=e.heap_max+1;n<d;n++)(i=s[2*s[2*(a=e.heap[n])+1]+1]+1)>g&&(i=g,p++),s[2*a+1]=i,a>u||(e.bl_count[i]++,o=0,a>=v&&(o=m[a-v]),l=s[2*a],e.opt_len+=l*(i+o),h&&(e.static_len+=l*(f[2*a+1]+o)));if(0!==p){do{for(i=g-1;0===e.bl_count[i];)i--;e.bl_count[i]--,e.bl_count[i+1]+=2,e.bl_count[g]--,p-=2}while(p>0);for(i=g;0!==i;i--)for(a=e.bl_count[i];0!==a;)(r=e.heap[--n])>u||(s[2*r+1]!==i&&(e.opt_len+=(i-s[2*r+1])*s[2*r],s[2*r+1]=i),a--)}}(e,t),U(i,u,e.bl_count)}function W(e,t,n){var a,r,i=-1,o=t[1],l=0,s=7,u=4;for(0===o&&(s=138,u=3),t[2*(n+1)+1]=65535,a=0;a<=n;a++)r=o,o=t[2*(a+1)+1],++l<s&&r===o||(l<u?e.bl_tree[2*r]+=l:0!==r?(r!==i&&e.bl_tree[2*r]++,e.bl_tree[2*m]++):l<=10?e.bl_tree[2*v]++:e.bl_tree[2*g]++,l=0,i=r,0===o?(s=138,u=3):r===o?(s=6,u=3):(s=7,u=4))}function G(e,t,n){var a,r,i=-1,o=t[1],l=0,s=7,u=4;for(0===o&&(s=138,u=3),a=0;a<=n;a++)if(r=o,o=t[2*(a+1)+1],!(++l<s&&r===o)){if(l<u)do{k(e,r,e.bl_tree)}while(0!=--l);else 0!==r?(r!==i&&(k(e,r,e.bl_tree),l--),k(e,m,e.bl_tree),j(e,l-3,2)):l<=10?(k(e,v,e.bl_tree),j(e,l-3,3)):(k(e,g,e.bl_tree),j(e,l-11,7));l=0,i=r,0===o?(s=138,u=3):r===o?(s=6,u=3):(s=7,u=4)}}r(M);var q=!1;function Y(e,t,n,r){j(e,(i<<1)+(r?1:0),3),function(e,t,n,r){B(e),A(e,n),A(e,~n),a.arraySet(e.pending_buf,e.window,t,n,e.pending),e.pending+=n}(e,t,n)}t._tr_init=function(e){q||(function(){var e,t,n,a,r,i=new Array(c+1);for(n=0,a=0;a<28;a++)for(P[a]=n,e=0;e<1<<p[a];e++)T[n++]=a;for(T[n-1]=a,r=0,a=0;a<16;a++)for(M[a]=r,e=0;e<1<<b[a];e++)x[r++]=a;for(r>>=7;a<s;a++)for(M[a]=r<<7,e=0;e<1<<b[a]-7;e++)x[256+r++]=a;for(t=0;t<=c;t++)i[t]=0;for(e=0;e<=143;)_[2*e+1]=8,e++,i[8]++;for(;e<=255;)_[2*e+1]=9,e++,i[9]++;for(;e<=279;)_[2*e+1]=7,e++,i[7]++;for(;e<=287;)_[2*e+1]=8,e++,i[8]++;for(U(_,l+1,i),e=0;e<s;e++)E[2*e+1]=5,E[2*e]=R(e,5);O=new C(_,p,o+1,l,c),S=new C(E,b,0,s,c),I=new C(new Array(0),y,0,u,7)}(),q=!0),e.l_desc=new L(e.dyn_ltree,O),e.d_desc=new L(e.dyn_dtree,S),e.bl_desc=new L(e.bl_tree,I),e.bi_buf=0,e.bi_valid=0,N(e)},t._tr_stored_block=Y,t._tr_flush_block=function(e,t,n,a){var r,i,l=0;e.level>0?(2===e.strm.data_type&&(e.strm.data_type=function(e){var t,n=4093624447;for(t=0;t<=31;t++,n>>>=1)if(1&n&&0!==e.dyn_ltree[2*t])return 0;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return 1;for(t=32;t<o;t++)if(0!==e.dyn_ltree[2*t])return 1;return 0}(e)),z(e,e.l_desc),z(e,e.d_desc),l=function(e){var t;for(W(e,e.dyn_ltree,e.l_desc.max_code),W(e,e.dyn_dtree,e.d_desc.max_code),z(e,e.bl_desc),t=u-1;t>=3&&0===e.bl_tree[2*w[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t}(e),r=e.opt_len+3+7>>>3,(i=e.static_len+3+7>>>3)<=r&&(r=i)):r=i=n+5,n+4<=r&&-1!==t?Y(e,t,n,a):4===e.strategy||i===r?(j(e,2+(a?1:0),3),V(e,_,E)):(j(e,4+(a?1:0),3),function(e,t,n,a){var r;for(j(e,t-257,5),j(e,n-1,5),j(e,a-4,4),r=0;r<a;r++)j(e,e.bl_tree[2*w[r]+1],3);G(e,e.dyn_ltree,t-1),G(e,e.dyn_dtree,n-1)}(e,e.l_desc.max_code+1,e.d_desc.max_code+1,l+1),V(e,e.dyn_ltree,e.dyn_dtree)),N(e),a&&B(e)},t._tr_tally=function(e,t,n){return e.pending_buf[e.d_buf+2*e.last_lit]=t>>>8&255,e.pending_buf[e.d_buf+2*e.last_lit+1]=255&t,e.pending_buf[e.l_buf+e.last_lit]=255&n,e.last_lit++,0===t?e.dyn_ltree[2*n]++:(e.matches++,t--,e.dyn_ltree[2*(T[n]+o+1)]++,e.dyn_dtree[2*D(t)]++),e.last_lit===e.lit_bufsize-1},t._tr_align=function(e){j(e,2,3),k(e,h,_),function(e){16===e.bi_valid?(A(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)}(e)}},function(e,t,n){"use strict";var a,r=n(8),i=n(50),o=n(28),l=n(27),s=n(49),u=0,d=4,c=0,f=-2,h=-1,m=1,v=4,g=2,p=8,b=9,y=286,w=30,_=19,E=2*y+1,x=15,T=3,P=258,O=P+T+1,S=42,I=103,M=113,C=666,L=1,D=2,A=3,j=4;function k(e,t){return e.msg=s[t],t}function R(e){return(e<<1)-(e>4?9:0)}function U(e){for(var t=e.length;--t>=0;)e[t]=0}function N(e){var t=e.state,n=t.pending;n>e.avail_out&&(n=e.avail_out),0!==n&&(r.arraySet(e.output,t.pending_buf,t.pending_out,n,e.next_out),e.next_out+=n,t.pending_out+=n,e.total_out+=n,e.avail_out-=n,t.pending-=n,0===t.pending&&(t.pending_out=0))}function B(e,t){i._tr_flush_block(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,N(e.strm)}function H(e,t){e.pending_buf[e.pending++]=t}function F(e,t){e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t}function V(e,t){var n,a,r=e.max_chain_length,i=e.strstart,o=e.prev_length,l=e.nice_match,s=e.strstart>e.w_size-O?e.strstart-(e.w_size-O):0,u=e.window,d=e.w_mask,c=e.prev,f=e.strstart+P,h=u[i+o-1],m=u[i+o];e.prev_length>=e.good_match&&(r>>=2),l>e.lookahead&&(l=e.lookahead);do{if(u[(n=t)+o]===m&&u[n+o-1]===h&&u[n]===u[i]&&u[++n]===u[i+1]){i+=2,n++;do{}while(u[++i]===u[++n]&&u[++i]===u[++n]&&u[++i]===u[++n]&&u[++i]===u[++n]&&u[++i]===u[++n]&&u[++i]===u[++n]&&u[++i]===u[++n]&&u[++i]===u[++n]&&i<f);if(a=P-(f-i),i=f-P,a>o){if(e.match_start=t,o=a,a>=l)break;h=u[i+o-1],m=u[i+o]}}}while((t=c[t&d])>s&&0!=--r);return o<=e.lookahead?o:e.lookahead}function z(e){var t,n,a,i,s,u,d,c,f,h,m=e.w_size;do{if(i=e.window_size-e.lookahead-e.strstart,e.strstart>=m+(m-O)){r.arraySet(e.window,e.window,m,m,0),e.match_start-=m,e.strstart-=m,e.block_start-=m,t=n=e.hash_size;do{a=e.head[--t],e.head[t]=a>=m?a-m:0}while(--n);t=n=m;do{a=e.prev[--t],e.prev[t]=a>=m?a-m:0}while(--n);i+=m}if(0===e.strm.avail_in)break;if(u=e.strm,d=e.window,c=e.strstart+e.lookahead,f=i,h=void 0,(h=u.avail_in)>f&&(h=f),n=0===h?0:(u.avail_in-=h,r.arraySet(d,u.input,u.next_in,h,c),1===u.state.wrap?u.adler=o(u.adler,d,h,c):2===u.state.wrap&&(u.adler=l(u.adler,d,h,c)),u.next_in+=h,u.total_in+=h,h),e.lookahead+=n,e.lookahead+e.insert>=T)for(s=e.strstart-e.insert,e.ins_h=e.window[s],e.ins_h=(e.ins_h<<e.hash_shift^e.window[s+1])&e.hash_mask;e.insert&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[s+T-1])&e.hash_mask,e.prev[s&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=s,s++,e.insert--,!(e.lookahead+e.insert<T)););}while(e.lookahead<O&&0!==e.strm.avail_in)}function W(e,t){for(var n,a;;){if(e.lookahead<O){if(z(e),e.lookahead<O&&t===u)return L;if(0===e.lookahead)break}if(n=0,e.lookahead>=T&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+T-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==n&&e.strstart-n<=e.w_size-O&&(e.match_length=V(e,n)),e.match_length>=T)if(a=i._tr_tally(e,e.strstart-e.match_start,e.match_length-T),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=T){e.match_length--;do{e.strstart++,e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+T-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart}while(0!=--e.match_length);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+1])&e.hash_mask;else a=i._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(a&&(B(e,!1),0===e.strm.avail_out))return L}return e.insert=e.strstart<T-1?e.strstart:T-1,t===d?(B(e,!0),0===e.strm.avail_out?A:j):e.last_lit&&(B(e,!1),0===e.strm.avail_out)?L:D}function G(e,t){for(var n,a,r;;){if(e.lookahead<O){if(z(e),e.lookahead<O&&t===u)return L;if(0===e.lookahead)break}if(n=0,e.lookahead>=T&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+T-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=T-1,0!==n&&e.prev_length<e.max_lazy_match&&e.strstart-n<=e.w_size-O&&(e.match_length=V(e,n),e.match_length<=5&&(e.strategy===m||e.match_length===T&&e.strstart-e.match_start>4096)&&(e.match_length=T-1)),e.prev_length>=T&&e.match_length<=e.prev_length){r=e.strstart+e.lookahead-T,a=i._tr_tally(e,e.strstart-1-e.prev_match,e.prev_length-T),e.lookahead-=e.prev_length-1,e.prev_length-=2;do{++e.strstart<=r&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+T-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart)}while(0!=--e.prev_length);if(e.match_available=0,e.match_length=T-1,e.strstart++,a&&(B(e,!1),0===e.strm.avail_out))return L}else if(e.match_available){if((a=i._tr_tally(e,0,e.window[e.strstart-1]))&&B(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return L}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(a=i._tr_tally(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<T-1?e.strstart:T-1,t===d?(B(e,!0),0===e.strm.avail_out?A:j):e.last_lit&&(B(e,!1),0===e.strm.avail_out)?L:D}function q(e,t,n,a,r){this.good_length=e,this.max_lazy=t,this.nice_length=n,this.max_chain=a,this.func=r}function Y(e){var t;return e&&e.state?(e.total_in=e.total_out=0,e.data_type=g,(t=e.state).pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?S:M,e.adler=2===t.wrap?0:1,t.last_flush=u,i._tr_init(t),c):k(e,f)}function Z(e){var t,n=Y(e);return n===c&&((t=e.state).window_size=2*t.w_size,U(t.head),t.max_lazy_match=a[t.level].max_lazy,t.good_match=a[t.level].good_length,t.nice_match=a[t.level].nice_length,t.max_chain_length=a[t.level].max_chain,t.strstart=0,t.block_start=0,t.lookahead=0,t.insert=0,t.match_length=t.prev_length=T-1,t.match_available=0,t.ins_h=0),n}function K(e,t,n,a,i,o){if(!e)return f;var l=1;if(t===h&&(t=6),a<0?(l=0,a=-a):a>15&&(l=2,a-=16),i<1||i>b||n!==p||a<8||a>15||t<0||t>9||o<0||o>v)return k(e,f);8===a&&(a=9);var s=new function(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=p,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new r.Buf16(2*E),this.dyn_dtree=new r.Buf16(2*(2*w+1)),this.bl_tree=new r.Buf16(2*(2*_+1)),U(this.dyn_ltree),U(this.dyn_dtree),U(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new r.Buf16(x+1),this.heap=new r.Buf16(2*y+1),U(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new r.Buf16(2*y+1),U(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0};return e.state=s,s.strm=e,s.wrap=l,s.gzhead=null,s.w_bits=a,s.w_size=1<<s.w_bits,s.w_mask=s.w_size-1,s.hash_bits=i+7,s.hash_size=1<<s.hash_bits,s.hash_mask=s.hash_size-1,s.hash_shift=~~((s.hash_bits+T-1)/T),s.window=new r.Buf8(2*s.w_size),s.head=new r.Buf16(s.hash_size),s.prev=new r.Buf16(s.w_size),s.lit_bufsize=1<<i+6,s.pending_buf_size=4*s.lit_bufsize,s.pending_buf=new r.Buf8(s.pending_buf_size),s.d_buf=1*s.lit_bufsize,s.l_buf=3*s.lit_bufsize,s.level=t,s.strategy=o,s.method=n,Z(e)}a=[new q(0,0,0,0,function(e,t){var n=65535;for(n>e.pending_buf_size-5&&(n=e.pending_buf_size-5);;){if(e.lookahead<=1){if(z(e),0===e.lookahead&&t===u)return L;if(0===e.lookahead)break}e.strstart+=e.lookahead,e.lookahead=0;var a=e.block_start+n;if((0===e.strstart||e.strstart>=a)&&(e.lookahead=e.strstart-a,e.strstart=a,B(e,!1),0===e.strm.avail_out))return L;if(e.strstart-e.block_start>=e.w_size-O&&(B(e,!1),0===e.strm.avail_out))return L}return e.insert=0,t===d?(B(e,!0),0===e.strm.avail_out?A:j):(e.strstart>e.block_start&&(B(e,!1),e.strm.avail_out),L)}),new q(4,4,8,4,W),new q(4,5,16,8,W),new q(4,6,32,32,W),new q(4,4,16,16,G),new q(8,16,32,32,G),new q(8,16,128,128,G),new q(8,32,128,256,G),new q(32,128,258,1024,G),new q(32,258,258,4096,G)],t.deflateInit=function(e,t){return K(e,t,p,15,8,0)},t.deflateInit2=K,t.deflateReset=Z,t.deflateResetKeep=Y,t.deflateSetHeader=function(e,t){return e&&e.state?2!==e.state.wrap?f:(e.state.gzhead=t,c):f},t.deflate=function(e,t){var n,r,o,s;if(!e||!e.state||t>5||t<0)return e?k(e,f):f;if(r=e.state,!e.output||!e.input&&0!==e.avail_in||r.status===C&&t!==d)return k(e,0===e.avail_out?-5:f);if(r.strm=e,n=r.last_flush,r.last_flush=t,r.status===S)if(2===r.wrap)e.adler=0,H(r,31),H(r,139),H(r,8),r.gzhead?(H(r,(r.gzhead.text?1:0)+(r.gzhead.hcrc?2:0)+(r.gzhead.extra?4:0)+(r.gzhead.name?8:0)+(r.gzhead.comment?16:0)),H(r,255&r.gzhead.time),H(r,r.gzhead.time>>8&255),H(r,r.gzhead.time>>16&255),H(r,r.gzhead.time>>24&255),H(r,9===r.level?2:r.strategy>=2||r.level<2?4:0),H(r,255&r.gzhead.os),r.gzhead.extra&&r.gzhead.extra.length&&(H(r,255&r.gzhead.extra.length),H(r,r.gzhead.extra.length>>8&255)),r.gzhead.hcrc&&(e.adler=l(e.adler,r.pending_buf,r.pending,0)),r.gzindex=0,r.status=69):(H(r,0),H(r,0),H(r,0),H(r,0),H(r,0),H(r,9===r.level?2:r.strategy>=2||r.level<2?4:0),H(r,3),r.status=M);else{var h=p+(r.w_bits-8<<4)<<8;h|=(r.strategy>=2||r.level<2?0:r.level<6?1:6===r.level?2:3)<<6,0!==r.strstart&&(h|=32),h+=31-h%31,r.status=M,F(r,h),0!==r.strstart&&(F(r,e.adler>>>16),F(r,65535&e.adler)),e.adler=1}if(69===r.status)if(r.gzhead.extra){for(o=r.pending;r.gzindex<(65535&r.gzhead.extra.length)&&(r.pending!==r.pending_buf_size||(r.gzhead.hcrc&&r.pending>o&&(e.adler=l(e.adler,r.pending_buf,r.pending-o,o)),N(e),o=r.pending,r.pending!==r.pending_buf_size));)H(r,255&r.gzhead.extra[r.gzindex]),r.gzindex++;r.gzhead.hcrc&&r.pending>o&&(e.adler=l(e.adler,r.pending_buf,r.pending-o,o)),r.gzindex===r.gzhead.extra.length&&(r.gzindex=0,r.status=73)}else r.status=73;if(73===r.status)if(r.gzhead.name){o=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>o&&(e.adler=l(e.adler,r.pending_buf,r.pending-o,o)),N(e),o=r.pending,r.pending===r.pending_buf_size)){s=1;break}s=r.gzindex<r.gzhead.name.length?255&r.gzhead.name.charCodeAt(r.gzindex++):0,H(r,s)}while(0!==s);r.gzhead.hcrc&&r.pending>o&&(e.adler=l(e.adler,r.pending_buf,r.pending-o,o)),0===s&&(r.gzindex=0,r.status=91)}else r.status=91;if(91===r.status)if(r.gzhead.comment){o=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>o&&(e.adler=l(e.adler,r.pending_buf,r.pending-o,o)),N(e),o=r.pending,r.pending===r.pending_buf_size)){s=1;break}s=r.gzindex<r.gzhead.comment.length?255&r.gzhead.comment.charCodeAt(r.gzindex++):0,H(r,s)}while(0!==s);r.gzhead.hcrc&&r.pending>o&&(e.adler=l(e.adler,r.pending_buf,r.pending-o,o)),0===s&&(r.status=I)}else r.status=I;if(r.status===I&&(r.gzhead.hcrc?(r.pending+2>r.pending_buf_size&&N(e),r.pending+2<=r.pending_buf_size&&(H(r,255&e.adler),H(r,e.adler>>8&255),e.adler=0,r.status=M)):r.status=M),0!==r.pending){if(N(e),0===e.avail_out)return r.last_flush=-1,c}else if(0===e.avail_in&&R(t)<=R(n)&&t!==d)return k(e,-5);if(r.status===C&&0!==e.avail_in)return k(e,-5);if(0!==e.avail_in||0!==r.lookahead||t!==u&&r.status!==C){var m=2===r.strategy?function(e,t){for(var n;;){if(0===e.lookahead&&(z(e),0===e.lookahead)){if(t===u)return L;break}if(e.match_length=0,n=i._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,n&&(B(e,!1),0===e.strm.avail_out))return L}return e.insert=0,t===d?(B(e,!0),0===e.strm.avail_out?A:j):e.last_lit&&(B(e,!1),0===e.strm.avail_out)?L:D}(r,t):3===r.strategy?function(e,t){for(var n,a,r,o,l=e.window;;){if(e.lookahead<=P){if(z(e),e.lookahead<=P&&t===u)return L;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=T&&e.strstart>0&&(a=l[r=e.strstart-1])===l[++r]&&a===l[++r]&&a===l[++r]){o=e.strstart+P;do{}while(a===l[++r]&&a===l[++r]&&a===l[++r]&&a===l[++r]&&a===l[++r]&&a===l[++r]&&a===l[++r]&&a===l[++r]&&r<o);e.match_length=P-(o-r),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=T?(n=i._tr_tally(e,1,e.match_length-T),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(n=i._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),n&&(B(e,!1),0===e.strm.avail_out))return L}return e.insert=0,t===d?(B(e,!0),0===e.strm.avail_out?A:j):e.last_lit&&(B(e,!1),0===e.strm.avail_out)?L:D}(r,t):a[r.level].func(r,t);if(m!==A&&m!==j||(r.status=C),m===L||m===A)return 0===e.avail_out&&(r.last_flush=-1),c;if(m===D&&(1===t?i._tr_align(r):5!==t&&(i._tr_stored_block(r,0,0,!1),3===t&&(U(r.head),0===r.lookahead&&(r.strstart=0,r.block_start=0,r.insert=0))),N(e),0===e.avail_out))return r.last_flush=-1,c}return t!==d?c:r.wrap<=0?1:(2===r.wrap?(H(r,255&e.adler),H(r,e.adler>>8&255),H(r,e.adler>>16&255),H(r,e.adler>>24&255),H(r,255&e.total_in),H(r,e.total_in>>8&255),H(r,e.total_in>>16&255),H(r,e.total_in>>24&255)):(F(r,e.adler>>>16),F(r,65535&e.adler)),N(e),r.wrap>0&&(r.wrap=-r.wrap),0!==r.pending?c:1)},t.deflateEnd=function(e){var t;return e&&e.state?(t=e.state.status)!==S&&69!==t&&73!==t&&91!==t&&t!==I&&t!==M&&t!==C?k(e,f):(e.state=null,t===M?k(e,-3):c):f},t.deflateSetDictionary=function(e,t){var n,a,i,l,s,u,d,h,m=t.length;if(!e||!e.state)return f;if(2===(l=(n=e.state).wrap)||1===l&&n.status!==S||n.lookahead)return f;for(1===l&&(e.adler=o(e.adler,t,m,0)),n.wrap=0,m>=n.w_size&&(0===l&&(U(n.head),n.strstart=0,n.block_start=0,n.insert=0),h=new r.Buf8(n.w_size),r.arraySet(h,t,m-n.w_size,n.w_size,0),t=h,m=n.w_size),s=e.avail_in,u=e.next_in,d=e.input,e.avail_in=m,e.next_in=0,e.input=t,z(n);n.lookahead>=T;){a=n.strstart,i=n.lookahead-(T-1);do{n.ins_h=(n.ins_h<<n.hash_shift^n.window[a+T-1])&n.hash_mask,n.prev[a&n.w_mask]=n.head[n.ins_h],n.head[n.ins_h]=a,a++}while(--i);n.strstart=a,n.lookahead=T-1,z(n)}return n.strstart+=n.lookahead,n.block_start=n.strstart,n.insert=n.lookahead,n.lookahead=0,n.match_length=n.prev_length=T-1,n.match_available=0,e.next_in=u,e.input=d,e.avail_in=s,n.wrap=l,c},t.deflateInfo="pako deflate (from Nodeca project)"},function(e,t,n){"use strict";e.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}},function(e,t){"function"==typeof Object.create?e.exports=function(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}:e.exports=function(e,t){e.super_=t;var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e}},function(e,t){e.exports=function(e){return e&&"object"==typeof e&&"function"==typeof e.copy&&"function"==typeof e.fill&&"function"==typeof e.readUInt8}},function(e,t,n){"use strict";(function(e,a){var r=n(30),i=n(52),o=n(51),l=n(48),s=n(45);for(var u in s)t[u]=s[u];function d(e){if("number"!=typeof e||e<t.DEFLATE||e>t.UNZIP)throw new TypeError("Bad argument");this.dictionary=null,this.err=0,this.flush=0,this.init_done=!1,this.level=0,this.memLevel=0,this.mode=e,this.strategy=0,this.windowBits=0,this.write_in_progress=!1,this.pending_close=!1,this.gzip_id_bytes_read=0}t.NONE=0,t.DEFLATE=1,t.INFLATE=2,t.GZIP=3,t.GUNZIP=4,t.DEFLATERAW=5,t.INFLATERAW=6,t.UNZIP=7,d.prototype.close=function(){this.write_in_progress?this.pending_close=!0:(this.pending_close=!1,r(this.init_done,"close before init"),r(this.mode<=t.UNZIP),this.mode===t.DEFLATE||this.mode===t.GZIP||this.mode===t.DEFLATERAW?o.deflateEnd(this.strm):this.mode!==t.INFLATE&&this.mode!==t.GUNZIP&&this.mode!==t.INFLATERAW&&this.mode!==t.UNZIP||l.inflateEnd(this.strm),this.mode=t.NONE,this.dictionary=null)},d.prototype.write=function(e,t,n,a,r,i,o){return this._write(!0,e,t,n,a,r,i,o)},d.prototype.writeSync=function(e,t,n,a,r,i,o){return this._write(!1,e,t,n,a,r,i,o)},d.prototype._write=function(n,i,o,l,s,u,d,c){if(r.equal(arguments.length,8),r(this.init_done,"write before init"),r(this.mode!==t.NONE,"already finalized"),r.equal(!1,this.write_in_progress,"write already in progress"),r.equal(!1,this.pending_close,"close is pending"),this.write_in_progress=!0,r.equal(!1,void 0===i,"must provide flush value"),this.write_in_progress=!0,i!==t.Z_NO_FLUSH&&i!==t.Z_PARTIAL_FLUSH&&i!==t.Z_SYNC_FLUSH&&i!==t.Z_FULL_FLUSH&&i!==t.Z_FINISH&&i!==t.Z_BLOCK)throw new Error("Invalid flush value");if(null==o&&(o=e.alloc(0),s=0,l=0),this.strm.avail_in=s,this.strm.input=o,this.strm.next_in=l,this.strm.avail_out=c,this.strm.output=u,this.strm.next_out=d,this.flush=i,!n)return this._process(),this._checkError()?this._afterSync():void 0;var f=this;return a.nextTick(function(){f._process(),f._after()}),this},d.prototype._afterSync=function(){var e=this.strm.avail_out,t=this.strm.avail_in;return this.write_in_progress=!1,[t,e]},d.prototype._process=function(){var e=null;switch(this.mode){case t.DEFLATE:case t.GZIP:case t.DEFLATERAW:this.err=o.deflate(this.strm,this.flush);break;case t.UNZIP:switch(this.strm.avail_in>0&&(e=this.strm.next_in),this.gzip_id_bytes_read){case 0:if(null===e)break;if(31!==this.strm.input[e]){this.mode=t.INFLATE;break}if(this.gzip_id_bytes_read=1,e++,1===this.strm.avail_in)break;case 1:if(null===e)break;139===this.strm.input[e]?(this.gzip_id_bytes_read=2,this.mode=t.GUNZIP):this.mode=t.INFLATE;break;default:throw new Error("invalid number of gzip magic number bytes read")}case t.INFLATE:case t.GUNZIP:case t.INFLATERAW:for(this.err=l.inflate(this.strm,this.flush),this.err===t.Z_NEED_DICT&&this.dictionary&&(this.err=l.inflateSetDictionary(this.strm,this.dictionary),this.err===t.Z_OK?this.err=l.inflate(this.strm,this.flush):this.err===t.Z_DATA_ERROR&&(this.err=t.Z_NEED_DICT));this.strm.avail_in>0&&this.mode===t.GUNZIP&&this.err===t.Z_STREAM_END&&0!==this.strm.next_in[0];)this.reset(),this.err=l.inflate(this.strm,this.flush);break;default:throw new Error("Unknown mode "+this.mode)}},d.prototype._checkError=function(){switch(this.err){case t.Z_OK:case t.Z_BUF_ERROR:if(0!==this.strm.avail_out&&this.flush===t.Z_FINISH)return this._error("unexpected end of file"),!1;break;case t.Z_STREAM_END:break;case t.Z_NEED_DICT:return null==this.dictionary?this._error("Missing dictionary"):this._error("Bad dictionary"),!1;default:return this._error("Zlib error"),!1}return!0},d.prototype._after=function(){if(this._checkError()){var e=this.strm.avail_out,t=this.strm.avail_in;this.write_in_progress=!1,this.callback(t,e),this.pending_close&&this.close()}},d.prototype._error=function(e){this.strm.msg&&(e=this.strm.msg),this.onerror(e,this.err),this.write_in_progress=!1,this.pending_close&&this.close()},d.prototype.init=function(e,n,a,i,o){r(4===arguments.length||5===arguments.length,"init(windowBits, level, memLevel, strategy, [dictionary])"),r(e>=8&&e<=15,"invalid windowBits"),r(n>=-1&&n<=9,"invalid compression level"),r(a>=1&&a<=9,"invalid memlevel"),r(i===t.Z_FILTERED||i===t.Z_HUFFMAN_ONLY||i===t.Z_RLE||i===t.Z_FIXED||i===t.Z_DEFAULT_STRATEGY,"invalid strategy"),this._init(n,e,a,i,o),this._setDictionary()},d.prototype.params=function(){throw new Error("deflateParams Not supported")},d.prototype.reset=function(){this._reset(),this._setDictionary()},d.prototype._init=function(e,n,a,r,s){switch(this.level=e,this.windowBits=n,this.memLevel=a,this.strategy=r,this.flush=t.Z_NO_FLUSH,this.err=t.Z_OK,this.mode!==t.GZIP&&this.mode!==t.GUNZIP||(this.windowBits+=16),this.mode===t.UNZIP&&(this.windowBits+=32),this.mode!==t.DEFLATERAW&&this.mode!==t.INFLATERAW||(this.windowBits=-1*this.windowBits),this.strm=new i,this.mode){case t.DEFLATE:case t.GZIP:case t.DEFLATERAW:this.err=o.deflateInit2(this.strm,this.level,t.Z_DEFLATED,this.windowBits,this.memLevel,this.strategy);break;case t.INFLATE:case t.GUNZIP:case t.INFLATERAW:case t.UNZIP:this.err=l.inflateInit2(this.strm,this.windowBits);break;default:throw new Error("Unknown mode "+this.mode)}this.err!==t.Z_OK&&this._error("Init error"),this.dictionary=s,this.write_in_progress=!1,this.init_done=!0},d.prototype._setDictionary=function(){if(null!=this.dictionary){switch(this.err=t.Z_OK,this.mode){case t.DEFLATE:case t.DEFLATERAW:this.err=o.deflateSetDictionary(this.strm,this.dictionary)}this.err!==t.Z_OK&&this._error("Failed to set dictionary")}},d.prototype._reset=function(){switch(this.err=t.Z_OK,this.mode){case t.DEFLATE:case t.DEFLATERAW:case t.GZIP:this.err=o.deflateReset(this.strm);break;case t.INFLATE:case t.INFLATERAW:case t.GUNZIP:this.err=l.inflateReset(this.strm)}this.err!==t.Z_OK&&this._error("Failed to reset stream")},t.Zlib=d}).call(this,n(1).Buffer,n(3))},function(e,t,n){e.exports=n(19).PassThrough},function(e,t,n){e.exports=n(19).Transform},function(e,t,n){e.exports=n(2)},function(e,t,n){e.exports=n(18)},function(e,t,n){"use strict";e.exports=i;var a=n(31),r=n(6);function i(e){if(!(this instanceof i))return new i(e);a.call(this,e)}r.inherits=n(5),r.inherits(i,a),i.prototype._transform=function(e,t,n){n(null,e)}},function(e,t,n){(function(t){function n(e){try{if(!t.localStorage)return!1}catch(e){return!1}var n=t.localStorage[e];return null!=n&&"true"===String(n).toLowerCase()}e.exports=function(e,t){if(n("noDeprecation"))return e;var a=!1;return function(){if(!a){if(n("throwDeprecation"))throw new Error(t);n("traceDeprecation")?console.trace(t):console.warn(t),a=!0}return e.apply(this,arguments)}}}).call(this,n(0))},function(e,t,n){(function(e,t){!function(e,n){"use strict";if(!e.setImmediate){var a,r,i,o,l,s=1,u={},d=!1,c=e.document,f=Object.getPrototypeOf&&Object.getPrototypeOf(e);f=f&&f.setTimeout?f:e,"[object process]"==={}.toString.call(e.process)?a=function(e){t.nextTick(function(){m(e)})}:function(){if(e.postMessage&&!e.importScripts){var t=!0,n=e.onmessage;return e.onmessage=function(){t=!1},e.postMessage("","*"),e.onmessage=n,t}}()?(o="setImmediate$"+Math.random()+"$",l=function(t){t.source===e&&"string"==typeof t.data&&0===t.data.indexOf(o)&&m(+t.data.slice(o.length))},e.addEventListener?e.addEventListener("message",l,!1):e.attachEvent("onmessage",l),a=function(t){e.postMessage(o+t,"*")}):e.MessageChannel?((i=new MessageChannel).port1.onmessage=function(e){m(e.data)},a=function(e){i.port2.postMessage(e)}):c&&"onreadystatechange"in c.createElement("script")?(r=c.documentElement,a=function(e){var t=c.createElement("script");t.onreadystatechange=function(){m(e),t.onreadystatechange=null,r.removeChild(t),t=null},r.appendChild(t)}):a=function(e){setTimeout(m,0,e)},f.setImmediate=function(e){"function"!=typeof e&&(e=new Function(""+e));for(var t=new Array(arguments.length-1),n=0;n<t.length;n++)t[n]=arguments[n+1];var r={callback:e,args:t};return u[s]=r,a(s),s++},f.clearImmediate=h}function h(e){delete u[e]}function m(e){if(d)setTimeout(m,0,e);else{var t=u[e];if(t){d=!0;try{!function(e){var t=e.callback,a=e.args;switch(a.length){case 0:t();break;case 1:t(a[0]);break;case 2:t(a[0],a[1]);break;case 3:t(a[0],a[1],a[2]);break;default:t.apply(n,a)}}(t)}finally{h(e),d=!1}}}}}("undefined"==typeof self?void 0===e?this:e:self)}).call(this,n(0),n(3))},function(e,t,n){(function(e){var a=Function.prototype.apply;function r(e,t){this._id=e,this._clearFn=t}t.setTimeout=function(){return new r(a.call(setTimeout,window,arguments),clearTimeout)},t.setInterval=function(){return new r(a.call(setInterval,window,arguments),clearInterval)},t.clearTimeout=t.clearInterval=function(e){e&&e.close()},r.prototype.unref=r.prototype.ref=function(){},r.prototype.close=function(){this._clearFn.call(window,this._id)},t.enroll=function(e,t){clearTimeout(e._idleTimeoutId),e._idleTimeout=t},t.unenroll=function(e){clearTimeout(e._idleTimeoutId),e._idleTimeout=-1},t._unrefActive=t.active=function(e){clearTimeout(e._idleTimeoutId);var t=e._idleTimeout;t>=0&&(e._idleTimeoutId=setTimeout(function(){e._onTimeout&&e._onTimeout()},t))},n(62),t.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==e&&e.setImmediate||this&&this.setImmediate,t.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==e&&e.clearImmediate||this&&this.clearImmediate}).call(this,n(0))},function(e,t){},function(e,t,n){"use strict";var a=n(9).Buffer,r=n(64);e.exports=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.head=null,this.tail=null,this.length=0}return e.prototype.push=function(e){var t={data:e,next:null};this.length>0?this.tail.next=t:this.head=t,this.tail=t,++this.length},e.prototype.unshift=function(e){var t={data:e,next:this.head};0===this.length&&(this.tail=t),this.head=t,++this.length},e.prototype.shift=function(){if(0!==this.length){var e=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,e}},e.prototype.clear=function(){this.head=this.tail=null,this.length=0},e.prototype.join=function(e){if(0===this.length)return"";for(var t=this.head,n=""+t.data;t=t.next;)n+=e+t.data;return n},e.prototype.concat=function(e){if(0===this.length)return a.alloc(0);if(1===this.length)return this.head.data;for(var t,n,r,i=a.allocUnsafe(e>>>0),o=this.head,l=0;o;)t=o.data,n=i,r=l,t.copy(n,r),l+=o.data.length,o=o.next;return i},e}(),r&&r.inspect&&r.inspect.custom&&(e.exports.prototype[r.inspect.custom]=function(){var e=r.inspect({length:this.length});return this.constructor.name+" "+e})},function(e,t){},function(e,t,n){e.exports=r;var a=n(20).EventEmitter;function r(){a.call(this)}n(5)(r,a),r.Readable=n(19),r.Writable=n(59),r.Duplex=n(58),r.Transform=n(57),r.PassThrough=n(56),r.Stream=r,r.prototype.pipe=function(e,t){var n=this;function r(t){e.writable&&!1===e.write(t)&&n.pause&&n.pause()}function i(){n.readable&&n.resume&&n.resume()}n.on("data",r),e.on("drain",i),e._isStdio||t&&!1===t.end||(n.on("end",l),n.on("close",s));var o=!1;function l(){o||(o=!0,e.end())}function s(){o||(o=!0,"function"==typeof e.destroy&&e.destroy())}function u(e){if(d(),0===a.listenerCount(this,"error"))throw e}function d(){n.removeListener("data",r),e.removeListener("drain",i),n.removeListener("end",l),n.removeListener("close",s),n.removeListener("error",u),e.removeListener("error",u),n.removeListener("end",d),n.removeListener("close",d),e.removeListener("close",d)}return n.on("error",u),e.on("error",u),n.on("end",d),n.on("close",d),e.on("close",d),e.emit("pipe",n),e}},function(e,t,n){"use strict";(function(e){var a=n(1).Buffer,r=n(67).Transform,i=n(55),o=n(29),l=n(30).ok,s=n(1).kMaxLength,u="Cannot create final Buffer. It would be larger than 0x"+s.toString(16)+" bytes";i.Z_MIN_WINDOWBITS=8,i.Z_MAX_WINDOWBITS=15,i.Z_DEFAULT_WINDOWBITS=15,i.Z_MIN_CHUNK=64,i.Z_MAX_CHUNK=1/0,i.Z_DEFAULT_CHUNK=16384,i.Z_MIN_MEMLEVEL=1,i.Z_MAX_MEMLEVEL=9,i.Z_DEFAULT_MEMLEVEL=8,i.Z_MIN_LEVEL=-1,i.Z_MAX_LEVEL=9,i.Z_DEFAULT_LEVEL=i.Z_DEFAULT_COMPRESSION;for(var d=Object.keys(i),c=0;c<d.length;c++){var f=d[c];f.match(/^Z/)&&Object.defineProperty(t,f,{enumerable:!0,value:i[f],writable:!1})}for(var h={Z_OK:i.Z_OK,Z_STREAM_END:i.Z_STREAM_END,Z_NEED_DICT:i.Z_NEED_DICT,Z_ERRNO:i.Z_ERRNO,Z_STREAM_ERROR:i.Z_STREAM_ERROR,Z_DATA_ERROR:i.Z_DATA_ERROR,Z_MEM_ERROR:i.Z_MEM_ERROR,Z_BUF_ERROR:i.Z_BUF_ERROR,Z_VERSION_ERROR:i.Z_VERSION_ERROR},m=Object.keys(h),v=0;v<m.length;v++){var g=m[v];h[h[g]]=g}function p(e,t,n){var r=[],i=0;function o(){for(var t;null!==(t=e.read());)r.push(t),i+=t.length;e.once("readable",o)}function l(){var t,o=null;i>=s?o=new RangeError(u):t=a.concat(r,i),r=[],e.close(),n(o,t)}e.on("error",function(t){e.removeListener("end",l),e.removeListener("readable",o),n(t)}),e.on("end",l),e.end(t),o()}function b(e,t){if("string"==typeof t&&(t=a.from(t)),!a.isBuffer(t))throw new TypeError("Not a string or buffer");var n=e._finishFlushFlag;return e._processChunk(t,n)}function y(e){if(!(this instanceof y))return new y(e);S.call(this,e,i.DEFLATE)}function w(e){if(!(this instanceof w))return new w(e);S.call(this,e,i.INFLATE)}function _(e){if(!(this instanceof _))return new _(e);S.call(this,e,i.GZIP)}function E(e){if(!(this instanceof E))return new E(e);S.call(this,e,i.GUNZIP)}function x(e){if(!(this instanceof x))return new x(e);S.call(this,e,i.DEFLATERAW)}function T(e){if(!(this instanceof T))return new T(e);S.call(this,e,i.INFLATERAW)}function P(e){if(!(this instanceof P))return new P(e);S.call(this,e,i.UNZIP)}function O(e){return e===i.Z_NO_FLUSH||e===i.Z_PARTIAL_FLUSH||e===i.Z_SYNC_FLUSH||e===i.Z_FULL_FLUSH||e===i.Z_FINISH||e===i.Z_BLOCK}function S(e,n){var o=this;if(this._opts=e=e||{},this._chunkSize=e.chunkSize||t.Z_DEFAULT_CHUNK,r.call(this,e),e.flush&&!O(e.flush))throw new Error("Invalid flush flag: "+e.flush);if(e.finishFlush&&!O(e.finishFlush))throw new Error("Invalid flush flag: "+e.finishFlush);if(this._flushFlag=e.flush||i.Z_NO_FLUSH,this._finishFlushFlag=void 0!==e.finishFlush?e.finishFlush:i.Z_FINISH,e.chunkSize&&(e.chunkSize<t.Z_MIN_CHUNK||e.chunkSize>t.Z_MAX_CHUNK))throw new Error("Invalid chunk size: "+e.chunkSize);if(e.windowBits&&(e.windowBits<t.Z_MIN_WINDOWBITS||e.windowBits>t.Z_MAX_WINDOWBITS))throw new Error("Invalid windowBits: "+e.windowBits);if(e.level&&(e.level<t.Z_MIN_LEVEL||e.level>t.Z_MAX_LEVEL))throw new Error("Invalid compression level: "+e.level);if(e.memLevel&&(e.memLevel<t.Z_MIN_MEMLEVEL||e.memLevel>t.Z_MAX_MEMLEVEL))throw new Error("Invalid memLevel: "+e.memLevel);if(e.strategy&&e.strategy!=t.Z_FILTERED&&e.strategy!=t.Z_HUFFMAN_ONLY&&e.strategy!=t.Z_RLE&&e.strategy!=t.Z_FIXED&&e.strategy!=t.Z_DEFAULT_STRATEGY)throw new Error("Invalid strategy: "+e.strategy);if(e.dictionary&&!a.isBuffer(e.dictionary))throw new Error("Invalid dictionary: it should be a Buffer instance");this._handle=new i.Zlib(n);var l=this;this._hadError=!1,this._handle.onerror=function(e,n){I(l),l._hadError=!0;var a=new Error(e);a.errno=n,a.code=t.codes[n],l.emit("error",a)};var s=t.Z_DEFAULT_COMPRESSION;"number"==typeof e.level&&(s=e.level);var u=t.Z_DEFAULT_STRATEGY;"number"==typeof e.strategy&&(u=e.strategy),this._handle.init(e.windowBits||t.Z_DEFAULT_WINDOWBITS,s,e.memLevel||t.Z_DEFAULT_MEMLEVEL,u,e.dictionary),this._buffer=a.allocUnsafe(this._chunkSize),this._offset=0,this._level=s,this._strategy=u,this.once("end",this.close),Object.defineProperty(this,"_closed",{get:function(){return!o._handle},configurable:!0,enumerable:!0})}function I(t,n){n&&e.nextTick(n),t._handle&&(t._handle.close(),t._handle=null)}function M(e){e.emit("close")}Object.defineProperty(t,"codes",{enumerable:!0,value:Object.freeze(h),writable:!1}),t.Deflate=y,t.Inflate=w,t.Gzip=_,t.Gunzip=E,t.DeflateRaw=x,t.InflateRaw=T,t.Unzip=P,t.createDeflate=function(e){return new y(e)},t.createInflate=function(e){return new w(e)},t.createDeflateRaw=function(e){return new x(e)},t.createInflateRaw=function(e){return new T(e)},t.createGzip=function(e){return new _(e)},t.createGunzip=function(e){return new E(e)},t.createUnzip=function(e){return new P(e)},t.deflate=function(e,t,n){return"function"==typeof t&&(n=t,t={}),p(new y(t),e,n)},t.deflateSync=function(e,t){return b(new y(t),e)},t.gzip=function(e,t,n){return"function"==typeof t&&(n=t,t={}),p(new _(t),e,n)},t.gzipSync=function(e,t){return b(new _(t),e)},t.deflateRaw=function(e,t,n){return"function"==typeof t&&(n=t,t={}),p(new x(t),e,n)},t.deflateRawSync=function(e,t){return b(new x(t),e)},t.unzip=function(e,t,n){return"function"==typeof t&&(n=t,t={}),p(new P(t),e,n)},t.unzipSync=function(e,t){return b(new P(t),e)},t.inflate=function(e,t,n){return"function"==typeof t&&(n=t,t={}),p(new w(t),e,n)},t.inflateSync=function(e,t){return b(new w(t),e)},t.gunzip=function(e,t,n){return"function"==typeof t&&(n=t,t={}),p(new E(t),e,n)},t.gunzipSync=function(e,t){return b(new E(t),e)},t.inflateRaw=function(e,t,n){return"function"==typeof t&&(n=t,t={}),p(new T(t),e,n)},t.inflateRawSync=function(e,t){return b(new T(t),e)},o.inherits(S,r),S.prototype.params=function(n,a,r){if(n<t.Z_MIN_LEVEL||n>t.Z_MAX_LEVEL)throw new RangeError("Invalid compression level: "+n);if(a!=t.Z_FILTERED&&a!=t.Z_HUFFMAN_ONLY&&a!=t.Z_RLE&&a!=t.Z_FIXED&&a!=t.Z_DEFAULT_STRATEGY)throw new TypeError("Invalid strategy: "+a);if(this._level!==n||this._strategy!==a){var o=this;this.flush(i.Z_SYNC_FLUSH,function(){l(o._handle,"zlib binding closed"),o._handle.params(n,a),o._hadError||(o._level=n,o._strategy=a,r&&r())})}else e.nextTick(r)},S.prototype.reset=function(){return l(this._handle,"zlib binding closed"),this._handle.reset()},S.prototype._flush=function(e){this._transform(a.alloc(0),"",e)},S.prototype.flush=function(t,n){var r=this,o=this._writableState;("function"==typeof t||void 0===t&&!n)&&(n=t,t=i.Z_FULL_FLUSH),o.ended?n&&e.nextTick(n):o.ending?n&&this.once("end",n):o.needDrain?n&&this.once("drain",function(){return r.flush(t,n)}):(this._flushFlag=t,this.write(a.alloc(0),"",n))},S.prototype.close=function(t){I(this,t),e.nextTick(M,this)},S.prototype._transform=function(e,t,n){var r,o=this._writableState,l=(o.ending||o.ended)&&(!e||o.length===e.length);return null===e||a.isBuffer(e)?this._handle?(l?r=this._finishFlushFlag:(r=this._flushFlag,e.length>=o.length&&(this._flushFlag=this._opts.flush||i.Z_NO_FLUSH)),void this._processChunk(e,r,n)):n(new Error("zlib binding closed")):n(new Error("invalid input"))},S.prototype._processChunk=function(e,t,n){var r=e&&e.length,i=this._chunkSize-this._offset,o=0,d=this,c="function"==typeof n;if(!c){var f,h=[],m=0;this.on("error",function(e){f=e}),l(this._handle,"zlib binding closed");do{var v=this._handle.writeSync(t,e,o,r,this._buffer,this._offset,i)}while(!this._hadError&&b(v[0],v[1]));if(this._hadError)throw f;if(m>=s)throw I(this),new RangeError(u);var g=a.concat(h,m);return I(this),g}l(this._handle,"zlib binding closed");var p=this._handle.write(t,e,o,r,this._buffer,this._offset,i);function b(s,u){if(this&&(this.buffer=null,this.callback=null),!d._hadError){var f=i-u;if(l(f>=0,"have should not go down"),f>0){var v=d._buffer.slice(d._offset,d._offset+f);d._offset+=f,c?d.push(v):(h.push(v),m+=v.length)}if((0===u||d._offset>=d._chunkSize)&&(i=d._chunkSize,d._offset=0,d._buffer=a.allocUnsafe(d._chunkSize)),0===u){if(o+=r-s,r=s,!c)return!0;var g=d._handle.write(t,e,o,r,d._buffer,d._offset,d._chunkSize);return g.callback=b,void(g.buffer=e)}if(!c)return!1;n()}}p.buffer=e,p.callback=b},o.inherits(y,S),o.inherits(w,S),o.inherits(_,S),o.inherits(E,S),o.inherits(x,S),o.inherits(T,S),o.inherits(P,S)}).call(this,n(3))},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,n){"use strict";(function(e){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(t,f){if(void 0===t)throw"dicomParser.parseDicom: missing required parameter 'byteArray'";return h=(0,s.default)(t,f),m=function(s){var h=function(e){if(void 0===e.elements.x00020010)throw"dicomParser.parseDicom: missing required meta header attribute 0002,0010";var n=e.elements.x00020010;return d.readFixedString(t,n.dataOffset,n.length)}(s),m=function(e){return"1.2.840.10008.1.2"!==e}(h),v=function(o,s){if("1.2.840.10008.1.2.1.99"===o){if(f&&f.inflater){var d=f.inflater(t,s);return new i.default(l.default,d,0)}if(void 0!==e&&this.module!==e){var c=n(68),h=(0,u.default)(t,s,t.length-s),m=c.inflateRawSync(h),v=(0,a.default)(t,m.length+s);return t.copy(v,0,0,s),m.copy(v,s),new i.default(l.default,v,0)}if("undefined"!=typeof pako){var g=t.slice(s),p=pako.inflateRaw(g),b=(0,a.default)(t,p.length+s);return b.set(t.slice(0,s),0),b.set(p,s),new i.default(l.default,b,0)}throw"dicomParser.parseDicom: no inflater available to handle deflate transfer syntax"}return"1.2.840.10008.1.2.2"===o?new i.default(r.default,t,s):new i.default(l.default,t,s)}(h,s.position),g=new o.default(v.byteArrayParser,v.byteArray,{});g.warnings=v.warnings;try{m?c.parseDicomDataSetExplicit(g,v,v.byteArray.length,f):c.parseDicomDataSetImplicit(g,v,v.byteArray.length,f)}catch(e){var p={exception:e,dataSet:g};throw p}return g}(h),function(e,t){for(var n in e.elements)e.elements.hasOwnProperty(n)&&(t.elements[n]=e.elements[n]);return void 0!==e.warnings&&(t.warnings=e.warnings.concat(t.warnings)),t}(h,m);var h,m};var a=h(n(22)),r=h(n(37)),i=h(n(12)),o=h(n(7)),l=h(n(21)),s=h(n(36)),u=h(n(11)),d=f(n(14)),c=f(n(16));function f(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}function h(e){return e&&e.__esModule?e:{default:e}}}).call(this,n(69)(e))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default="1.8.1"},function(e,t){t.read=function(e,t,n,a,r){var i,o,l=8*r-a-1,s=(1<<l)-1,u=s>>1,d=-7,c=n?r-1:0,f=n?-1:1,h=e[t+c];for(c+=f,i=h&(1<<-d)-1,h>>=-d,d+=l;d>0;i=256*i+e[t+c],c+=f,d-=8);for(o=i&(1<<-d)-1,i>>=-d,d+=a;d>0;o=256*o+e[t+c],c+=f,d-=8);if(0===i)i=1-u;else{if(i===s)return o?NaN:1/0*(h?-1:1);o+=Math.pow(2,a),i-=u}return(h?-1:1)*o*Math.pow(2,i-a)},t.write=function(e,t,n,a,r,i){var o,l,s,u=8*i-r-1,d=(1<<u)-1,c=d>>1,f=23===r?Math.pow(2,-24)-Math.pow(2,-77):0,h=a?0:i-1,m=a?1:-1,v=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(l=isNaN(t)?1:0,o=d):(o=Math.floor(Math.log(t)/Math.LN2),t*(s=Math.pow(2,-o))<1&&(o--,s*=2),(t+=o+c>=1?f/s:f*Math.pow(2,1-c))*s>=2&&(o++,s/=2),o+c>=d?(l=0,o=d):o+c>=1?(l=(t*s-1)*Math.pow(2,r),o+=c):(l=t*Math.pow(2,c-1)*Math.pow(2,r),o=0));r>=8;e[n+h]=255&l,h+=m,l/=256,r-=8);for(o=o<<r|l,u+=r;u>0;e[n+h]=255&o,h+=m,o/=256,u-=8);e[n+h-m]|=128*v}},function(e,t,n){"use strict";t.byteLength=function(e){return 3*e.length/4-u(e)},t.toByteArray=function(e){var t,n,a,o,l,s=e.length;o=u(e),l=new i(3*s/4-o),n=o>0?s-4:s;var d=0;for(t=0;t<n;t+=4)a=r[e.charCodeAt(t)]<<18|r[e.charCodeAt(t+1)]<<12|r[e.charCodeAt(t+2)]<<6|r[e.charCodeAt(t+3)],l[d++]=a>>16&255,l[d++]=a>>8&255,l[d++]=255&a;return 2===o?(a=r[e.charCodeAt(t)]<<2|r[e.charCodeAt(t+1)]>>4,l[d++]=255&a):1===o&&(a=r[e.charCodeAt(t)]<<10|r[e.charCodeAt(t+1)]<<4|r[e.charCodeAt(t+2)]>>2,l[d++]=a>>8&255,l[d++]=255&a),l},t.fromByteArray=function(e){for(var t,n=e.length,r=n%3,i="",o=[],l=0,s=n-r;l<s;l+=16383)o.push(d(e,l,l+16383>s?s:l+16383));return 1===r?(t=e[n-1],i+=a[t>>2],i+=a[t<<4&63],i+="=="):2===r&&(t=(e[n-2]<<8)+e[n-1],i+=a[t>>10],i+=a[t>>4&63],i+=a[t<<2&63],i+="="),o.push(i),o.join("")};for(var a=[],r=[],i="undefined"!=typeof Uint8Array?Uint8Array:Array,o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",l=0,s=o.length;l<s;++l)a[l]=o[l],r[o.charCodeAt(l)]=l;function u(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");return"="===e[t-2]?2:"="===e[t-1]?1:0}function d(e,t,n){for(var r,i,o=[],l=t;l<n;l+=3)r=(e[l]<<16&16711680)+(e[l+1]<<8&65280)+(255&e[l+2]),o.push(a[(i=r)>>18&63]+a[i>>12&63]+a[i>>6&63]+a[63&i]);return o.join("")}r["-".charCodeAt(0)]=62,r["_".charCodeAt(0)]=63},function(e,t,n){"use strict";function a(e,t){return 255===e.byteArray[t]&&217===e.byteArray[t+1]}function r(e,t,n){var r=t.fragments[n];return!(!a(e,r.position+r.length-2)&&!a(e,r.position+r.length-3))}function i(e,t,n){for(var a=n;a<t.fragments.length;a++)if(r(e,t,a))return a}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){if(void 0===e)throw"dicomParser.createJPEGBasicOffsetTable: missing required parameter dataSet";if(void 0===t)throw"dicomParser.createJPEGBasicOffsetTable: missing required parameter pixelDataElement";if("x7fe00010"!==t.tag)throw"dicomParser.createJPEGBasicOffsetTable: parameter 'pixelDataElement' refers to non pixel data tag (expected tag = x7fe00010'";if(!0!==t.encapsulatedPixelData)throw"dicomParser.createJPEGBasicOffsetTable: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data";if(!0!==t.hadUndefinedLength)throw"dicomParser.createJPEGBasicOffsetTable: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data";if(void 0===t.basicOffsetTable)throw"dicomParser.createJPEGBasicOffsetTable: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data";if(void 0===t.fragments)throw"dicomParser.createJPEGBasicOffsetTable: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data";if(t.fragments.length<=0)throw"dicomParser.createJPEGBasicOffsetTable: parameter 'pixelDataElement' refers to pixel data element that does not have encapsulated pixel data";if(n&&n.length<=0)throw"dicomParser.createJPEGBasicOffsetTable: parameter 'fragments' must not be zero length";n=n||t.fragments;for(var a=[],r=0;;){a.push(t.fragments[r].offset);var o=i(e,t,r);if(void 0===o||o===t.fragments.length-1)return a;r=o+1}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function e(t,n){if(void 0===t)throw"dicomParser.explicitDataSetToJS: missing required parameter dataSet";n=n||{omitPrivateAttibutes:!0,maxElementLength:128};var a={};for(var r in t.elements){var l=t.elements[r];if(!0!==n.omitPrivateAttibutes||!o.isPrivateTag(r))if(l.items){for(var s=[],u=0;u<l.items.length;u++)s.push(e(l.items[u].dataSet,n));a[r]=s}else{var d;d=void 0,l.length<n.maxElementLength&&(d=(0,i.default)(t,l)),a[r]=void 0!==d?d:{dataOffset:l.dataOffset,length:l.length}}}return a};var a,r=n(43),i=(a=r)&&a.__esModule?a:{default:a},o=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(25))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(e&&8===e.length){var n=parseInt(e.substring(0,4),10),a=parseInt(e.substring(4,6),10),r=parseInt(e.substring(6,8),10);if(t&&!0!==function(e,t,n){return!isNaN(n)&&t>0&&t<=12&&e>0&&e<=function(e,t){switch(e){case 2:return t%4==0&&t%100||t%400==0?29:28;case 9:case 4:case 6:case 11:return 30;default:return 31}}(t,n)}(r,a,n))throw"invalid DA '"+e+"'";return{year:n,month:a,day:r}}if(t)throw"invalid DA '"+e+"'"}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(e.length>=2){var n=parseInt(e.substring(0,2),10),a=e.length>=4?parseInt(e.substring(2,4),10):void 0,r=e.length>=6?parseInt(e.substring(4,6),10):void 0,i=e.length>=8?parseInt(e.substring(7,13),10):void 0;if(t&&(isNaN(n)||void 0!==a&&isNaN(a)||void 0!==r&&isNaN(r)||void 0!==i&&isNaN(i)||n<0||n>23||a&&(a<0||a>59)||r&&(r<0||r>59)||i&&(i<0||i>999999)))throw"invalid TM '"+e+"'";return{hours:n,minutes:a,seconds:r,fractionalSeconds:i}}if(t)throw"invalid TM '"+e+"'"}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(25);Object.keys(a).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return a[e]}})});var r=n(77);Object.defineProperty(t,"parseTM",{enumerable:!0,get:function(){return u(r).default}});var i=n(76);Object.defineProperty(t,"parseDA",{enumerable:!0,get:function(){return u(i).default}});var o=n(43);Object.defineProperty(t,"explicitElementToString",{enumerable:!0,get:function(){return u(o).default}});var l=n(75);Object.defineProperty(t,"explicitDataSetToJS",{enumerable:!0,get:function(){return u(l).default}});var s=n(74);function u(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"createJPEGBasicOffsetTable",{enumerable:!0,get:function(){return u(s).default}})},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(78);Object.keys(a).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return a[e]}})});var r=n(16);Object.keys(r).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return r[e]}})});var i=n(14);Object.keys(i).forEach(function(e){"default"!==e&&"__esModule"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return i[e]}})});var o=n(22);Object.defineProperty(t,"alloc",{enumerable:!0,get:function(){return S(o).default}});var l=n(71);Object.defineProperty(t,"version",{enumerable:!0,get:function(){return S(l).default}});var s=n(37);Object.defineProperty(t,"bigEndianByteArrayParser",{enumerable:!0,get:function(){return S(s).default}});var u=n(12);Object.defineProperty(t,"ByteStream",{enumerable:!0,get:function(){return S(u).default}});var d=n(11);Object.defineProperty(t,"sharedCopy",{enumerable:!0,get:function(){return S(d).default}});var c=n(7);Object.defineProperty(t,"DataSet",{enumerable:!0,get:function(){return S(c).default}});var f=n(41);Object.defineProperty(t,"findAndSetUNElementLength",{enumerable:!0,get:function(){return S(f).default}});var h=n(42);Object.defineProperty(t,"findEndOfEncapsulatedElement",{enumerable:!0,get:function(){return S(h).default}});var m=n(24);Object.defineProperty(t,"findItemDelimitationItemAndSetElementLength",{enumerable:!0,get:function(){return S(m).default}});var v=n(21);Object.defineProperty(t,"littleEndianByteArrayParser",{enumerable:!0,get:function(){return S(v).default}});var g=n(70);Object.defineProperty(t,"parseDicom",{enumerable:!0,get:function(){return S(g).default}});var p=n(15);Object.defineProperty(t,"readDicomElementExplicit",{enumerable:!0,get:function(){return S(p).default}});var b=n(23);Object.defineProperty(t,"readDicomElementImplicit",{enumerable:!0,get:function(){return S(b).default}});var y=n(26);Object.defineProperty(t,"readEncapsulatedImageFrame",{enumerable:!0,get:function(){return S(y).default}});var w=n(44);Object.defineProperty(t,"readEncapsulatedPixelData",{enumerable:!0,get:function(){return S(w).default}});var _=n(17);Object.defineProperty(t,"readEncapsulatedPixelDataFromFragments",{enumerable:!0,get:function(){return S(_).default}});var E=n(36);Object.defineProperty(t,"readPart10Header",{enumerable:!0,get:function(){return S(E).default}});var x=n(40);Object.defineProperty(t,"readSequenceItemsExplicit",{enumerable:!0,get:function(){return S(x).default}});var T=n(39);Object.defineProperty(t,"readSequenceItemsImplicit",{enumerable:!0,get:function(){return S(T).default}});var P=n(13);Object.defineProperty(t,"readSequenceItem",{enumerable:!0,get:function(){return S(P).default}});var O=n(4);function S(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"readTag",{enumerable:!0,get:function(){return S(O).default}})}])},function(e){e.exports={"ax-lung":["wadouri:http://localhost:8080/images/ax-lung/01.dcm","wadouri:http://localhost:8080/images/ax-lung/02.dcm","wadouri:http://localhost:8080/images/ax-lung/03.dcm","wadouri:http://localhost:8080/images/ax-lung/04.dcm","wadouri:http://localhost:8080/images/ax-lung/05.dcm","wadouri:http://localhost:8080/images/ax-lung/06.dcm","wadouri:http://localhost:8080/images/ax-lung/07.dcm","wadouri:http://localhost:8080/images/ax-lung/08.dcm","wadouri:http://localhost:8080/images/ax-lung/09.dcm","wadouri:http://localhost:8080/images/ax-lung/10.dcm","wadouri:http://localhost:8080/images/ax-lung/11.dcm","wadouri:http://localhost:8080/images/ax-lung/12.dcm","wadouri:http://localhost:8080/images/ax-lung/13.dcm","wadouri:http://localhost:8080/images/ax-lung/14.dcm","wadouri:http://localhost:8080/images/ax-lung/15.dcm","wadouri:http://localhost:8080/images/ax-lung/16.dcm","wadouri:http://localhost:8080/images/ax-lung/17.dcm","wadouri:http://localhost:8080/images/ax-lung/18.dcm","wadouri:http://localhost:8080/images/ax-lung/19.dcm","wadouri:http://localhost:8080/images/ax-lung/20.dcm","wadouri:http://localhost:8080/images/ax-lung/21.dcm","wadouri:http://localhost:8080/images/ax-lung/22.dcm","wadouri:http://localhost:8080/images/ax-lung/23.dcm","wadouri:http://localhost:8080/images/ax-lung/24.dcm","wadouri:http://localhost:8080/images/ax-lung/25.dcm","wadouri:http://localhost:8080/images/ax-lung/26.dcm","wadouri:http://localhost:8080/images/ax-lung/27.dcm","wadouri:http://localhost:8080/images/ax-lung/28.dcm","wadouri:http://localhost:8080/images/ax-lung/29.dcm"],"t1-brain":["wadouri:http://localhost:8080/images/t1-brain/001.dcm","wadouri:http://localhost:8080/images/t1-brain/002.dcm","wadouri:http://localhost:8080/images/t1-brain/003.dcm","wadouri:http://localhost:8080/images/t1-brain/004.dcm","wadouri:http://localhost:8080/images/t1-brain/005.dcm","wadouri:http://localhost:8080/images/t1-brain/006.dcm","wadouri:http://localhost:8080/images/t1-brain/007.dcm","wadouri:http://localhost:8080/images/t1-brain/008.dcm","wadouri:http://localhost:8080/images/t1-brain/009.dcm","wadouri:http://localhost:8080/images/t1-brain/010.dcm","wadouri:http://localhost:8080/images/t1-brain/011.dcm","wadouri:http://localhost:8080/images/t1-brain/012.dcm","wadouri:http://localhost:8080/images/t1-brain/013.dcm","wadouri:http://localhost:8080/images/t1-brain/014.dcm","wadouri:http://localhost:8080/images/t1-brain/015.dcm","wadouri:http://localhost:8080/images/t1-brain/016.dcm","wadouri:http://localhost:8080/images/t1-brain/017.dcm","wadouri:http://localhost:8080/images/t1-brain/018.dcm","wadouri:http://localhost:8080/images/t1-brain/019.dcm","wadouri:http://localhost:8080/images/t1-brain/020.dcm","wadouri:http://localhost:8080/images/t1-brain/021.dcm","wadouri:http://localhost:8080/images/t1-brain/022.dcm","wadouri:http://localhost:8080/images/t1-brain/023.dcm","wadouri:http://localhost:8080/images/t1-brain/024.dcm","wadouri:http://localhost:8080/images/t1-brain/025.dcm","wadouri:http://localhost:8080/images/t1-brain/026.dcm","wadouri:http://localhost:8080/images/t1-brain/027.dcm","wadouri:http://localhost:8080/images/t1-brain/028.dcm","wadouri:http://localhost:8080/images/t1-brain/029.dcm","wadouri:http://localhost:8080/images/t1-brain/030.dcm","wadouri:http://localhost:8080/images/t1-brain/031.dcm","wadouri:http://localhost:8080/images/t1-brain/032.dcm","wadouri:http://localhost:8080/images/t1-brain/033.dcm","wadouri:http://localhost:8080/images/t1-brain/034.dcm","wadouri:http://localhost:8080/images/t1-brain/035.dcm","wadouri:http://localhost:8080/images/t1-brain/036.dcm","wadouri:http://localhost:8080/images/t1-brain/037.dcm","wadouri:http://localhost:8080/images/t1-brain/038.dcm","wadouri:http://localhost:8080/images/t1-brain/039.dcm","wadouri:http://localhost:8080/images/t1-brain/040.dcm","wadouri:http://localhost:8080/images/t1-brain/041.dcm","wadouri:http://localhost:8080/images/t1-brain/042.dcm","wadouri:http://localhost:8080/images/t1-brain/043.dcm","wadouri:http://localhost:8080/images/t1-brain/044.dcm","wadouri:http://localhost:8080/images/t1-brain/045.dcm","wadouri:http://localhost:8080/images/t1-brain/046.dcm","wadouri:http://localhost:8080/images/t1-brain/047.dcm","wadouri:http://localhost:8080/images/t1-brain/048.dcm","wadouri:http://localhost:8080/images/t1-brain/049.dcm","wadouri:http://localhost:8080/images/t1-brain/050.dcm","wadouri:http://localhost:8080/images/t1-brain/051.dcm","wadouri:http://localhost:8080/images/t1-brain/052.dcm","wadouri:http://localhost:8080/images/t1-brain/053.dcm","wadouri:http://localhost:8080/images/t1-brain/054.dcm","wadouri:http://localhost:8080/images/t1-brain/055.dcm","wadouri:http://localhost:8080/images/t1-brain/056.dcm","wadouri:http://localhost:8080/images/t1-brain/057.dcm","wadouri:http://localhost:8080/images/t1-brain/058.dcm","wadouri:http://localhost:8080/images/t1-brain/059.dcm","wadouri:http://localhost:8080/images/t1-brain/060.dcm","wadouri:http://localhost:8080/images/t1-brain/061.dcm","wadouri:http://localhost:8080/images/t1-brain/062.dcm","wadouri:http://localhost:8080/images/t1-brain/063.dcm","wadouri:http://localhost:8080/images/t1-brain/064.dcm","wadouri:http://localhost:8080/images/t1-brain/065.dcm","wadouri:http://localhost:8080/images/t1-brain/066.dcm","wadouri:http://localhost:8080/images/t1-brain/067.dcm","wadouri:http://localhost:8080/images/t1-brain/068.dcm","wadouri:http://localhost:8080/images/t1-brain/069.dcm","wadouri:http://localhost:8080/images/t1-brain/070.dcm","wadouri:http://localhost:8080/images/t1-brain/071.dcm","wadouri:http://localhost:8080/images/t1-brain/072.dcm","wadouri:http://localhost:8080/images/t1-brain/073.dcm","wadouri:http://localhost:8080/images/t1-brain/074.dcm","wadouri:http://localhost:8080/images/t1-brain/075.dcm","wadouri:http://localhost:8080/images/t1-brain/076.dcm","wadouri:http://localhost:8080/images/t1-brain/077.dcm","wadouri:http://localhost:8080/images/t1-brain/078.dcm","wadouri:http://localhost:8080/images/t1-brain/079.dcm","wadouri:http://localhost:8080/images/t1-brain/080.dcm","wadouri:http://localhost:8080/images/t1-brain/081.dcm","wadouri:http://localhost:8080/images/t1-brain/082.dcm","wadouri:http://localhost:8080/images/t1-brain/083.dcm","wadouri:http://localhost:8080/images/t1-brain/084.dcm","wadouri:http://localhost:8080/images/t1-brain/085.dcm","wadouri:http://localhost:8080/images/t1-brain/086.dcm","wadouri:http://localhost:8080/images/t1-brain/087.dcm","wadouri:http://localhost:8080/images/t1-brain/088.dcm","wadouri:http://localhost:8080/images/t1-brain/089.dcm","wadouri:http://localhost:8080/images/t1-brain/090.dcm","wadouri:http://localhost:8080/images/t1-brain/091.dcm","wadouri:http://localhost:8080/images/t1-brain/092.dcm","wadouri:http://localhost:8080/images/t1-brain/093.dcm","wadouri:http://localhost:8080/images/t1-brain/094.dcm","wadouri:http://localhost:8080/images/t1-brain/095.dcm","wadouri:http://localhost:8080/images/t1-brain/096.dcm","wadouri:http://localhost:8080/images/t1-brain/097.dcm","wadouri:http://localhost:8080/images/t1-brain/098.dcm","wadouri:http://localhost:8080/images/t1-brain/099.dcm","wadouri:http://localhost:8080/images/t1-brain/100.dcm","wadouri:http://localhost:8080/images/t1-brain/101.dcm","wadouri:http://localhost:8080/images/t1-brain/102.dcm","wadouri:http://localhost:8080/images/t1-brain/103.dcm","wadouri:http://localhost:8080/images/t1-brain/104.dcm","wadouri:http://localhost:8080/images/t1-brain/105.dcm","wadouri:http://localhost:8080/images/t1-brain/106.dcm","wadouri:http://localhost:8080/images/t1-brain/107.dcm","wadouri:http://localhost:8080/images/t1-brain/108.dcm","wadouri:http://localhost:8080/images/t1-brain/109.dcm","wadouri:http://localhost:8080/images/t1-brain/110.dcm","wadouri:http://localhost:8080/images/t1-brain/111.dcm","wadouri:http://localhost:8080/images/t1-brain/112.dcm","wadouri:http://localhost:8080/images/t1-brain/113.dcm","wadouri:http://localhost:8080/images/t1-brain/114.dcm","wadouri:http://localhost:8080/images/t1-brain/115.dcm","wadouri:http://localhost:8080/images/t1-brain/116.dcm","wadouri:http://localhost:8080/images/t1-brain/117.dcm","wadouri:http://localhost:8080/images/t1-brain/118.dcm","wadouri:http://localhost:8080/images/t1-brain/119.dcm","wadouri:http://localhost:8080/images/t1-brain/120.dcm","wadouri:http://localhost:8080/images/t1-brain/121.dcm","wadouri:http://localhost:8080/images/t1-brain/122.dcm","wadouri:http://localhost:8080/images/t1-brain/123.dcm","wadouri:http://localhost:8080/images/t1-brain/124.dcm","wadouri:http://localhost:8080/images/t1-brain/125.dcm","wadouri:http://localhost:8080/images/t1-brain/126.dcm","wadouri:http://localhost:8080/images/t1-brain/127.dcm","wadouri:http://localhost:8080/images/t1-brain/128.dcm","wadouri:http://localhost:8080/images/t1-brain/129.dcm","wadouri:http://localhost:8080/images/t1-brain/130.dcm","wadouri:http://localhost:8080/images/t1-brain/131.dcm","wadouri:http://localhost:8080/images/t1-brain/132.dcm","wadouri:http://localhost:8080/images/t1-brain/133.dcm","wadouri:http://localhost:8080/images/t1-brain/134.dcm","wadouri:http://localhost:8080/images/t1-brain/135.dcm","wadouri:http://localhost:8080/images/t1-brain/136.dcm","wadouri:http://localhost:8080/images/t1-brain/137.dcm","wadouri:http://localhost:8080/images/t1-brain/138.dcm","wadouri:http://localhost:8080/images/t1-brain/139.dcm","wadouri:http://localhost:8080/images/t1-brain/140.dcm","wadouri:http://localhost:8080/images/t1-brain/141.dcm","wadouri:http://localhost:8080/images/t1-brain/142.dcm","wadouri:http://localhost:8080/images/t1-brain/143.dcm","wadouri:http://localhost:8080/images/t1-brain/144.dcm","wadouri:http://localhost:8080/images/t1-brain/145.dcm","wadouri:http://localhost:8080/images/t1-brain/146.dcm","wadouri:http://localhost:8080/images/t1-brain/147.dcm","wadouri:http://localhost:8080/images/t1-brain/148.dcm","wadouri:http://localhost:8080/images/t1-brain/149.dcm","wadouri:http://localhost:8080/images/t1-brain/150.dcm","wadouri:http://localhost:8080/images/t1-brain/151.dcm","wadouri:http://localhost:8080/images/t1-brain/152.dcm","wadouri:http://localhost:8080/images/t1-brain/153.dcm","wadouri:http://localhost:8080/images/t1-brain/154.dcm","wadouri:http://localhost:8080/images/t1-brain/155.dcm","wadouri:http://localhost:8080/images/t1-brain/156.dcm","wadouri:http://localhost:8080/images/t1-brain/157.dcm","wadouri:http://localhost:8080/images/t1-brain/158.dcm","wadouri:http://localhost:8080/images/t1-brain/159.dcm","wadouri:http://localhost:8080/images/t1-brain/160.dcm","wadouri:http://localhost:8080/images/t1-brain/161.dcm","wadouri:http://localhost:8080/images/t1-brain/162.dcm","wadouri:http://localhost:8080/images/t1-brain/163.dcm","wadouri:http://localhost:8080/images/t1-brain/164.dcm","wadouri:http://localhost:8080/images/t1-brain/165.dcm","wadouri:http://localhost:8080/images/t1-brain/166.dcm","wadouri:http://localhost:8080/images/t1-brain/167.dcm","wadouri:http://localhost:8080/images/t1-brain/168.dcm","wadouri:http://localhost:8080/images/t1-brain/169.dcm","wadouri:http://localhost:8080/images/t1-brain/170.dcm","wadouri:http://localhost:8080/images/t1-brain/171.dcm","wadouri:http://localhost:8080/images/t1-brain/172.dcm","wadouri:http://localhost:8080/images/t1-brain/173.dcm","wadouri:http://localhost:8080/images/t1-brain/174.dcm","wadouri:http://localhost:8080/images/t1-brain/175.dcm","wadouri:http://localhost:8080/images/t1-brain/176.dcm","wadouri:http://localhost:8080/images/t1-brain/177.dcm","wadouri:http://localhost:8080/images/t1-brain/178.dcm","wadouri:http://localhost:8080/images/t1-brain/179.dcm","wadouri:http://localhost:8080/images/t1-brain/180.dcm","wadouri:http://localhost:8080/images/t1-brain/181.dcm","wadouri:http://localhost:8080/images/t1-brain/182.dcm","wadouri:http://localhost:8080/images/t1-brain/183.dcm","wadouri:http://localhost:8080/images/t1-brain/184.dcm","wadouri:http://localhost:8080/images/t1-brain/185.dcm","wadouri:http://localhost:8080/images/t1-brain/186.dcm","wadouri:http://localhost:8080/images/t1-brain/187.dcm","wadouri:http://localhost:8080/images/t1-brain/188.dcm","wadouri:http://localhost:8080/images/t1-brain/189.dcm","wadouri:http://localhost:8080/images/t1-brain/190.dcm","wadouri:http://localhost:8080/images/t1-brain/191.dcm","wadouri:http://localhost:8080/images/t1-brain/192.dcm"]}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,